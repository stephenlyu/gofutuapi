// Code generated by protoc-gen-go. DO NOT EDIT.
// source: InitConnect.proto

/*
Package InitConnect is a generated protocol buffer package.

It is generated from these files:
	InitConnect.proto

It has these top-level messages:
	C2S
	S2C
	Request
	Response
*/
package InitConnect

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/stephenlyu/gofutuapi/futuproto/Common"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type C2S struct {
	ClientVer  *int32  `protobuf:"varint,1,req,name=clientVer" json:"clientVer,omitempty"`
	ClientID   *string `protobuf:"bytes,2,req,name=clientID" json:"clientID,omitempty"`
	RecvNotify *bool   `protobuf:"varint,3,opt,name=recvNotify" json:"recvNotify,omitempty"`
	// 如果通信要加密，首先得在FutuOpenD和客户端都配置RSA密钥，不配置始终不加密
	// 如果配置了RSA密钥且指定的加密算法不为PacketEncAlgo_None则加密(即便这里不设置，配置了RSA密钥，也会采用默认加密方式)，默认采用FTAES_ECB算法
	PacketEncAlgo    *int32 `protobuf:"varint,4,opt,name=packetEncAlgo" json:"packetEncAlgo,omitempty"`
	PushProtoFmt     *int32 `protobuf:"varint,5,opt,name=pushProtoFmt" json:"pushProtoFmt,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *C2S) Reset()                    { *m = C2S{} }
func (m *C2S) String() string            { return proto.CompactTextString(m) }
func (*C2S) ProtoMessage()               {}
func (*C2S) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *C2S) GetClientVer() int32 {
	if m != nil && m.ClientVer != nil {
		return *m.ClientVer
	}
	return 0
}

func (m *C2S) GetClientID() string {
	if m != nil && m.ClientID != nil {
		return *m.ClientID
	}
	return ""
}

func (m *C2S) GetRecvNotify() bool {
	if m != nil && m.RecvNotify != nil {
		return *m.RecvNotify
	}
	return false
}

func (m *C2S) GetPacketEncAlgo() int32 {
	if m != nil && m.PacketEncAlgo != nil {
		return *m.PacketEncAlgo
	}
	return 0
}

func (m *C2S) GetPushProtoFmt() int32 {
	if m != nil && m.PushProtoFmt != nil {
		return *m.PushProtoFmt
	}
	return 0
}

type S2C struct {
	ServerVer         *int32  `protobuf:"varint,1,req,name=serverVer" json:"serverVer,omitempty"`
	LoginUserID       *uint64 `protobuf:"varint,2,req,name=loginUserID" json:"loginUserID,omitempty"`
	ConnID            *uint64 `protobuf:"varint,3,req,name=connID" json:"connID,omitempty"`
	ConnAESKey        *string `protobuf:"bytes,4,req,name=connAESKey" json:"connAESKey,omitempty"`
	KeepAliveInterval *int32  `protobuf:"varint,5,req,name=keepAliveInterval" json:"keepAliveInterval,omitempty"`
	AesCBCiv          *string `protobuf:"bytes,6,opt,name=aesCBCiv" json:"aesCBCiv,omitempty"`
	XXX_unrecognized  []byte  `json:"-"`
}

func (m *S2C) Reset()                    { *m = S2C{} }
func (m *S2C) String() string            { return proto.CompactTextString(m) }
func (*S2C) ProtoMessage()               {}
func (*S2C) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *S2C) GetServerVer() int32 {
	if m != nil && m.ServerVer != nil {
		return *m.ServerVer
	}
	return 0
}

func (m *S2C) GetLoginUserID() uint64 {
	if m != nil && m.LoginUserID != nil {
		return *m.LoginUserID
	}
	return 0
}

func (m *S2C) GetConnID() uint64 {
	if m != nil && m.ConnID != nil {
		return *m.ConnID
	}
	return 0
}

func (m *S2C) GetConnAESKey() string {
	if m != nil && m.ConnAESKey != nil {
		return *m.ConnAESKey
	}
	return ""
}

func (m *S2C) GetKeepAliveInterval() int32 {
	if m != nil && m.KeepAliveInterval != nil {
		return *m.KeepAliveInterval
	}
	return 0
}

func (m *S2C) GetAesCBCiv() string {
	if m != nil && m.AesCBCiv != nil {
		return *m.AesCBCiv
	}
	return ""
}

type Request struct {
	C2S              *C2S   `protobuf:"bytes,1,req,name=c2s" json:"c2s,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *Request) Reset()                    { *m = Request{} }
func (m *Request) String() string            { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()               {}
func (*Request) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Request) GetC2S() *C2S {
	if m != nil {
		return m.C2S
	}
	return nil
}

type Response struct {
	RetType          *int32  `protobuf:"varint,1,req,name=retType,def=-400" json:"retType,omitempty"`
	RetMsg           *string `protobuf:"bytes,2,opt,name=retMsg" json:"retMsg,omitempty"`
	ErrCode          *int32  `protobuf:"varint,3,opt,name=errCode" json:"errCode,omitempty"`
	S2C              *S2C    `protobuf:"bytes,4,opt,name=s2c" json:"s2c,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Response) Reset()                    { *m = Response{} }
func (m *Response) String() string            { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()               {}
func (*Response) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

const Default_Response_RetType int32 = -400

func (m *Response) GetRetType() int32 {
	if m != nil && m.RetType != nil {
		return *m.RetType
	}
	return Default_Response_RetType
}

func (m *Response) GetRetMsg() string {
	if m != nil && m.RetMsg != nil {
		return *m.RetMsg
	}
	return ""
}

func (m *Response) GetErrCode() int32 {
	if m != nil && m.ErrCode != nil {
		return *m.ErrCode
	}
	return 0
}

func (m *Response) GetS2C() *S2C {
	if m != nil {
		return m.S2C
	}
	return nil
}

func init() {
	proto.RegisterType((*C2S)(nil), "InitConnect.C2S")
	proto.RegisterType((*S2C)(nil), "InitConnect.S2C")
	proto.RegisterType((*Request)(nil), "InitConnect.Request")
	proto.RegisterType((*Response)(nil), "InitConnect.Response")
}

func init() { proto.RegisterFile("InitConnect.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 428 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x92, 0x4f, 0x6f, 0xd3, 0x30,
	0x18, 0xc6, 0x95, 0xa6, 0x59, 0xbb, 0xb7, 0x43, 0x62, 0x46, 0x42, 0xd6, 0x84, 0xa6, 0x28, 0xe2,
	0xd0, 0x03, 0x4b, 0xa7, 0x08, 0x2e, 0xdc, 0xba, 0x6c, 0x48, 0x15, 0x7f, 0x84, 0x1c, 0xe0, 0xc0,
	0x2d, 0x33, 0xef, 0xd2, 0x68, 0x89, 0x6d, 0x6c, 0x27, 0x52, 0x6f, 0x7c, 0x1d, 0x3e, 0x09, 0x5f,
	0x0b, 0xd9, 0x6d, 0x47, 0xca, 0x4e, 0xc9, 0xf3, 0x7b, 0xac, 0xf8, 0x79, 0xde, 0x37, 0x70, 0xba,
	0x12, 0xb5, 0xcd, 0xa5, 0x10, 0xc8, 0x6d, 0xaa, 0xb4, 0xb4, 0x92, 0xcc, 0x06, 0xe8, 0xec, 0x24,
	0x97, 0x6d, 0x2b, 0xc5, 0xd6, 0x4a, 0x7e, 0x07, 0x10, 0xe6, 0x59, 0x41, 0x5e, 0xc0, 0x31, 0x6f,
	0x6a, 0x14, 0xf6, 0x1b, 0x6a, 0x1a, 0xc4, 0xa3, 0x79, 0xc4, 0xfe, 0x01, 0x72, 0x06, 0xd3, 0xad,
	0x58, 0x5d, 0xd3, 0x51, 0x3c, 0x9a, 0x1f, 0xb3, 0x07, 0x4d, 0xce, 0x01, 0x34, 0xf2, 0xfe, 0x93,
	0xb4, 0xf5, 0xdd, 0x86, 0x86, 0x71, 0x30, 0x9f, 0xb2, 0x01, 0x21, 0x2f, 0xe1, 0x89, 0x2a, 0xf9,
	0x3d, 0xda, 0x1b, 0xc1, 0x97, 0x4d, 0x25, 0xe9, 0x38, 0x0e, 0xe6, 0x11, 0x3b, 0x84, 0x24, 0x81,
	0x13, 0xd5, 0x99, 0xf5, 0x67, 0x17, 0xea, 0x5d, 0x6b, 0x69, 0xe4, 0x0f, 0x1d, 0xb0, 0xe4, 0x4f,
	0x00, 0x61, 0x91, 0xe5, 0x2e, 0xab, 0x41, 0xdd, 0xa3, 0x1e, 0x64, 0x7d, 0x00, 0x24, 0x86, 0x59,
	0x23, 0xab, 0x5a, 0x7c, 0x35, 0xa8, 0x77, 0x71, 0xc7, 0x6c, 0x88, 0xc8, 0x73, 0x38, 0xe2, 0x52,
	0x88, 0xd5, 0x35, 0x0d, 0xbd, 0xb9, 0x53, 0xae, 0x89, 0x7b, 0x5b, 0xde, 0x14, 0xef, 0x71, 0x43,
	0xc7, 0xbe, 0xe7, 0x80, 0x90, 0x57, 0x70, 0x7a, 0x8f, 0xa8, 0x96, 0x4d, 0xdd, 0xe3, 0x4a, 0x58,
	0xd4, 0x7d, 0xd9, 0xd0, 0xc8, 0xdf, 0xff, 0xd8, 0x70, 0x33, 0x2b, 0xd1, 0xe4, 0x57, 0x79, 0xdd,
	0xd3, 0xa3, 0x38, 0x70, 0x33, 0xdb, 0xeb, 0xe4, 0x02, 0x26, 0x0c, 0x7f, 0x76, 0x68, 0x2c, 0x49,
	0x20, 0xe4, 0x99, 0xf1, 0x35, 0x66, 0xd9, 0xd3, 0x74, 0xb8, 0xbc, 0x3c, 0x2b, 0x98, 0x33, 0x93,
	0x5f, 0x01, 0x4c, 0x19, 0x1a, 0x25, 0x85, 0x41, 0x72, 0x0e, 0x13, 0x8d, 0xf6, 0xcb, 0x46, 0xe1,
	0xb6, 0xfb, 0xdb, 0xf1, 0xc5, 0xeb, 0xcb, 0x4b, 0xb6, 0x87, 0xae, 0x9d, 0x46, 0xfb, 0xd1, 0x54,
	0x74, 0xe4, 0x6f, 0xdd, 0x29, 0x42, 0x61, 0x82, 0x5a, 0xe7, 0xf2, 0x07, 0xfa, 0x25, 0x45, 0x6c,
	0x2f, 0x5d, 0x04, 0x93, 0x71, 0xbf, 0x97, 0xff, 0x23, 0x14, 0x59, 0xce, 0x9c, 0x79, 0xf5, 0x01,
	0x9e, 0x71, 0xd9, 0xa6, 0x77, 0x9d, 0xed, 0x52, 0xa9, 0x50, 0x94, 0xaa, 0x4e, 0xd5, 0xed, 0xf7,
	0x37, 0x55, 0x6d, 0xd7, 0xdd, 0x6d, 0xca, 0x65, 0xbb, 0x30, 0x16, 0xd5, 0x1a, 0x45, 0xb3, 0xe9,
	0x16, 0x95, 0x74, 0x07, 0x4b, 0x55, 0x2f, 0xdc, 0xd3, 0xff, 0x69, 0x8b, 0xc1, 0x67, 0xff, 0x06,
	0x00, 0x00, 0xff, 0xff, 0x4b, 0x34, 0xac, 0x38, 0xa4, 0x02, 0x00, 0x00,
}
