// Code generated by protoc-gen-go. DO NOT EDIT.
// source: Qot_GetCodeChange.proto

/*
Package Qot_GetCodeChange is a generated protocol buffer package.

It is generated from these files:
	Qot_GetCodeChange.proto

It has these top-level messages:
	CodeChangeInfo
	TimeFilter
	C2S
	S2C
	Request
	Response
*/
package Qot_GetCodeChange

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/stephenlyu/gofutuapi/futuproto/Common"
import Qot_Common "github.com/stephenlyu/gofutuapi/futuproto/Qot_Common"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type CodeChangeType int32

const (
	CodeChangeType_CodeChangeType_Unkown     CodeChangeType = 0
	CodeChangeType_CodeChangeType_GemToMain  CodeChangeType = 1
	CodeChangeType_CodeChangeType_Unpaid     CodeChangeType = 2
	CodeChangeType_CodeChangeType_ChangeLot  CodeChangeType = 3
	CodeChangeType_CodeChangeType_Split      CodeChangeType = 4
	CodeChangeType_CodeChangeType_Joint      CodeChangeType = 5
	CodeChangeType_CodeChangeType_JointSplit CodeChangeType = 6
	CodeChangeType_CodeChangeType_SplitJoint CodeChangeType = 7
	CodeChangeType_CodeChangeType_Other      CodeChangeType = 8
)

var CodeChangeType_name = map[int32]string{
	0: "CodeChangeType_Unkown",
	1: "CodeChangeType_GemToMain",
	2: "CodeChangeType_Unpaid",
	3: "CodeChangeType_ChangeLot",
	4: "CodeChangeType_Split",
	5: "CodeChangeType_Joint",
	6: "CodeChangeType_JointSplit",
	7: "CodeChangeType_SplitJoint",
	8: "CodeChangeType_Other",
}
var CodeChangeType_value = map[string]int32{
	"CodeChangeType_Unkown":     0,
	"CodeChangeType_GemToMain":  1,
	"CodeChangeType_Unpaid":     2,
	"CodeChangeType_ChangeLot":  3,
	"CodeChangeType_Split":      4,
	"CodeChangeType_Joint":      5,
	"CodeChangeType_JointSplit": 6,
	"CodeChangeType_SplitJoint": 7,
	"CodeChangeType_Other":      8,
}

func (x CodeChangeType) Enum() *CodeChangeType {
	p := new(CodeChangeType)
	*p = x
	return p
}
func (x CodeChangeType) String() string {
	return proto.EnumName(CodeChangeType_name, int32(x))
}
func (x *CodeChangeType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CodeChangeType_value, data, "CodeChangeType")
	if err != nil {
		return err
	}
	*x = CodeChangeType(value)
	return nil
}
func (CodeChangeType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type TimeFilterType int32

const (
	TimeFilterType_TimeFilterType_Unknow    TimeFilterType = 0
	TimeFilterType_TimeFilterType_Public    TimeFilterType = 1
	TimeFilterType_TimeFilterType_Effective TimeFilterType = 2
	TimeFilterType_TimeFilterType_End       TimeFilterType = 3
)

var TimeFilterType_name = map[int32]string{
	0: "TimeFilterType_Unknow",
	1: "TimeFilterType_Public",
	2: "TimeFilterType_Effective",
	3: "TimeFilterType_End",
}
var TimeFilterType_value = map[string]int32{
	"TimeFilterType_Unknow":    0,
	"TimeFilterType_Public":    1,
	"TimeFilterType_Effective": 2,
	"TimeFilterType_End":       3,
}

func (x TimeFilterType) Enum() *TimeFilterType {
	p := new(TimeFilterType)
	*p = x
	return p
}
func (x TimeFilterType) String() string {
	return proto.EnumName(TimeFilterType_name, int32(x))
}
func (x *TimeFilterType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(TimeFilterType_value, data, "TimeFilterType")
	if err != nil {
		return err
	}
	*x = TimeFilterType(value)
	return nil
}
func (TimeFilterType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type CodeChangeInfo struct {
	Type               *int32               `protobuf:"varint,1,req,name=type" json:"type,omitempty"`
	Security           *Qot_Common.Security `protobuf:"bytes,2,req,name=security" json:"security,omitempty"`
	RelatedSecurity    *Qot_Common.Security `protobuf:"bytes,3,req,name=relatedSecurity" json:"relatedSecurity,omitempty"`
	PublicTime         *string              `protobuf:"bytes,4,opt,name=publicTime" json:"publicTime,omitempty"`
	PublicTimestamp    *float64             `protobuf:"fixed64,5,opt,name=publicTimestamp" json:"publicTimestamp,omitempty"`
	EffectiveTime      *string              `protobuf:"bytes,6,opt,name=effectiveTime" json:"effectiveTime,omitempty"`
	EffectiveTimestamp *float64             `protobuf:"fixed64,7,opt,name=effectiveTimestamp" json:"effectiveTimestamp,omitempty"`
	EndTime            *string              `protobuf:"bytes,8,opt,name=endTime" json:"endTime,omitempty"`
	EndTimestamp       *float64             `protobuf:"fixed64,9,opt,name=endTimestamp" json:"endTimestamp,omitempty"`
	XXX_unrecognized   []byte               `json:"-"`
}

func (m *CodeChangeInfo) Reset()                    { *m = CodeChangeInfo{} }
func (m *CodeChangeInfo) String() string            { return proto.CompactTextString(m) }
func (*CodeChangeInfo) ProtoMessage()               {}
func (*CodeChangeInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *CodeChangeInfo) GetType() int32 {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return 0
}

func (m *CodeChangeInfo) GetSecurity() *Qot_Common.Security {
	if m != nil {
		return m.Security
	}
	return nil
}

func (m *CodeChangeInfo) GetRelatedSecurity() *Qot_Common.Security {
	if m != nil {
		return m.RelatedSecurity
	}
	return nil
}

func (m *CodeChangeInfo) GetPublicTime() string {
	if m != nil && m.PublicTime != nil {
		return *m.PublicTime
	}
	return ""
}

func (m *CodeChangeInfo) GetPublicTimestamp() float64 {
	if m != nil && m.PublicTimestamp != nil {
		return *m.PublicTimestamp
	}
	return 0
}

func (m *CodeChangeInfo) GetEffectiveTime() string {
	if m != nil && m.EffectiveTime != nil {
		return *m.EffectiveTime
	}
	return ""
}

func (m *CodeChangeInfo) GetEffectiveTimestamp() float64 {
	if m != nil && m.EffectiveTimestamp != nil {
		return *m.EffectiveTimestamp
	}
	return 0
}

func (m *CodeChangeInfo) GetEndTime() string {
	if m != nil && m.EndTime != nil {
		return *m.EndTime
	}
	return ""
}

func (m *CodeChangeInfo) GetEndTimestamp() float64 {
	if m != nil && m.EndTimestamp != nil {
		return *m.EndTimestamp
	}
	return 0
}

type TimeFilter struct {
	Type             *int32  `protobuf:"varint,1,req,name=type" json:"type,omitempty"`
	BeginTime        *string `protobuf:"bytes,2,opt,name=beginTime" json:"beginTime,omitempty"`
	EndTime          *string `protobuf:"bytes,3,opt,name=endTime" json:"endTime,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *TimeFilter) Reset()                    { *m = TimeFilter{} }
func (m *TimeFilter) String() string            { return proto.CompactTextString(m) }
func (*TimeFilter) ProtoMessage()               {}
func (*TimeFilter) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *TimeFilter) GetType() int32 {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return 0
}

func (m *TimeFilter) GetBeginTime() string {
	if m != nil && m.BeginTime != nil {
		return *m.BeginTime
	}
	return ""
}

func (m *TimeFilter) GetEndTime() string {
	if m != nil && m.EndTime != nil {
		return *m.EndTime
	}
	return ""
}

type C2S struct {
	PlaceHolder      *int32                 `protobuf:"varint,1,opt,name=placeHolder" json:"placeHolder,omitempty"`
	SecurityList     []*Qot_Common.Security `protobuf:"bytes,2,rep,name=securityList" json:"securityList,omitempty"`
	TimeFilterList   []*TimeFilter          `protobuf:"bytes,3,rep,name=timeFilterList" json:"timeFilterList,omitempty"`
	TypeList         []int32                `protobuf:"varint,4,rep,name=typeList" json:"typeList,omitempty"`
	XXX_unrecognized []byte                 `json:"-"`
}

func (m *C2S) Reset()                    { *m = C2S{} }
func (m *C2S) String() string            { return proto.CompactTextString(m) }
func (*C2S) ProtoMessage()               {}
func (*C2S) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *C2S) GetPlaceHolder() int32 {
	if m != nil && m.PlaceHolder != nil {
		return *m.PlaceHolder
	}
	return 0
}

func (m *C2S) GetSecurityList() []*Qot_Common.Security {
	if m != nil {
		return m.SecurityList
	}
	return nil
}

func (m *C2S) GetTimeFilterList() []*TimeFilter {
	if m != nil {
		return m.TimeFilterList
	}
	return nil
}

func (m *C2S) GetTypeList() []int32 {
	if m != nil {
		return m.TypeList
	}
	return nil
}

type S2C struct {
	CodeChangeList   []*CodeChangeInfo `protobuf:"bytes,1,rep,name=codeChangeList" json:"codeChangeList,omitempty"`
	XXX_unrecognized []byte            `json:"-"`
}

func (m *S2C) Reset()                    { *m = S2C{} }
func (m *S2C) String() string            { return proto.CompactTextString(m) }
func (*S2C) ProtoMessage()               {}
func (*S2C) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *S2C) GetCodeChangeList() []*CodeChangeInfo {
	if m != nil {
		return m.CodeChangeList
	}
	return nil
}

type Request struct {
	C2S              *C2S   `protobuf:"bytes,1,req,name=c2s" json:"c2s,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *Request) Reset()                    { *m = Request{} }
func (m *Request) String() string            { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()               {}
func (*Request) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *Request) GetC2S() *C2S {
	if m != nil {
		return m.C2S
	}
	return nil
}

type Response struct {
	RetType          *int32  `protobuf:"varint,1,req,name=retType,def=-400" json:"retType,omitempty"`
	RetMsg           *string `protobuf:"bytes,2,opt,name=retMsg" json:"retMsg,omitempty"`
	ErrCode          *int32  `protobuf:"varint,3,opt,name=errCode" json:"errCode,omitempty"`
	S2C              *S2C    `protobuf:"bytes,4,opt,name=s2c" json:"s2c,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Response) Reset()                    { *m = Response{} }
func (m *Response) String() string            { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()               {}
func (*Response) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

const Default_Response_RetType int32 = -400

func (m *Response) GetRetType() int32 {
	if m != nil && m.RetType != nil {
		return *m.RetType
	}
	return Default_Response_RetType
}

func (m *Response) GetRetMsg() string {
	if m != nil && m.RetMsg != nil {
		return *m.RetMsg
	}
	return ""
}

func (m *Response) GetErrCode() int32 {
	if m != nil && m.ErrCode != nil {
		return *m.ErrCode
	}
	return 0
}

func (m *Response) GetS2C() *S2C {
	if m != nil {
		return m.S2C
	}
	return nil
}

func init() {
	proto.RegisterType((*CodeChangeInfo)(nil), "Qot_GetCodeChange.CodeChangeInfo")
	proto.RegisterType((*TimeFilter)(nil), "Qot_GetCodeChange.TimeFilter")
	proto.RegisterType((*C2S)(nil), "Qot_GetCodeChange.C2S")
	proto.RegisterType((*S2C)(nil), "Qot_GetCodeChange.S2C")
	proto.RegisterType((*Request)(nil), "Qot_GetCodeChange.Request")
	proto.RegisterType((*Response)(nil), "Qot_GetCodeChange.Response")
	proto.RegisterEnum("Qot_GetCodeChange.CodeChangeType", CodeChangeType_name, CodeChangeType_value)
	proto.RegisterEnum("Qot_GetCodeChange.TimeFilterType", TimeFilterType_name, TimeFilterType_value)
}

func init() { proto.RegisterFile("Qot_GetCodeChange.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 650 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x54, 0xcf, 0x6e, 0xd3, 0x4c,
	0x10, 0xaf, 0xed, 0xa4, 0x49, 0xa7, 0xfd, 0x52, 0x7f, 0x4b, 0x29, 0x6e, 0xd5, 0x56, 0x26, 0xe2,
	0x60, 0x55, 0xc2, 0xa9, 0x0c, 0x07, 0x04, 0x12, 0x07, 0xa2, 0x52, 0x8a, 0xa8, 0x28, 0x9b, 0x22,
	0x21, 0x2e, 0x95, 0xe3, 0x4c, 0x92, 0x15, 0xf6, 0xae, 0xb1, 0xd7, 0x54, 0x95, 0x38, 0x73, 0xe4,
	0xa9, 0x78, 0x24, 0x1e, 0x00, 0x79, 0x13, 0x27, 0xb1, 0x6b, 0x38, 0xd9, 0xf3, 0xfb, 0x37, 0xbb,
	0x3b, 0x6b, 0xc3, 0x83, 0x0f, 0x42, 0x5e, 0x9f, 0xa1, 0xec, 0x8b, 0x11, 0xf6, 0xa7, 0x3e, 0x9f,
	0xa0, 0x1b, 0x27, 0x42, 0x0a, 0xf2, 0xff, 0x1d, 0x62, 0x7f, 0xab, 0x2f, 0xa2, 0x48, 0xf0, 0x99,
	0x60, 0xdf, 0xcc, 0x05, 0xab, 0x48, 0xf7, 0xb7, 0x0e, 0x9d, 0xa5, 0xfc, 0x9c, 0x8f, 0x05, 0x21,
	0xd0, 0x90, 0xb7, 0x31, 0x5a, 0x9a, 0xad, 0x3b, 0x4d, 0xaa, 0xde, 0xc9, 0x09, 0xb4, 0x53, 0x0c,
	0xb2, 0x84, 0xc9, 0x5b, 0x4b, 0xb7, 0x75, 0x67, 0xd3, 0xdb, 0x71, 0x57, 0xb2, 0x06, 0x73, 0x8e,
	0x2e, 0x54, 0xe4, 0x25, 0x6c, 0x27, 0x18, 0xfa, 0x12, 0x47, 0x05, 0x69, 0x19, 0xff, 0x30, 0x56,
	0xc5, 0xe4, 0x08, 0x20, 0xce, 0x86, 0x21, 0x0b, 0xae, 0x58, 0x84, 0x56, 0xc3, 0xd6, 0x9c, 0x0d,
	0xba, 0x82, 0x10, 0x07, 0xb6, 0x97, 0x55, 0x2a, 0xfd, 0x28, 0xb6, 0x9a, 0xb6, 0xe6, 0x68, 0xb4,
	0x0a, 0x93, 0x47, 0xf0, 0x1f, 0x8e, 0xc7, 0x18, 0x48, 0xf6, 0x0d, 0x55, 0xd8, 0xba, 0x0a, 0x2b,
	0x83, 0xc4, 0x05, 0x52, 0x02, 0x66, 0x91, 0x2d, 0x15, 0x59, 0xc3, 0x10, 0x0b, 0x5a, 0xc8, 0x47,
	0x2a, 0xaf, 0xad, 0xf2, 0x8a, 0x92, 0x74, 0x61, 0x6b, 0xfe, 0x3a, 0xcb, 0xd8, 0x50, 0x19, 0x25,
	0xac, 0xfb, 0x09, 0x20, 0x2f, 0x5e, 0xb3, 0x50, 0x62, 0x52, 0x7b, 0xe2, 0x07, 0xb0, 0x31, 0xc4,
	0x09, 0xe3, 0xaa, 0x83, 0xae, 0x3a, 0x2c, 0x81, 0xd5, 0xee, 0x46, 0xa9, 0x7b, 0xf7, 0x97, 0x06,
	0x46, 0xdf, 0x1b, 0x10, 0x1b, 0x36, 0xe3, 0xd0, 0x0f, 0xf0, 0x8d, 0x08, 0x47, 0x98, 0x58, 0x9a,
	0xad, 0x39, 0x4d, 0xba, 0x0a, 0x91, 0x67, 0xb0, 0x55, 0x4c, 0xeb, 0x1d, 0x4b, 0xa5, 0xa5, 0xdb,
	0xc6, 0x5f, 0xc7, 0x53, 0x52, 0x92, 0x53, 0xe8, 0xc8, 0xc5, 0xea, 0x95, 0xd7, 0x50, 0xde, 0x43,
	0xf7, 0xee, 0xcd, 0x5c, 0x6e, 0x93, 0x56, 0x4c, 0x64, 0x1f, 0xda, 0xf9, 0x56, 0x55, 0x40, 0xc3,
	0x36, 0x9c, 0x26, 0x5d, 0xd4, 0xdd, 0x4b, 0x30, 0x06, 0x5e, 0x9f, 0x9c, 0x43, 0x27, 0x58, 0x64,
	0x29, 0xa1, 0xa6, 0x3a, 0x3d, 0xac, 0xe9, 0x54, 0xbe, 0xc6, 0xb4, 0x62, 0xec, 0x3e, 0x81, 0x16,
	0xc5, 0xaf, 0x19, 0xa6, 0x92, 0x38, 0x60, 0x04, 0x5e, 0xaa, 0x8e, 0x7b, 0xd3, 0xdb, 0xad, 0x8b,
	0xf2, 0x06, 0x34, 0x97, 0x74, 0x7f, 0x68, 0xd0, 0xa6, 0x98, 0xc6, 0x82, 0xa7, 0x48, 0x8e, 0xa0,
	0x95, 0xa0, 0xbc, 0x5a, 0x4c, 0xea, 0x79, 0xe3, 0xf1, 0xd3, 0x93, 0x13, 0x5a, 0x80, 0x64, 0x17,
	0xd6, 0x13, 0x94, 0x17, 0xe9, 0x64, 0x3e, 0xaf, 0x79, 0xa5, 0x86, 0x95, 0x24, 0x79, 0xbc, 0x1a,
	0x56, 0x93, 0x16, 0x65, 0xbe, 0x90, 0xd4, 0x0b, 0xd4, 0xed, 0xae, 0x5f, 0xc8, 0xc0, 0xeb, 0xd3,
	0x5c, 0x72, 0xfc, 0xb3, 0xf4, 0x9d, 0xaa, 0x76, 0x7b, 0x70, 0xbf, 0x8c, 0x5c, 0x7f, 0xe4, 0x5f,
	0xc4, 0x0d, 0x37, 0xd7, 0xc8, 0x01, 0x58, 0x15, 0xea, 0x0c, 0xa3, 0x2b, 0x71, 0xe1, 0x33, 0x6e,
	0x6a, 0xb5, 0xc6, 0xd8, 0x67, 0x23, 0x53, 0xaf, 0x31, 0xce, 0x4f, 0x50, 0x48, 0xd3, 0x20, 0x16,
	0xec, 0x54, 0xd8, 0x41, 0x1c, 0x32, 0x69, 0x36, 0x6a, 0x98, 0xb7, 0x82, 0x71, 0x69, 0x36, 0xc9,
	0x21, 0xec, 0xd5, 0x31, 0x33, 0xe3, 0x7a, 0x0d, 0xad, 0x98, 0x99, 0xbb, 0x55, 0x93, 0xfb, 0x5e,
	0x4e, 0x31, 0x31, 0xdb, 0xc7, 0xdf, 0xa1, 0xb3, 0xbc, 0x5a, 0xc5, 0x79, 0x94, 0x91, 0xfc, 0x3c,
	0xb8, 0xb8, 0x31, 0xd7, 0x6a, 0xa8, 0x4b, 0xf5, 0x93, 0x30, 0xb5, 0x7c, 0xc7, 0x15, 0xea, 0xb4,
	0xf8, 0xd8, 0x4d, 0x9d, 0xec, 0x02, 0xa9, 0xb2, 0x7c, 0x64, 0x1a, 0xaf, 0x28, 0xdc, 0x0b, 0x44,
	0xe4, 0x8e, 0x33, 0x99, 0xb9, 0x22, 0x46, 0xee, 0xc7, 0xcc, 0x8d, 0x87, 0x9f, 0x5f, 0x4c, 0x98,
	0x9c, 0x66, 0x43, 0x37, 0x10, 0x51, 0x2f, 0x95, 0x18, 0x4f, 0x91, 0x87, 0xb7, 0x59, 0x6f, 0x22,
	0x72, 0xa1, 0x1f, 0xb3, 0x5e, 0xfe, 0x54, 0x3f, 0xde, 0xde, 0x9d, 0x59, 0xff, 0x09, 0x00, 0x00,
	0xff, 0xff, 0x76, 0xf4, 0x0a, 0x0d, 0xd7, 0x05, 0x00, 0x00,
}
