// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Qot_StockFilter.proto

#ifndef PROTOBUF_Qot_5fStockFilter_2eproto__INCLUDED
#define PROTOBUF_Qot_5fStockFilter_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "Common.pb.h"
#include "Qot_Common.pb.h"
// @@protoc_insertion_point(includes)

namespace protobuf_Qot_5fStockFilter_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[11];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsBaseFilterImpl();
void InitDefaultsBaseFilter();
void InitDefaultsAccumulateFilterImpl();
void InitDefaultsAccumulateFilter();
void InitDefaultsFinancialFilterImpl();
void InitDefaultsFinancialFilter();
void InitDefaultsBaseDataImpl();
void InitDefaultsBaseData();
void InitDefaultsAccumulateDataImpl();
void InitDefaultsAccumulateData();
void InitDefaultsFinancialDataImpl();
void InitDefaultsFinancialData();
void InitDefaultsStockDataImpl();
void InitDefaultsStockData();
void InitDefaultsC2SImpl();
void InitDefaultsC2S();
void InitDefaultsS2CImpl();
void InitDefaultsS2C();
void InitDefaultsRequestImpl();
void InitDefaultsRequest();
void InitDefaultsResponseImpl();
void InitDefaultsResponse();
inline void InitDefaults() {
  InitDefaultsBaseFilter();
  InitDefaultsAccumulateFilter();
  InitDefaultsFinancialFilter();
  InitDefaultsBaseData();
  InitDefaultsAccumulateData();
  InitDefaultsFinancialData();
  InitDefaultsStockData();
  InitDefaultsC2S();
  InitDefaultsS2C();
  InitDefaultsRequest();
  InitDefaultsResponse();
}
}  // namespace protobuf_Qot_5fStockFilter_2eproto
namespace Qot_StockFilter {
class AccumulateData;
class AccumulateDataDefaultTypeInternal;
extern AccumulateDataDefaultTypeInternal _AccumulateData_default_instance_;
class AccumulateFilter;
class AccumulateFilterDefaultTypeInternal;
extern AccumulateFilterDefaultTypeInternal _AccumulateFilter_default_instance_;
class BaseData;
class BaseDataDefaultTypeInternal;
extern BaseDataDefaultTypeInternal _BaseData_default_instance_;
class BaseFilter;
class BaseFilterDefaultTypeInternal;
extern BaseFilterDefaultTypeInternal _BaseFilter_default_instance_;
class C2S;
class C2SDefaultTypeInternal;
extern C2SDefaultTypeInternal _C2S_default_instance_;
class FinancialData;
class FinancialDataDefaultTypeInternal;
extern FinancialDataDefaultTypeInternal _FinancialData_default_instance_;
class FinancialFilter;
class FinancialFilterDefaultTypeInternal;
extern FinancialFilterDefaultTypeInternal _FinancialFilter_default_instance_;
class Request;
class RequestDefaultTypeInternal;
extern RequestDefaultTypeInternal _Request_default_instance_;
class Response;
class ResponseDefaultTypeInternal;
extern ResponseDefaultTypeInternal _Response_default_instance_;
class S2C;
class S2CDefaultTypeInternal;
extern S2CDefaultTypeInternal _S2C_default_instance_;
class StockData;
class StockDataDefaultTypeInternal;
extern StockDataDefaultTypeInternal _StockData_default_instance_;
}  // namespace Qot_StockFilter
namespace Qot_StockFilter {

enum StockField {
  StockField_Unknown = 0,
  StockField_StockCode = 1,
  StockField_StockName = 2,
  StockField_CurPrice = 3,
  StockField_CurPriceToHighest52WeeksRatio = 4,
  StockField_CurPriceToLowest52WeeksRatio = 5,
  StockField_HighPriceToHighest52WeeksRatio = 6,
  StockField_LowPriceToLowest52WeeksRatio = 7,
  StockField_VolumeRatio = 8,
  StockField_BidAskRatio = 9,
  StockField_LotPrice = 10,
  StockField_MarketVal = 11,
  StockField_PeAnnual = 12,
  StockField_PeTTM = 13,
  StockField_PbRate = 14,
  StockField_ChangeRate5min = 15,
  StockField_ChangeRateBeginYear = 16
};
bool StockField_IsValid(int value);
const StockField StockField_MIN = StockField_Unknown;
const StockField StockField_MAX = StockField_ChangeRateBeginYear;
const int StockField_ARRAYSIZE = StockField_MAX + 1;

const ::google::protobuf::EnumDescriptor* StockField_descriptor();
inline const ::std::string& StockField_Name(StockField value) {
  return ::google::protobuf::internal::NameOfEnum(
    StockField_descriptor(), value);
}
inline bool StockField_Parse(
    const ::std::string& name, StockField* value) {
  return ::google::protobuf::internal::ParseNamedEnum<StockField>(
    StockField_descriptor(), name, value);
}
enum AccumulateField {
  AccumulateField_Unknown = 0,
  AccumulateField_ChangeRate = 1,
  AccumulateField_Amplitude = 2,
  AccumulateField_Volume = 3,
  AccumulateField_Turnover = 4,
  AccumulateField_TurnoverRate = 5
};
bool AccumulateField_IsValid(int value);
const AccumulateField AccumulateField_MIN = AccumulateField_Unknown;
const AccumulateField AccumulateField_MAX = AccumulateField_TurnoverRate;
const int AccumulateField_ARRAYSIZE = AccumulateField_MAX + 1;

const ::google::protobuf::EnumDescriptor* AccumulateField_descriptor();
inline const ::std::string& AccumulateField_Name(AccumulateField value) {
  return ::google::protobuf::internal::NameOfEnum(
    AccumulateField_descriptor(), value);
}
inline bool AccumulateField_Parse(
    const ::std::string& name, AccumulateField* value) {
  return ::google::protobuf::internal::ParseNamedEnum<AccumulateField>(
    AccumulateField_descriptor(), name, value);
}
enum FinancialField {
  FinancialField_Unknown = 0,
  FinancialField_NetProfit = 1,
  FinancialField_NetProfitGrowth = 2,
  FinancialField_SumOfBusiness = 3,
  FinancialField_SumOfBusinessGrowth = 4,
  FinancialField_NetProfitRate = 5,
  FinancialField_GrossProfitRate = 6,
  FinancialField_DebtAssetRate = 7,
  FinancialField_ReturnOnEquityRate = 8
};
bool FinancialField_IsValid(int value);
const FinancialField FinancialField_MIN = FinancialField_Unknown;
const FinancialField FinancialField_MAX = FinancialField_ReturnOnEquityRate;
const int FinancialField_ARRAYSIZE = FinancialField_MAX + 1;

const ::google::protobuf::EnumDescriptor* FinancialField_descriptor();
inline const ::std::string& FinancialField_Name(FinancialField value) {
  return ::google::protobuf::internal::NameOfEnum(
    FinancialField_descriptor(), value);
}
inline bool FinancialField_Parse(
    const ::std::string& name, FinancialField* value) {
  return ::google::protobuf::internal::ParseNamedEnum<FinancialField>(
    FinancialField_descriptor(), name, value);
}
enum FinancialQuarter {
  FinancialQuarter_Unknown = 0,
  FinancialQuarter_Annual = 1,
  FinancialQuarter_FirstQuarter = 2,
  FinancialQuarter_Interim = 3,
  FinancialQuarter_ThirdQuarter = 4,
  FinancialQuarter_MostRecentQuarter = 5
};
bool FinancialQuarter_IsValid(int value);
const FinancialQuarter FinancialQuarter_MIN = FinancialQuarter_Unknown;
const FinancialQuarter FinancialQuarter_MAX = FinancialQuarter_MostRecentQuarter;
const int FinancialQuarter_ARRAYSIZE = FinancialQuarter_MAX + 1;

const ::google::protobuf::EnumDescriptor* FinancialQuarter_descriptor();
inline const ::std::string& FinancialQuarter_Name(FinancialQuarter value) {
  return ::google::protobuf::internal::NameOfEnum(
    FinancialQuarter_descriptor(), value);
}
inline bool FinancialQuarter_Parse(
    const ::std::string& name, FinancialQuarter* value) {
  return ::google::protobuf::internal::ParseNamedEnum<FinancialQuarter>(
    FinancialQuarter_descriptor(), name, value);
}
enum SortDir {
  SortDir_No = 0,
  SortDir_Ascend = 1,
  SortDir_Descend = 2
};
bool SortDir_IsValid(int value);
const SortDir SortDir_MIN = SortDir_No;
const SortDir SortDir_MAX = SortDir_Descend;
const int SortDir_ARRAYSIZE = SortDir_MAX + 1;

const ::google::protobuf::EnumDescriptor* SortDir_descriptor();
inline const ::std::string& SortDir_Name(SortDir value) {
  return ::google::protobuf::internal::NameOfEnum(
    SortDir_descriptor(), value);
}
inline bool SortDir_Parse(
    const ::std::string& name, SortDir* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SortDir>(
    SortDir_descriptor(), name, value);
}
// ===================================================================

class BaseFilter : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Qot_StockFilter.BaseFilter) */ {
 public:
  BaseFilter();
  virtual ~BaseFilter();

  BaseFilter(const BaseFilter& from);

  inline BaseFilter& operator=(const BaseFilter& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BaseFilter(BaseFilter&& from) noexcept
    : BaseFilter() {
    *this = ::std::move(from);
  }

  inline BaseFilter& operator=(BaseFilter&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BaseFilter& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const BaseFilter* internal_default_instance() {
    return reinterpret_cast<const BaseFilter*>(
               &_BaseFilter_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(BaseFilter* other);
  friend void swap(BaseFilter& a, BaseFilter& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BaseFilter* New() const PROTOBUF_FINAL { return New(NULL); }

  BaseFilter* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BaseFilter& from);
  void MergeFrom(const BaseFilter& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BaseFilter* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional double filterMin = 2;
  bool has_filtermin() const;
  void clear_filtermin();
  static const int kFilterMinFieldNumber = 2;
  double filtermin() const;
  void set_filtermin(double value);

  // required int32 field = 1;
  bool has_field() const;
  void clear_field();
  static const int kFieldFieldNumber = 1;
  ::google::protobuf::int32 field() const;
  void set_field(::google::protobuf::int32 value);

  // optional bool isNoFilter = 4;
  bool has_isnofilter() const;
  void clear_isnofilter();
  static const int kIsNoFilterFieldNumber = 4;
  bool isnofilter() const;
  void set_isnofilter(bool value);

  // optional double filterMax = 3;
  bool has_filtermax() const;
  void clear_filtermax();
  static const int kFilterMaxFieldNumber = 3;
  double filtermax() const;
  void set_filtermax(double value);

  // optional int32 sortDir = 5;
  bool has_sortdir() const;
  void clear_sortdir();
  static const int kSortDirFieldNumber = 5;
  ::google::protobuf::int32 sortdir() const;
  void set_sortdir(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Qot_StockFilter.BaseFilter)
 private:
  void set_has_field();
  void clear_has_field();
  void set_has_filtermin();
  void clear_has_filtermin();
  void set_has_filtermax();
  void clear_has_filtermax();
  void set_has_isnofilter();
  void clear_has_isnofilter();
  void set_has_sortdir();
  void clear_has_sortdir();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  double filtermin_;
  ::google::protobuf::int32 field_;
  bool isnofilter_;
  double filtermax_;
  ::google::protobuf::int32 sortdir_;
  friend struct ::protobuf_Qot_5fStockFilter_2eproto::TableStruct;
  friend void ::protobuf_Qot_5fStockFilter_2eproto::InitDefaultsBaseFilterImpl();
};
// -------------------------------------------------------------------

class AccumulateFilter : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Qot_StockFilter.AccumulateFilter) */ {
 public:
  AccumulateFilter();
  virtual ~AccumulateFilter();

  AccumulateFilter(const AccumulateFilter& from);

  inline AccumulateFilter& operator=(const AccumulateFilter& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccumulateFilter(AccumulateFilter&& from) noexcept
    : AccumulateFilter() {
    *this = ::std::move(from);
  }

  inline AccumulateFilter& operator=(AccumulateFilter&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AccumulateFilter& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccumulateFilter* internal_default_instance() {
    return reinterpret_cast<const AccumulateFilter*>(
               &_AccumulateFilter_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(AccumulateFilter* other);
  friend void swap(AccumulateFilter& a, AccumulateFilter& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccumulateFilter* New() const PROTOBUF_FINAL { return New(NULL); }

  AccumulateFilter* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccumulateFilter& from);
  void MergeFrom(const AccumulateFilter& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccumulateFilter* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional double filterMin = 2;
  bool has_filtermin() const;
  void clear_filtermin();
  static const int kFilterMinFieldNumber = 2;
  double filtermin() const;
  void set_filtermin(double value);

  // required int32 field = 1;
  bool has_field() const;
  void clear_field();
  static const int kFieldFieldNumber = 1;
  ::google::protobuf::int32 field() const;
  void set_field(::google::protobuf::int32 value);

  // optional bool isNoFilter = 4;
  bool has_isnofilter() const;
  void clear_isnofilter();
  static const int kIsNoFilterFieldNumber = 4;
  bool isnofilter() const;
  void set_isnofilter(bool value);

  // optional double filterMax = 3;
  bool has_filtermax() const;
  void clear_filtermax();
  static const int kFilterMaxFieldNumber = 3;
  double filtermax() const;
  void set_filtermax(double value);

  // optional int32 sortDir = 5;
  bool has_sortdir() const;
  void clear_sortdir();
  static const int kSortDirFieldNumber = 5;
  ::google::protobuf::int32 sortdir() const;
  void set_sortdir(::google::protobuf::int32 value);

  // required int32 days = 6;
  bool has_days() const;
  void clear_days();
  static const int kDaysFieldNumber = 6;
  ::google::protobuf::int32 days() const;
  void set_days(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Qot_StockFilter.AccumulateFilter)
 private:
  void set_has_field();
  void clear_has_field();
  void set_has_filtermin();
  void clear_has_filtermin();
  void set_has_filtermax();
  void clear_has_filtermax();
  void set_has_isnofilter();
  void clear_has_isnofilter();
  void set_has_sortdir();
  void clear_has_sortdir();
  void set_has_days();
  void clear_has_days();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  double filtermin_;
  ::google::protobuf::int32 field_;
  bool isnofilter_;
  double filtermax_;
  ::google::protobuf::int32 sortdir_;
  ::google::protobuf::int32 days_;
  friend struct ::protobuf_Qot_5fStockFilter_2eproto::TableStruct;
  friend void ::protobuf_Qot_5fStockFilter_2eproto::InitDefaultsAccumulateFilterImpl();
};
// -------------------------------------------------------------------

class FinancialFilter : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Qot_StockFilter.FinancialFilter) */ {
 public:
  FinancialFilter();
  virtual ~FinancialFilter();

  FinancialFilter(const FinancialFilter& from);

  inline FinancialFilter& operator=(const FinancialFilter& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  FinancialFilter(FinancialFilter&& from) noexcept
    : FinancialFilter() {
    *this = ::std::move(from);
  }

  inline FinancialFilter& operator=(FinancialFilter&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FinancialFilter& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FinancialFilter* internal_default_instance() {
    return reinterpret_cast<const FinancialFilter*>(
               &_FinancialFilter_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(FinancialFilter* other);
  friend void swap(FinancialFilter& a, FinancialFilter& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline FinancialFilter* New() const PROTOBUF_FINAL { return New(NULL); }

  FinancialFilter* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FinancialFilter& from);
  void MergeFrom(const FinancialFilter& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FinancialFilter* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional double filterMin = 2;
  bool has_filtermin() const;
  void clear_filtermin();
  static const int kFilterMinFieldNumber = 2;
  double filtermin() const;
  void set_filtermin(double value);

  // required int32 field = 1;
  bool has_field() const;
  void clear_field();
  static const int kFieldFieldNumber = 1;
  ::google::protobuf::int32 field() const;
  void set_field(::google::protobuf::int32 value);

  // optional bool isNoFilter = 4;
  bool has_isnofilter() const;
  void clear_isnofilter();
  static const int kIsNoFilterFieldNumber = 4;
  bool isnofilter() const;
  void set_isnofilter(bool value);

  // optional double filterMax = 3;
  bool has_filtermax() const;
  void clear_filtermax();
  static const int kFilterMaxFieldNumber = 3;
  double filtermax() const;
  void set_filtermax(double value);

  // optional int32 sortDir = 5;
  bool has_sortdir() const;
  void clear_sortdir();
  static const int kSortDirFieldNumber = 5;
  ::google::protobuf::int32 sortdir() const;
  void set_sortdir(::google::protobuf::int32 value);

  // required int32 quarter = 6;
  bool has_quarter() const;
  void clear_quarter();
  static const int kQuarterFieldNumber = 6;
  ::google::protobuf::int32 quarter() const;
  void set_quarter(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Qot_StockFilter.FinancialFilter)
 private:
  void set_has_field();
  void clear_has_field();
  void set_has_filtermin();
  void clear_has_filtermin();
  void set_has_filtermax();
  void clear_has_filtermax();
  void set_has_isnofilter();
  void clear_has_isnofilter();
  void set_has_sortdir();
  void clear_has_sortdir();
  void set_has_quarter();
  void clear_has_quarter();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  double filtermin_;
  ::google::protobuf::int32 field_;
  bool isnofilter_;
  double filtermax_;
  ::google::protobuf::int32 sortdir_;
  ::google::protobuf::int32 quarter_;
  friend struct ::protobuf_Qot_5fStockFilter_2eproto::TableStruct;
  friend void ::protobuf_Qot_5fStockFilter_2eproto::InitDefaultsFinancialFilterImpl();
};
// -------------------------------------------------------------------

class BaseData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Qot_StockFilter.BaseData) */ {
 public:
  BaseData();
  virtual ~BaseData();

  BaseData(const BaseData& from);

  inline BaseData& operator=(const BaseData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BaseData(BaseData&& from) noexcept
    : BaseData() {
    *this = ::std::move(from);
  }

  inline BaseData& operator=(BaseData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BaseData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const BaseData* internal_default_instance() {
    return reinterpret_cast<const BaseData*>(
               &_BaseData_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(BaseData* other);
  friend void swap(BaseData& a, BaseData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BaseData* New() const PROTOBUF_FINAL { return New(NULL); }

  BaseData* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BaseData& from);
  void MergeFrom(const BaseData& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BaseData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required double value = 2;
  bool has_value() const;
  void clear_value();
  static const int kValueFieldNumber = 2;
  double value() const;
  void set_value(double value);

  // required int32 field = 1;
  bool has_field() const;
  void clear_field();
  static const int kFieldFieldNumber = 1;
  ::google::protobuf::int32 field() const;
  void set_field(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Qot_StockFilter.BaseData)
 private:
  void set_has_field();
  void clear_has_field();
  void set_has_value();
  void clear_has_value();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  double value_;
  ::google::protobuf::int32 field_;
  friend struct ::protobuf_Qot_5fStockFilter_2eproto::TableStruct;
  friend void ::protobuf_Qot_5fStockFilter_2eproto::InitDefaultsBaseDataImpl();
};
// -------------------------------------------------------------------

class AccumulateData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Qot_StockFilter.AccumulateData) */ {
 public:
  AccumulateData();
  virtual ~AccumulateData();

  AccumulateData(const AccumulateData& from);

  inline AccumulateData& operator=(const AccumulateData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccumulateData(AccumulateData&& from) noexcept
    : AccumulateData() {
    *this = ::std::move(from);
  }

  inline AccumulateData& operator=(AccumulateData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AccumulateData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccumulateData* internal_default_instance() {
    return reinterpret_cast<const AccumulateData*>(
               &_AccumulateData_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(AccumulateData* other);
  friend void swap(AccumulateData& a, AccumulateData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccumulateData* New() const PROTOBUF_FINAL { return New(NULL); }

  AccumulateData* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccumulateData& from);
  void MergeFrom(const AccumulateData& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccumulateData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required double value = 2;
  bool has_value() const;
  void clear_value();
  static const int kValueFieldNumber = 2;
  double value() const;
  void set_value(double value);

  // required int32 field = 1;
  bool has_field() const;
  void clear_field();
  static const int kFieldFieldNumber = 1;
  ::google::protobuf::int32 field() const;
  void set_field(::google::protobuf::int32 value);

  // required int32 days = 3;
  bool has_days() const;
  void clear_days();
  static const int kDaysFieldNumber = 3;
  ::google::protobuf::int32 days() const;
  void set_days(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Qot_StockFilter.AccumulateData)
 private:
  void set_has_field();
  void clear_has_field();
  void set_has_value();
  void clear_has_value();
  void set_has_days();
  void clear_has_days();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  double value_;
  ::google::protobuf::int32 field_;
  ::google::protobuf::int32 days_;
  friend struct ::protobuf_Qot_5fStockFilter_2eproto::TableStruct;
  friend void ::protobuf_Qot_5fStockFilter_2eproto::InitDefaultsAccumulateDataImpl();
};
// -------------------------------------------------------------------

class FinancialData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Qot_StockFilter.FinancialData) */ {
 public:
  FinancialData();
  virtual ~FinancialData();

  FinancialData(const FinancialData& from);

  inline FinancialData& operator=(const FinancialData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  FinancialData(FinancialData&& from) noexcept
    : FinancialData() {
    *this = ::std::move(from);
  }

  inline FinancialData& operator=(FinancialData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FinancialData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FinancialData* internal_default_instance() {
    return reinterpret_cast<const FinancialData*>(
               &_FinancialData_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(FinancialData* other);
  friend void swap(FinancialData& a, FinancialData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline FinancialData* New() const PROTOBUF_FINAL { return New(NULL); }

  FinancialData* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FinancialData& from);
  void MergeFrom(const FinancialData& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FinancialData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required double value = 2;
  bool has_value() const;
  void clear_value();
  static const int kValueFieldNumber = 2;
  double value() const;
  void set_value(double value);

  // required int32 field = 1;
  bool has_field() const;
  void clear_field();
  static const int kFieldFieldNumber = 1;
  ::google::protobuf::int32 field() const;
  void set_field(::google::protobuf::int32 value);

  // required int32 quarter = 3;
  bool has_quarter() const;
  void clear_quarter();
  static const int kQuarterFieldNumber = 3;
  ::google::protobuf::int32 quarter() const;
  void set_quarter(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Qot_StockFilter.FinancialData)
 private:
  void set_has_field();
  void clear_has_field();
  void set_has_value();
  void clear_has_value();
  void set_has_quarter();
  void clear_has_quarter();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  double value_;
  ::google::protobuf::int32 field_;
  ::google::protobuf::int32 quarter_;
  friend struct ::protobuf_Qot_5fStockFilter_2eproto::TableStruct;
  friend void ::protobuf_Qot_5fStockFilter_2eproto::InitDefaultsFinancialDataImpl();
};
// -------------------------------------------------------------------

class StockData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Qot_StockFilter.StockData) */ {
 public:
  StockData();
  virtual ~StockData();

  StockData(const StockData& from);

  inline StockData& operator=(const StockData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  StockData(StockData&& from) noexcept
    : StockData() {
    *this = ::std::move(from);
  }

  inline StockData& operator=(StockData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StockData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StockData* internal_default_instance() {
    return reinterpret_cast<const StockData*>(
               &_StockData_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(StockData* other);
  friend void swap(StockData& a, StockData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline StockData* New() const PROTOBUF_FINAL { return New(NULL); }

  StockData* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const StockData& from);
  void MergeFrom(const StockData& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(StockData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Qot_StockFilter.BaseData baseDataList = 3;
  int basedatalist_size() const;
  void clear_basedatalist();
  static const int kBaseDataListFieldNumber = 3;
  const ::Qot_StockFilter::BaseData& basedatalist(int index) const;
  ::Qot_StockFilter::BaseData* mutable_basedatalist(int index);
  ::Qot_StockFilter::BaseData* add_basedatalist();
  ::google::protobuf::RepeatedPtrField< ::Qot_StockFilter::BaseData >*
      mutable_basedatalist();
  const ::google::protobuf::RepeatedPtrField< ::Qot_StockFilter::BaseData >&
      basedatalist() const;

  // repeated .Qot_StockFilter.AccumulateData accumulateDataList = 4;
  int accumulatedatalist_size() const;
  void clear_accumulatedatalist();
  static const int kAccumulateDataListFieldNumber = 4;
  const ::Qot_StockFilter::AccumulateData& accumulatedatalist(int index) const;
  ::Qot_StockFilter::AccumulateData* mutable_accumulatedatalist(int index);
  ::Qot_StockFilter::AccumulateData* add_accumulatedatalist();
  ::google::protobuf::RepeatedPtrField< ::Qot_StockFilter::AccumulateData >*
      mutable_accumulatedatalist();
  const ::google::protobuf::RepeatedPtrField< ::Qot_StockFilter::AccumulateData >&
      accumulatedatalist() const;

  // repeated .Qot_StockFilter.FinancialData financialDataList = 5;
  int financialdatalist_size() const;
  void clear_financialdatalist();
  static const int kFinancialDataListFieldNumber = 5;
  const ::Qot_StockFilter::FinancialData& financialdatalist(int index) const;
  ::Qot_StockFilter::FinancialData* mutable_financialdatalist(int index);
  ::Qot_StockFilter::FinancialData* add_financialdatalist();
  ::google::protobuf::RepeatedPtrField< ::Qot_StockFilter::FinancialData >*
      mutable_financialdatalist();
  const ::google::protobuf::RepeatedPtrField< ::Qot_StockFilter::FinancialData >&
      financialdatalist() const;

  // required string name = 2;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // required .Qot_Common.Security security = 1;
  bool has_security() const;
  void clear_security();
  static const int kSecurityFieldNumber = 1;
  const ::Qot_Common::Security& security() const;
  ::Qot_Common::Security* release_security();
  ::Qot_Common::Security* mutable_security();
  void set_allocated_security(::Qot_Common::Security* security);

  // @@protoc_insertion_point(class_scope:Qot_StockFilter.StockData)
 private:
  void set_has_security();
  void clear_has_security();
  void set_has_name();
  void clear_has_name();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::Qot_StockFilter::BaseData > basedatalist_;
  ::google::protobuf::RepeatedPtrField< ::Qot_StockFilter::AccumulateData > accumulatedatalist_;
  ::google::protobuf::RepeatedPtrField< ::Qot_StockFilter::FinancialData > financialdatalist_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::Qot_Common::Security* security_;
  friend struct ::protobuf_Qot_5fStockFilter_2eproto::TableStruct;
  friend void ::protobuf_Qot_5fStockFilter_2eproto::InitDefaultsStockDataImpl();
};
// -------------------------------------------------------------------

class C2S : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Qot_StockFilter.C2S) */ {
 public:
  C2S();
  virtual ~C2S();

  C2S(const C2S& from);

  inline C2S& operator=(const C2S& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  C2S(C2S&& from) noexcept
    : C2S() {
    *this = ::std::move(from);
  }

  inline C2S& operator=(C2S&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2S& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const C2S* internal_default_instance() {
    return reinterpret_cast<const C2S*>(
               &_C2S_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(C2S* other);
  friend void swap(C2S& a, C2S& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline C2S* New() const PROTOBUF_FINAL { return New(NULL); }

  C2S* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const C2S& from);
  void MergeFrom(const C2S& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(C2S* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Qot_StockFilter.BaseFilter baseFilterList = 5;
  int basefilterlist_size() const;
  void clear_basefilterlist();
  static const int kBaseFilterListFieldNumber = 5;
  const ::Qot_StockFilter::BaseFilter& basefilterlist(int index) const;
  ::Qot_StockFilter::BaseFilter* mutable_basefilterlist(int index);
  ::Qot_StockFilter::BaseFilter* add_basefilterlist();
  ::google::protobuf::RepeatedPtrField< ::Qot_StockFilter::BaseFilter >*
      mutable_basefilterlist();
  const ::google::protobuf::RepeatedPtrField< ::Qot_StockFilter::BaseFilter >&
      basefilterlist() const;

  // repeated .Qot_StockFilter.AccumulateFilter accumulateFilterList = 6;
  int accumulatefilterlist_size() const;
  void clear_accumulatefilterlist();
  static const int kAccumulateFilterListFieldNumber = 6;
  const ::Qot_StockFilter::AccumulateFilter& accumulatefilterlist(int index) const;
  ::Qot_StockFilter::AccumulateFilter* mutable_accumulatefilterlist(int index);
  ::Qot_StockFilter::AccumulateFilter* add_accumulatefilterlist();
  ::google::protobuf::RepeatedPtrField< ::Qot_StockFilter::AccumulateFilter >*
      mutable_accumulatefilterlist();
  const ::google::protobuf::RepeatedPtrField< ::Qot_StockFilter::AccumulateFilter >&
      accumulatefilterlist() const;

  // repeated .Qot_StockFilter.FinancialFilter financialFilterList = 7;
  int financialfilterlist_size() const;
  void clear_financialfilterlist();
  static const int kFinancialFilterListFieldNumber = 7;
  const ::Qot_StockFilter::FinancialFilter& financialfilterlist(int index) const;
  ::Qot_StockFilter::FinancialFilter* mutable_financialfilterlist(int index);
  ::Qot_StockFilter::FinancialFilter* add_financialfilterlist();
  ::google::protobuf::RepeatedPtrField< ::Qot_StockFilter::FinancialFilter >*
      mutable_financialfilterlist();
  const ::google::protobuf::RepeatedPtrField< ::Qot_StockFilter::FinancialFilter >&
      financialfilterlist() const;

  // optional .Qot_Common.Security plate = 4;
  bool has_plate() const;
  void clear_plate();
  static const int kPlateFieldNumber = 4;
  const ::Qot_Common::Security& plate() const;
  ::Qot_Common::Security* release_plate();
  ::Qot_Common::Security* mutable_plate();
  void set_allocated_plate(::Qot_Common::Security* plate);

  // required int32 begin = 1;
  bool has_begin() const;
  void clear_begin();
  static const int kBeginFieldNumber = 1;
  ::google::protobuf::int32 begin() const;
  void set_begin(::google::protobuf::int32 value);

  // required int32 num = 2;
  bool has_num() const;
  void clear_num();
  static const int kNumFieldNumber = 2;
  ::google::protobuf::int32 num() const;
  void set_num(::google::protobuf::int32 value);

  // required int32 market = 3;
  bool has_market() const;
  void clear_market();
  static const int kMarketFieldNumber = 3;
  ::google::protobuf::int32 market() const;
  void set_market(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Qot_StockFilter.C2S)
 private:
  void set_has_begin();
  void clear_has_begin();
  void set_has_num();
  void clear_has_num();
  void set_has_market();
  void clear_has_market();
  void set_has_plate();
  void clear_has_plate();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::Qot_StockFilter::BaseFilter > basefilterlist_;
  ::google::protobuf::RepeatedPtrField< ::Qot_StockFilter::AccumulateFilter > accumulatefilterlist_;
  ::google::protobuf::RepeatedPtrField< ::Qot_StockFilter::FinancialFilter > financialfilterlist_;
  ::Qot_Common::Security* plate_;
  ::google::protobuf::int32 begin_;
  ::google::protobuf::int32 num_;
  ::google::protobuf::int32 market_;
  friend struct ::protobuf_Qot_5fStockFilter_2eproto::TableStruct;
  friend void ::protobuf_Qot_5fStockFilter_2eproto::InitDefaultsC2SImpl();
};
// -------------------------------------------------------------------

class S2C : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Qot_StockFilter.S2C) */ {
 public:
  S2C();
  virtual ~S2C();

  S2C(const S2C& from);

  inline S2C& operator=(const S2C& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2C(S2C&& from) noexcept
    : S2C() {
    *this = ::std::move(from);
  }

  inline S2C& operator=(S2C&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S2C& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2C* internal_default_instance() {
    return reinterpret_cast<const S2C*>(
               &_S2C_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(S2C* other);
  friend void swap(S2C& a, S2C& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2C* New() const PROTOBUF_FINAL { return New(NULL); }

  S2C* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const S2C& from);
  void MergeFrom(const S2C& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(S2C* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Qot_StockFilter.StockData dataList = 3;
  int datalist_size() const;
  void clear_datalist();
  static const int kDataListFieldNumber = 3;
  const ::Qot_StockFilter::StockData& datalist(int index) const;
  ::Qot_StockFilter::StockData* mutable_datalist(int index);
  ::Qot_StockFilter::StockData* add_datalist();
  ::google::protobuf::RepeatedPtrField< ::Qot_StockFilter::StockData >*
      mutable_datalist();
  const ::google::protobuf::RepeatedPtrField< ::Qot_StockFilter::StockData >&
      datalist() const;

  // required bool lastPage = 1;
  bool has_lastpage() const;
  void clear_lastpage();
  static const int kLastPageFieldNumber = 1;
  bool lastpage() const;
  void set_lastpage(bool value);

  // required int32 allCount = 2;
  bool has_allcount() const;
  void clear_allcount();
  static const int kAllCountFieldNumber = 2;
  ::google::protobuf::int32 allcount() const;
  void set_allcount(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Qot_StockFilter.S2C)
 private:
  void set_has_lastpage();
  void clear_has_lastpage();
  void set_has_allcount();
  void clear_has_allcount();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::Qot_StockFilter::StockData > datalist_;
  bool lastpage_;
  ::google::protobuf::int32 allcount_;
  friend struct ::protobuf_Qot_5fStockFilter_2eproto::TableStruct;
  friend void ::protobuf_Qot_5fStockFilter_2eproto::InitDefaultsS2CImpl();
};
// -------------------------------------------------------------------

class Request : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Qot_StockFilter.Request) */ {
 public:
  Request();
  virtual ~Request();

  Request(const Request& from);

  inline Request& operator=(const Request& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Request(Request&& from) noexcept
    : Request() {
    *this = ::std::move(from);
  }

  inline Request& operator=(Request&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Request& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Request* internal_default_instance() {
    return reinterpret_cast<const Request*>(
               &_Request_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(Request* other);
  friend void swap(Request& a, Request& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Request* New() const PROTOBUF_FINAL { return New(NULL); }

  Request* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Request& from);
  void MergeFrom(const Request& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .Qot_StockFilter.C2S c2s = 1;
  bool has_c2s() const;
  void clear_c2s();
  static const int kC2SFieldNumber = 1;
  const ::Qot_StockFilter::C2S& c2s() const;
  ::Qot_StockFilter::C2S* release_c2s();
  ::Qot_StockFilter::C2S* mutable_c2s();
  void set_allocated_c2s(::Qot_StockFilter::C2S* c2s);

  // @@protoc_insertion_point(class_scope:Qot_StockFilter.Request)
 private:
  void set_has_c2s();
  void clear_has_c2s();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::Qot_StockFilter::C2S* c2s_;
  friend struct ::protobuf_Qot_5fStockFilter_2eproto::TableStruct;
  friend void ::protobuf_Qot_5fStockFilter_2eproto::InitDefaultsRequestImpl();
};
// -------------------------------------------------------------------

class Response : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Qot_StockFilter.Response) */ {
 public:
  Response();
  virtual ~Response();

  Response(const Response& from);

  inline Response& operator=(const Response& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Response(Response&& from) noexcept
    : Response() {
    *this = ::std::move(from);
  }

  inline Response& operator=(Response&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Response& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Response* internal_default_instance() {
    return reinterpret_cast<const Response*>(
               &_Response_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void Swap(Response* other);
  friend void swap(Response& a, Response& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Response* New() const PROTOBUF_FINAL { return New(NULL); }

  Response* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Response& from);
  void MergeFrom(const Response& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string retMsg = 2;
  bool has_retmsg() const;
  void clear_retmsg();
  static const int kRetMsgFieldNumber = 2;
  const ::std::string& retmsg() const;
  void set_retmsg(const ::std::string& value);
  #if LANG_CXX11
  void set_retmsg(::std::string&& value);
  #endif
  void set_retmsg(const char* value);
  void set_retmsg(const char* value, size_t size);
  ::std::string* mutable_retmsg();
  ::std::string* release_retmsg();
  void set_allocated_retmsg(::std::string* retmsg);

  // optional .Qot_StockFilter.S2C s2c = 4;
  bool has_s2c() const;
  void clear_s2c();
  static const int kS2CFieldNumber = 4;
  const ::Qot_StockFilter::S2C& s2c() const;
  ::Qot_StockFilter::S2C* release_s2c();
  ::Qot_StockFilter::S2C* mutable_s2c();
  void set_allocated_s2c(::Qot_StockFilter::S2C* s2c);

  // optional int32 errCode = 3;
  bool has_errcode() const;
  void clear_errcode();
  static const int kErrCodeFieldNumber = 3;
  ::google::protobuf::int32 errcode() const;
  void set_errcode(::google::protobuf::int32 value);

  // required int32 retType = 1 [default = -400];
  bool has_rettype() const;
  void clear_rettype();
  static const int kRetTypeFieldNumber = 1;
  ::google::protobuf::int32 rettype() const;
  void set_rettype(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Qot_StockFilter.Response)
 private:
  void set_has_rettype();
  void clear_has_rettype();
  void set_has_retmsg();
  void clear_has_retmsg();
  void set_has_errcode();
  void clear_has_errcode();
  void set_has_s2c();
  void clear_has_s2c();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr retmsg_;
  ::Qot_StockFilter::S2C* s2c_;
  ::google::protobuf::int32 errcode_;
  ::google::protobuf::int32 rettype_;
  friend struct ::protobuf_Qot_5fStockFilter_2eproto::TableStruct;
  friend void ::protobuf_Qot_5fStockFilter_2eproto::InitDefaultsResponseImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// BaseFilter

// required int32 field = 1;
inline bool BaseFilter::has_field() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BaseFilter::set_has_field() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BaseFilter::clear_has_field() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BaseFilter::clear_field() {
  field_ = 0;
  clear_has_field();
}
inline ::google::protobuf::int32 BaseFilter::field() const {
  // @@protoc_insertion_point(field_get:Qot_StockFilter.BaseFilter.field)
  return field_;
}
inline void BaseFilter::set_field(::google::protobuf::int32 value) {
  set_has_field();
  field_ = value;
  // @@protoc_insertion_point(field_set:Qot_StockFilter.BaseFilter.field)
}

// optional double filterMin = 2;
inline bool BaseFilter::has_filtermin() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BaseFilter::set_has_filtermin() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BaseFilter::clear_has_filtermin() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BaseFilter::clear_filtermin() {
  filtermin_ = 0;
  clear_has_filtermin();
}
inline double BaseFilter::filtermin() const {
  // @@protoc_insertion_point(field_get:Qot_StockFilter.BaseFilter.filterMin)
  return filtermin_;
}
inline void BaseFilter::set_filtermin(double value) {
  set_has_filtermin();
  filtermin_ = value;
  // @@protoc_insertion_point(field_set:Qot_StockFilter.BaseFilter.filterMin)
}

// optional double filterMax = 3;
inline bool BaseFilter::has_filtermax() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BaseFilter::set_has_filtermax() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BaseFilter::clear_has_filtermax() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BaseFilter::clear_filtermax() {
  filtermax_ = 0;
  clear_has_filtermax();
}
inline double BaseFilter::filtermax() const {
  // @@protoc_insertion_point(field_get:Qot_StockFilter.BaseFilter.filterMax)
  return filtermax_;
}
inline void BaseFilter::set_filtermax(double value) {
  set_has_filtermax();
  filtermax_ = value;
  // @@protoc_insertion_point(field_set:Qot_StockFilter.BaseFilter.filterMax)
}

// optional bool isNoFilter = 4;
inline bool BaseFilter::has_isnofilter() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BaseFilter::set_has_isnofilter() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BaseFilter::clear_has_isnofilter() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BaseFilter::clear_isnofilter() {
  isnofilter_ = false;
  clear_has_isnofilter();
}
inline bool BaseFilter::isnofilter() const {
  // @@protoc_insertion_point(field_get:Qot_StockFilter.BaseFilter.isNoFilter)
  return isnofilter_;
}
inline void BaseFilter::set_isnofilter(bool value) {
  set_has_isnofilter();
  isnofilter_ = value;
  // @@protoc_insertion_point(field_set:Qot_StockFilter.BaseFilter.isNoFilter)
}

// optional int32 sortDir = 5;
inline bool BaseFilter::has_sortdir() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void BaseFilter::set_has_sortdir() {
  _has_bits_[0] |= 0x00000010u;
}
inline void BaseFilter::clear_has_sortdir() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void BaseFilter::clear_sortdir() {
  sortdir_ = 0;
  clear_has_sortdir();
}
inline ::google::protobuf::int32 BaseFilter::sortdir() const {
  // @@protoc_insertion_point(field_get:Qot_StockFilter.BaseFilter.sortDir)
  return sortdir_;
}
inline void BaseFilter::set_sortdir(::google::protobuf::int32 value) {
  set_has_sortdir();
  sortdir_ = value;
  // @@protoc_insertion_point(field_set:Qot_StockFilter.BaseFilter.sortDir)
}

// -------------------------------------------------------------------

// AccumulateFilter

// required int32 field = 1;
inline bool AccumulateFilter::has_field() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AccumulateFilter::set_has_field() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AccumulateFilter::clear_has_field() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AccumulateFilter::clear_field() {
  field_ = 0;
  clear_has_field();
}
inline ::google::protobuf::int32 AccumulateFilter::field() const {
  // @@protoc_insertion_point(field_get:Qot_StockFilter.AccumulateFilter.field)
  return field_;
}
inline void AccumulateFilter::set_field(::google::protobuf::int32 value) {
  set_has_field();
  field_ = value;
  // @@protoc_insertion_point(field_set:Qot_StockFilter.AccumulateFilter.field)
}

// optional double filterMin = 2;
inline bool AccumulateFilter::has_filtermin() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AccumulateFilter::set_has_filtermin() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AccumulateFilter::clear_has_filtermin() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AccumulateFilter::clear_filtermin() {
  filtermin_ = 0;
  clear_has_filtermin();
}
inline double AccumulateFilter::filtermin() const {
  // @@protoc_insertion_point(field_get:Qot_StockFilter.AccumulateFilter.filterMin)
  return filtermin_;
}
inline void AccumulateFilter::set_filtermin(double value) {
  set_has_filtermin();
  filtermin_ = value;
  // @@protoc_insertion_point(field_set:Qot_StockFilter.AccumulateFilter.filterMin)
}

// optional double filterMax = 3;
inline bool AccumulateFilter::has_filtermax() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void AccumulateFilter::set_has_filtermax() {
  _has_bits_[0] |= 0x00000008u;
}
inline void AccumulateFilter::clear_has_filtermax() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void AccumulateFilter::clear_filtermax() {
  filtermax_ = 0;
  clear_has_filtermax();
}
inline double AccumulateFilter::filtermax() const {
  // @@protoc_insertion_point(field_get:Qot_StockFilter.AccumulateFilter.filterMax)
  return filtermax_;
}
inline void AccumulateFilter::set_filtermax(double value) {
  set_has_filtermax();
  filtermax_ = value;
  // @@protoc_insertion_point(field_set:Qot_StockFilter.AccumulateFilter.filterMax)
}

// optional bool isNoFilter = 4;
inline bool AccumulateFilter::has_isnofilter() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AccumulateFilter::set_has_isnofilter() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AccumulateFilter::clear_has_isnofilter() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AccumulateFilter::clear_isnofilter() {
  isnofilter_ = false;
  clear_has_isnofilter();
}
inline bool AccumulateFilter::isnofilter() const {
  // @@protoc_insertion_point(field_get:Qot_StockFilter.AccumulateFilter.isNoFilter)
  return isnofilter_;
}
inline void AccumulateFilter::set_isnofilter(bool value) {
  set_has_isnofilter();
  isnofilter_ = value;
  // @@protoc_insertion_point(field_set:Qot_StockFilter.AccumulateFilter.isNoFilter)
}

// optional int32 sortDir = 5;
inline bool AccumulateFilter::has_sortdir() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void AccumulateFilter::set_has_sortdir() {
  _has_bits_[0] |= 0x00000010u;
}
inline void AccumulateFilter::clear_has_sortdir() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void AccumulateFilter::clear_sortdir() {
  sortdir_ = 0;
  clear_has_sortdir();
}
inline ::google::protobuf::int32 AccumulateFilter::sortdir() const {
  // @@protoc_insertion_point(field_get:Qot_StockFilter.AccumulateFilter.sortDir)
  return sortdir_;
}
inline void AccumulateFilter::set_sortdir(::google::protobuf::int32 value) {
  set_has_sortdir();
  sortdir_ = value;
  // @@protoc_insertion_point(field_set:Qot_StockFilter.AccumulateFilter.sortDir)
}

// required int32 days = 6;
inline bool AccumulateFilter::has_days() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void AccumulateFilter::set_has_days() {
  _has_bits_[0] |= 0x00000020u;
}
inline void AccumulateFilter::clear_has_days() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void AccumulateFilter::clear_days() {
  days_ = 0;
  clear_has_days();
}
inline ::google::protobuf::int32 AccumulateFilter::days() const {
  // @@protoc_insertion_point(field_get:Qot_StockFilter.AccumulateFilter.days)
  return days_;
}
inline void AccumulateFilter::set_days(::google::protobuf::int32 value) {
  set_has_days();
  days_ = value;
  // @@protoc_insertion_point(field_set:Qot_StockFilter.AccumulateFilter.days)
}

// -------------------------------------------------------------------

// FinancialFilter

// required int32 field = 1;
inline bool FinancialFilter::has_field() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FinancialFilter::set_has_field() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FinancialFilter::clear_has_field() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FinancialFilter::clear_field() {
  field_ = 0;
  clear_has_field();
}
inline ::google::protobuf::int32 FinancialFilter::field() const {
  // @@protoc_insertion_point(field_get:Qot_StockFilter.FinancialFilter.field)
  return field_;
}
inline void FinancialFilter::set_field(::google::protobuf::int32 value) {
  set_has_field();
  field_ = value;
  // @@protoc_insertion_point(field_set:Qot_StockFilter.FinancialFilter.field)
}

// optional double filterMin = 2;
inline bool FinancialFilter::has_filtermin() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FinancialFilter::set_has_filtermin() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FinancialFilter::clear_has_filtermin() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FinancialFilter::clear_filtermin() {
  filtermin_ = 0;
  clear_has_filtermin();
}
inline double FinancialFilter::filtermin() const {
  // @@protoc_insertion_point(field_get:Qot_StockFilter.FinancialFilter.filterMin)
  return filtermin_;
}
inline void FinancialFilter::set_filtermin(double value) {
  set_has_filtermin();
  filtermin_ = value;
  // @@protoc_insertion_point(field_set:Qot_StockFilter.FinancialFilter.filterMin)
}

// optional double filterMax = 3;
inline bool FinancialFilter::has_filtermax() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void FinancialFilter::set_has_filtermax() {
  _has_bits_[0] |= 0x00000008u;
}
inline void FinancialFilter::clear_has_filtermax() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void FinancialFilter::clear_filtermax() {
  filtermax_ = 0;
  clear_has_filtermax();
}
inline double FinancialFilter::filtermax() const {
  // @@protoc_insertion_point(field_get:Qot_StockFilter.FinancialFilter.filterMax)
  return filtermax_;
}
inline void FinancialFilter::set_filtermax(double value) {
  set_has_filtermax();
  filtermax_ = value;
  // @@protoc_insertion_point(field_set:Qot_StockFilter.FinancialFilter.filterMax)
}

// optional bool isNoFilter = 4;
inline bool FinancialFilter::has_isnofilter() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FinancialFilter::set_has_isnofilter() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FinancialFilter::clear_has_isnofilter() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FinancialFilter::clear_isnofilter() {
  isnofilter_ = false;
  clear_has_isnofilter();
}
inline bool FinancialFilter::isnofilter() const {
  // @@protoc_insertion_point(field_get:Qot_StockFilter.FinancialFilter.isNoFilter)
  return isnofilter_;
}
inline void FinancialFilter::set_isnofilter(bool value) {
  set_has_isnofilter();
  isnofilter_ = value;
  // @@protoc_insertion_point(field_set:Qot_StockFilter.FinancialFilter.isNoFilter)
}

// optional int32 sortDir = 5;
inline bool FinancialFilter::has_sortdir() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void FinancialFilter::set_has_sortdir() {
  _has_bits_[0] |= 0x00000010u;
}
inline void FinancialFilter::clear_has_sortdir() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void FinancialFilter::clear_sortdir() {
  sortdir_ = 0;
  clear_has_sortdir();
}
inline ::google::protobuf::int32 FinancialFilter::sortdir() const {
  // @@protoc_insertion_point(field_get:Qot_StockFilter.FinancialFilter.sortDir)
  return sortdir_;
}
inline void FinancialFilter::set_sortdir(::google::protobuf::int32 value) {
  set_has_sortdir();
  sortdir_ = value;
  // @@protoc_insertion_point(field_set:Qot_StockFilter.FinancialFilter.sortDir)
}

// required int32 quarter = 6;
inline bool FinancialFilter::has_quarter() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void FinancialFilter::set_has_quarter() {
  _has_bits_[0] |= 0x00000020u;
}
inline void FinancialFilter::clear_has_quarter() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void FinancialFilter::clear_quarter() {
  quarter_ = 0;
  clear_has_quarter();
}
inline ::google::protobuf::int32 FinancialFilter::quarter() const {
  // @@protoc_insertion_point(field_get:Qot_StockFilter.FinancialFilter.quarter)
  return quarter_;
}
inline void FinancialFilter::set_quarter(::google::protobuf::int32 value) {
  set_has_quarter();
  quarter_ = value;
  // @@protoc_insertion_point(field_set:Qot_StockFilter.FinancialFilter.quarter)
}

// -------------------------------------------------------------------

// BaseData

// required int32 field = 1;
inline bool BaseData::has_field() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BaseData::set_has_field() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BaseData::clear_has_field() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BaseData::clear_field() {
  field_ = 0;
  clear_has_field();
}
inline ::google::protobuf::int32 BaseData::field() const {
  // @@protoc_insertion_point(field_get:Qot_StockFilter.BaseData.field)
  return field_;
}
inline void BaseData::set_field(::google::protobuf::int32 value) {
  set_has_field();
  field_ = value;
  // @@protoc_insertion_point(field_set:Qot_StockFilter.BaseData.field)
}

// required double value = 2;
inline bool BaseData::has_value() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BaseData::set_has_value() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BaseData::clear_has_value() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BaseData::clear_value() {
  value_ = 0;
  clear_has_value();
}
inline double BaseData::value() const {
  // @@protoc_insertion_point(field_get:Qot_StockFilter.BaseData.value)
  return value_;
}
inline void BaseData::set_value(double value) {
  set_has_value();
  value_ = value;
  // @@protoc_insertion_point(field_set:Qot_StockFilter.BaseData.value)
}

// -------------------------------------------------------------------

// AccumulateData

// required int32 field = 1;
inline bool AccumulateData::has_field() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AccumulateData::set_has_field() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AccumulateData::clear_has_field() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AccumulateData::clear_field() {
  field_ = 0;
  clear_has_field();
}
inline ::google::protobuf::int32 AccumulateData::field() const {
  // @@protoc_insertion_point(field_get:Qot_StockFilter.AccumulateData.field)
  return field_;
}
inline void AccumulateData::set_field(::google::protobuf::int32 value) {
  set_has_field();
  field_ = value;
  // @@protoc_insertion_point(field_set:Qot_StockFilter.AccumulateData.field)
}

// required double value = 2;
inline bool AccumulateData::has_value() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AccumulateData::set_has_value() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AccumulateData::clear_has_value() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AccumulateData::clear_value() {
  value_ = 0;
  clear_has_value();
}
inline double AccumulateData::value() const {
  // @@protoc_insertion_point(field_get:Qot_StockFilter.AccumulateData.value)
  return value_;
}
inline void AccumulateData::set_value(double value) {
  set_has_value();
  value_ = value;
  // @@protoc_insertion_point(field_set:Qot_StockFilter.AccumulateData.value)
}

// required int32 days = 3;
inline bool AccumulateData::has_days() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AccumulateData::set_has_days() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AccumulateData::clear_has_days() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AccumulateData::clear_days() {
  days_ = 0;
  clear_has_days();
}
inline ::google::protobuf::int32 AccumulateData::days() const {
  // @@protoc_insertion_point(field_get:Qot_StockFilter.AccumulateData.days)
  return days_;
}
inline void AccumulateData::set_days(::google::protobuf::int32 value) {
  set_has_days();
  days_ = value;
  // @@protoc_insertion_point(field_set:Qot_StockFilter.AccumulateData.days)
}

// -------------------------------------------------------------------

// FinancialData

// required int32 field = 1;
inline bool FinancialData::has_field() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FinancialData::set_has_field() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FinancialData::clear_has_field() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FinancialData::clear_field() {
  field_ = 0;
  clear_has_field();
}
inline ::google::protobuf::int32 FinancialData::field() const {
  // @@protoc_insertion_point(field_get:Qot_StockFilter.FinancialData.field)
  return field_;
}
inline void FinancialData::set_field(::google::protobuf::int32 value) {
  set_has_field();
  field_ = value;
  // @@protoc_insertion_point(field_set:Qot_StockFilter.FinancialData.field)
}

// required double value = 2;
inline bool FinancialData::has_value() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FinancialData::set_has_value() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FinancialData::clear_has_value() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FinancialData::clear_value() {
  value_ = 0;
  clear_has_value();
}
inline double FinancialData::value() const {
  // @@protoc_insertion_point(field_get:Qot_StockFilter.FinancialData.value)
  return value_;
}
inline void FinancialData::set_value(double value) {
  set_has_value();
  value_ = value;
  // @@protoc_insertion_point(field_set:Qot_StockFilter.FinancialData.value)
}

// required int32 quarter = 3;
inline bool FinancialData::has_quarter() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FinancialData::set_has_quarter() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FinancialData::clear_has_quarter() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FinancialData::clear_quarter() {
  quarter_ = 0;
  clear_has_quarter();
}
inline ::google::protobuf::int32 FinancialData::quarter() const {
  // @@protoc_insertion_point(field_get:Qot_StockFilter.FinancialData.quarter)
  return quarter_;
}
inline void FinancialData::set_quarter(::google::protobuf::int32 value) {
  set_has_quarter();
  quarter_ = value;
  // @@protoc_insertion_point(field_set:Qot_StockFilter.FinancialData.quarter)
}

// -------------------------------------------------------------------

// StockData

// required .Qot_Common.Security security = 1;
inline bool StockData::has_security() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void StockData::set_has_security() {
  _has_bits_[0] |= 0x00000002u;
}
inline void StockData::clear_has_security() {
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::Qot_Common::Security& StockData::security() const {
  const ::Qot_Common::Security* p = security_;
  // @@protoc_insertion_point(field_get:Qot_StockFilter.StockData.security)
  return p != NULL ? *p : *reinterpret_cast<const ::Qot_Common::Security*>(
      &::Qot_Common::_Security_default_instance_);
}
inline ::Qot_Common::Security* StockData::release_security() {
  // @@protoc_insertion_point(field_release:Qot_StockFilter.StockData.security)
  clear_has_security();
  ::Qot_Common::Security* temp = security_;
  security_ = NULL;
  return temp;
}
inline ::Qot_Common::Security* StockData::mutable_security() {
  set_has_security();
  if (security_ == NULL) {
    security_ = new ::Qot_Common::Security;
  }
  // @@protoc_insertion_point(field_mutable:Qot_StockFilter.StockData.security)
  return security_;
}
inline void StockData::set_allocated_security(::Qot_Common::Security* security) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(security_);
  }
  if (security) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      security = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, security, submessage_arena);
    }
    set_has_security();
  } else {
    clear_has_security();
  }
  security_ = security;
  // @@protoc_insertion_point(field_set_allocated:Qot_StockFilter.StockData.security)
}

// required string name = 2;
inline bool StockData::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StockData::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void StockData::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void StockData::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& StockData::name() const {
  // @@protoc_insertion_point(field_get:Qot_StockFilter.StockData.name)
  return name_.GetNoArena();
}
inline void StockData::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Qot_StockFilter.StockData.name)
}
#if LANG_CXX11
inline void StockData::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Qot_StockFilter.StockData.name)
}
#endif
inline void StockData::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Qot_StockFilter.StockData.name)
}
inline void StockData::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Qot_StockFilter.StockData.name)
}
inline ::std::string* StockData::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:Qot_StockFilter.StockData.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StockData::release_name() {
  // @@protoc_insertion_point(field_release:Qot_StockFilter.StockData.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StockData::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:Qot_StockFilter.StockData.name)
}

// repeated .Qot_StockFilter.BaseData baseDataList = 3;
inline int StockData::basedatalist_size() const {
  return basedatalist_.size();
}
inline void StockData::clear_basedatalist() {
  basedatalist_.Clear();
}
inline const ::Qot_StockFilter::BaseData& StockData::basedatalist(int index) const {
  // @@protoc_insertion_point(field_get:Qot_StockFilter.StockData.baseDataList)
  return basedatalist_.Get(index);
}
inline ::Qot_StockFilter::BaseData* StockData::mutable_basedatalist(int index) {
  // @@protoc_insertion_point(field_mutable:Qot_StockFilter.StockData.baseDataList)
  return basedatalist_.Mutable(index);
}
inline ::Qot_StockFilter::BaseData* StockData::add_basedatalist() {
  // @@protoc_insertion_point(field_add:Qot_StockFilter.StockData.baseDataList)
  return basedatalist_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::Qot_StockFilter::BaseData >*
StockData::mutable_basedatalist() {
  // @@protoc_insertion_point(field_mutable_list:Qot_StockFilter.StockData.baseDataList)
  return &basedatalist_;
}
inline const ::google::protobuf::RepeatedPtrField< ::Qot_StockFilter::BaseData >&
StockData::basedatalist() const {
  // @@protoc_insertion_point(field_list:Qot_StockFilter.StockData.baseDataList)
  return basedatalist_;
}

// repeated .Qot_StockFilter.AccumulateData accumulateDataList = 4;
inline int StockData::accumulatedatalist_size() const {
  return accumulatedatalist_.size();
}
inline void StockData::clear_accumulatedatalist() {
  accumulatedatalist_.Clear();
}
inline const ::Qot_StockFilter::AccumulateData& StockData::accumulatedatalist(int index) const {
  // @@protoc_insertion_point(field_get:Qot_StockFilter.StockData.accumulateDataList)
  return accumulatedatalist_.Get(index);
}
inline ::Qot_StockFilter::AccumulateData* StockData::mutable_accumulatedatalist(int index) {
  // @@protoc_insertion_point(field_mutable:Qot_StockFilter.StockData.accumulateDataList)
  return accumulatedatalist_.Mutable(index);
}
inline ::Qot_StockFilter::AccumulateData* StockData::add_accumulatedatalist() {
  // @@protoc_insertion_point(field_add:Qot_StockFilter.StockData.accumulateDataList)
  return accumulatedatalist_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::Qot_StockFilter::AccumulateData >*
StockData::mutable_accumulatedatalist() {
  // @@protoc_insertion_point(field_mutable_list:Qot_StockFilter.StockData.accumulateDataList)
  return &accumulatedatalist_;
}
inline const ::google::protobuf::RepeatedPtrField< ::Qot_StockFilter::AccumulateData >&
StockData::accumulatedatalist() const {
  // @@protoc_insertion_point(field_list:Qot_StockFilter.StockData.accumulateDataList)
  return accumulatedatalist_;
}

// repeated .Qot_StockFilter.FinancialData financialDataList = 5;
inline int StockData::financialdatalist_size() const {
  return financialdatalist_.size();
}
inline void StockData::clear_financialdatalist() {
  financialdatalist_.Clear();
}
inline const ::Qot_StockFilter::FinancialData& StockData::financialdatalist(int index) const {
  // @@protoc_insertion_point(field_get:Qot_StockFilter.StockData.financialDataList)
  return financialdatalist_.Get(index);
}
inline ::Qot_StockFilter::FinancialData* StockData::mutable_financialdatalist(int index) {
  // @@protoc_insertion_point(field_mutable:Qot_StockFilter.StockData.financialDataList)
  return financialdatalist_.Mutable(index);
}
inline ::Qot_StockFilter::FinancialData* StockData::add_financialdatalist() {
  // @@protoc_insertion_point(field_add:Qot_StockFilter.StockData.financialDataList)
  return financialdatalist_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::Qot_StockFilter::FinancialData >*
StockData::mutable_financialdatalist() {
  // @@protoc_insertion_point(field_mutable_list:Qot_StockFilter.StockData.financialDataList)
  return &financialdatalist_;
}
inline const ::google::protobuf::RepeatedPtrField< ::Qot_StockFilter::FinancialData >&
StockData::financialdatalist() const {
  // @@protoc_insertion_point(field_list:Qot_StockFilter.StockData.financialDataList)
  return financialdatalist_;
}

// -------------------------------------------------------------------

// C2S

// required int32 begin = 1;
inline bool C2S::has_begin() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void C2S::set_has_begin() {
  _has_bits_[0] |= 0x00000002u;
}
inline void C2S::clear_has_begin() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void C2S::clear_begin() {
  begin_ = 0;
  clear_has_begin();
}
inline ::google::protobuf::int32 C2S::begin() const {
  // @@protoc_insertion_point(field_get:Qot_StockFilter.C2S.begin)
  return begin_;
}
inline void C2S::set_begin(::google::protobuf::int32 value) {
  set_has_begin();
  begin_ = value;
  // @@protoc_insertion_point(field_set:Qot_StockFilter.C2S.begin)
}

// required int32 num = 2;
inline bool C2S::has_num() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void C2S::set_has_num() {
  _has_bits_[0] |= 0x00000004u;
}
inline void C2S::clear_has_num() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void C2S::clear_num() {
  num_ = 0;
  clear_has_num();
}
inline ::google::protobuf::int32 C2S::num() const {
  // @@protoc_insertion_point(field_get:Qot_StockFilter.C2S.num)
  return num_;
}
inline void C2S::set_num(::google::protobuf::int32 value) {
  set_has_num();
  num_ = value;
  // @@protoc_insertion_point(field_set:Qot_StockFilter.C2S.num)
}

// required int32 market = 3;
inline bool C2S::has_market() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void C2S::set_has_market() {
  _has_bits_[0] |= 0x00000008u;
}
inline void C2S::clear_has_market() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void C2S::clear_market() {
  market_ = 0;
  clear_has_market();
}
inline ::google::protobuf::int32 C2S::market() const {
  // @@protoc_insertion_point(field_get:Qot_StockFilter.C2S.market)
  return market_;
}
inline void C2S::set_market(::google::protobuf::int32 value) {
  set_has_market();
  market_ = value;
  // @@protoc_insertion_point(field_set:Qot_StockFilter.C2S.market)
}

// optional .Qot_Common.Security plate = 4;
inline bool C2S::has_plate() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C2S::set_has_plate() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C2S::clear_has_plate() {
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::Qot_Common::Security& C2S::plate() const {
  const ::Qot_Common::Security* p = plate_;
  // @@protoc_insertion_point(field_get:Qot_StockFilter.C2S.plate)
  return p != NULL ? *p : *reinterpret_cast<const ::Qot_Common::Security*>(
      &::Qot_Common::_Security_default_instance_);
}
inline ::Qot_Common::Security* C2S::release_plate() {
  // @@protoc_insertion_point(field_release:Qot_StockFilter.C2S.plate)
  clear_has_plate();
  ::Qot_Common::Security* temp = plate_;
  plate_ = NULL;
  return temp;
}
inline ::Qot_Common::Security* C2S::mutable_plate() {
  set_has_plate();
  if (plate_ == NULL) {
    plate_ = new ::Qot_Common::Security;
  }
  // @@protoc_insertion_point(field_mutable:Qot_StockFilter.C2S.plate)
  return plate_;
}
inline void C2S::set_allocated_plate(::Qot_Common::Security* plate) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(plate_);
  }
  if (plate) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      plate = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, plate, submessage_arena);
    }
    set_has_plate();
  } else {
    clear_has_plate();
  }
  plate_ = plate;
  // @@protoc_insertion_point(field_set_allocated:Qot_StockFilter.C2S.plate)
}

// repeated .Qot_StockFilter.BaseFilter baseFilterList = 5;
inline int C2S::basefilterlist_size() const {
  return basefilterlist_.size();
}
inline void C2S::clear_basefilterlist() {
  basefilterlist_.Clear();
}
inline const ::Qot_StockFilter::BaseFilter& C2S::basefilterlist(int index) const {
  // @@protoc_insertion_point(field_get:Qot_StockFilter.C2S.baseFilterList)
  return basefilterlist_.Get(index);
}
inline ::Qot_StockFilter::BaseFilter* C2S::mutable_basefilterlist(int index) {
  // @@protoc_insertion_point(field_mutable:Qot_StockFilter.C2S.baseFilterList)
  return basefilterlist_.Mutable(index);
}
inline ::Qot_StockFilter::BaseFilter* C2S::add_basefilterlist() {
  // @@protoc_insertion_point(field_add:Qot_StockFilter.C2S.baseFilterList)
  return basefilterlist_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::Qot_StockFilter::BaseFilter >*
C2S::mutable_basefilterlist() {
  // @@protoc_insertion_point(field_mutable_list:Qot_StockFilter.C2S.baseFilterList)
  return &basefilterlist_;
}
inline const ::google::protobuf::RepeatedPtrField< ::Qot_StockFilter::BaseFilter >&
C2S::basefilterlist() const {
  // @@protoc_insertion_point(field_list:Qot_StockFilter.C2S.baseFilterList)
  return basefilterlist_;
}

// repeated .Qot_StockFilter.AccumulateFilter accumulateFilterList = 6;
inline int C2S::accumulatefilterlist_size() const {
  return accumulatefilterlist_.size();
}
inline void C2S::clear_accumulatefilterlist() {
  accumulatefilterlist_.Clear();
}
inline const ::Qot_StockFilter::AccumulateFilter& C2S::accumulatefilterlist(int index) const {
  // @@protoc_insertion_point(field_get:Qot_StockFilter.C2S.accumulateFilterList)
  return accumulatefilterlist_.Get(index);
}
inline ::Qot_StockFilter::AccumulateFilter* C2S::mutable_accumulatefilterlist(int index) {
  // @@protoc_insertion_point(field_mutable:Qot_StockFilter.C2S.accumulateFilterList)
  return accumulatefilterlist_.Mutable(index);
}
inline ::Qot_StockFilter::AccumulateFilter* C2S::add_accumulatefilterlist() {
  // @@protoc_insertion_point(field_add:Qot_StockFilter.C2S.accumulateFilterList)
  return accumulatefilterlist_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::Qot_StockFilter::AccumulateFilter >*
C2S::mutable_accumulatefilterlist() {
  // @@protoc_insertion_point(field_mutable_list:Qot_StockFilter.C2S.accumulateFilterList)
  return &accumulatefilterlist_;
}
inline const ::google::protobuf::RepeatedPtrField< ::Qot_StockFilter::AccumulateFilter >&
C2S::accumulatefilterlist() const {
  // @@protoc_insertion_point(field_list:Qot_StockFilter.C2S.accumulateFilterList)
  return accumulatefilterlist_;
}

// repeated .Qot_StockFilter.FinancialFilter financialFilterList = 7;
inline int C2S::financialfilterlist_size() const {
  return financialfilterlist_.size();
}
inline void C2S::clear_financialfilterlist() {
  financialfilterlist_.Clear();
}
inline const ::Qot_StockFilter::FinancialFilter& C2S::financialfilterlist(int index) const {
  // @@protoc_insertion_point(field_get:Qot_StockFilter.C2S.financialFilterList)
  return financialfilterlist_.Get(index);
}
inline ::Qot_StockFilter::FinancialFilter* C2S::mutable_financialfilterlist(int index) {
  // @@protoc_insertion_point(field_mutable:Qot_StockFilter.C2S.financialFilterList)
  return financialfilterlist_.Mutable(index);
}
inline ::Qot_StockFilter::FinancialFilter* C2S::add_financialfilterlist() {
  // @@protoc_insertion_point(field_add:Qot_StockFilter.C2S.financialFilterList)
  return financialfilterlist_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::Qot_StockFilter::FinancialFilter >*
C2S::mutable_financialfilterlist() {
  // @@protoc_insertion_point(field_mutable_list:Qot_StockFilter.C2S.financialFilterList)
  return &financialfilterlist_;
}
inline const ::google::protobuf::RepeatedPtrField< ::Qot_StockFilter::FinancialFilter >&
C2S::financialfilterlist() const {
  // @@protoc_insertion_point(field_list:Qot_StockFilter.C2S.financialFilterList)
  return financialfilterlist_;
}

// -------------------------------------------------------------------

// S2C

// required bool lastPage = 1;
inline bool S2C::has_lastpage() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void S2C::set_has_lastpage() {
  _has_bits_[0] |= 0x00000001u;
}
inline void S2C::clear_has_lastpage() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void S2C::clear_lastpage() {
  lastpage_ = false;
  clear_has_lastpage();
}
inline bool S2C::lastpage() const {
  // @@protoc_insertion_point(field_get:Qot_StockFilter.S2C.lastPage)
  return lastpage_;
}
inline void S2C::set_lastpage(bool value) {
  set_has_lastpage();
  lastpage_ = value;
  // @@protoc_insertion_point(field_set:Qot_StockFilter.S2C.lastPage)
}

// required int32 allCount = 2;
inline bool S2C::has_allcount() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void S2C::set_has_allcount() {
  _has_bits_[0] |= 0x00000002u;
}
inline void S2C::clear_has_allcount() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void S2C::clear_allcount() {
  allcount_ = 0;
  clear_has_allcount();
}
inline ::google::protobuf::int32 S2C::allcount() const {
  // @@protoc_insertion_point(field_get:Qot_StockFilter.S2C.allCount)
  return allcount_;
}
inline void S2C::set_allcount(::google::protobuf::int32 value) {
  set_has_allcount();
  allcount_ = value;
  // @@protoc_insertion_point(field_set:Qot_StockFilter.S2C.allCount)
}

// repeated .Qot_StockFilter.StockData dataList = 3;
inline int S2C::datalist_size() const {
  return datalist_.size();
}
inline void S2C::clear_datalist() {
  datalist_.Clear();
}
inline const ::Qot_StockFilter::StockData& S2C::datalist(int index) const {
  // @@protoc_insertion_point(field_get:Qot_StockFilter.S2C.dataList)
  return datalist_.Get(index);
}
inline ::Qot_StockFilter::StockData* S2C::mutable_datalist(int index) {
  // @@protoc_insertion_point(field_mutable:Qot_StockFilter.S2C.dataList)
  return datalist_.Mutable(index);
}
inline ::Qot_StockFilter::StockData* S2C::add_datalist() {
  // @@protoc_insertion_point(field_add:Qot_StockFilter.S2C.dataList)
  return datalist_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::Qot_StockFilter::StockData >*
S2C::mutable_datalist() {
  // @@protoc_insertion_point(field_mutable_list:Qot_StockFilter.S2C.dataList)
  return &datalist_;
}
inline const ::google::protobuf::RepeatedPtrField< ::Qot_StockFilter::StockData >&
S2C::datalist() const {
  // @@protoc_insertion_point(field_list:Qot_StockFilter.S2C.dataList)
  return datalist_;
}

// -------------------------------------------------------------------

// Request

// required .Qot_StockFilter.C2S c2s = 1;
inline bool Request::has_c2s() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Request::set_has_c2s() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Request::clear_has_c2s() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Request::clear_c2s() {
  if (c2s_ != NULL) c2s_->Clear();
  clear_has_c2s();
}
inline const ::Qot_StockFilter::C2S& Request::c2s() const {
  const ::Qot_StockFilter::C2S* p = c2s_;
  // @@protoc_insertion_point(field_get:Qot_StockFilter.Request.c2s)
  return p != NULL ? *p : *reinterpret_cast<const ::Qot_StockFilter::C2S*>(
      &::Qot_StockFilter::_C2S_default_instance_);
}
inline ::Qot_StockFilter::C2S* Request::release_c2s() {
  // @@protoc_insertion_point(field_release:Qot_StockFilter.Request.c2s)
  clear_has_c2s();
  ::Qot_StockFilter::C2S* temp = c2s_;
  c2s_ = NULL;
  return temp;
}
inline ::Qot_StockFilter::C2S* Request::mutable_c2s() {
  set_has_c2s();
  if (c2s_ == NULL) {
    c2s_ = new ::Qot_StockFilter::C2S;
  }
  // @@protoc_insertion_point(field_mutable:Qot_StockFilter.Request.c2s)
  return c2s_;
}
inline void Request::set_allocated_c2s(::Qot_StockFilter::C2S* c2s) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete c2s_;
  }
  if (c2s) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      c2s = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, c2s, submessage_arena);
    }
    set_has_c2s();
  } else {
    clear_has_c2s();
  }
  c2s_ = c2s;
  // @@protoc_insertion_point(field_set_allocated:Qot_StockFilter.Request.c2s)
}

// -------------------------------------------------------------------

// Response

// required int32 retType = 1 [default = -400];
inline bool Response::has_rettype() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Response::set_has_rettype() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Response::clear_has_rettype() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Response::clear_rettype() {
  rettype_ = -400;
  clear_has_rettype();
}
inline ::google::protobuf::int32 Response::rettype() const {
  // @@protoc_insertion_point(field_get:Qot_StockFilter.Response.retType)
  return rettype_;
}
inline void Response::set_rettype(::google::protobuf::int32 value) {
  set_has_rettype();
  rettype_ = value;
  // @@protoc_insertion_point(field_set:Qot_StockFilter.Response.retType)
}

// optional string retMsg = 2;
inline bool Response::has_retmsg() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Response::set_has_retmsg() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Response::clear_has_retmsg() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Response::clear_retmsg() {
  retmsg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_retmsg();
}
inline const ::std::string& Response::retmsg() const {
  // @@protoc_insertion_point(field_get:Qot_StockFilter.Response.retMsg)
  return retmsg_.GetNoArena();
}
inline void Response::set_retmsg(const ::std::string& value) {
  set_has_retmsg();
  retmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Qot_StockFilter.Response.retMsg)
}
#if LANG_CXX11
inline void Response::set_retmsg(::std::string&& value) {
  set_has_retmsg();
  retmsg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Qot_StockFilter.Response.retMsg)
}
#endif
inline void Response::set_retmsg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_retmsg();
  retmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Qot_StockFilter.Response.retMsg)
}
inline void Response::set_retmsg(const char* value, size_t size) {
  set_has_retmsg();
  retmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Qot_StockFilter.Response.retMsg)
}
inline ::std::string* Response::mutable_retmsg() {
  set_has_retmsg();
  // @@protoc_insertion_point(field_mutable:Qot_StockFilter.Response.retMsg)
  return retmsg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Response::release_retmsg() {
  // @@protoc_insertion_point(field_release:Qot_StockFilter.Response.retMsg)
  clear_has_retmsg();
  return retmsg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Response::set_allocated_retmsg(::std::string* retmsg) {
  if (retmsg != NULL) {
    set_has_retmsg();
  } else {
    clear_has_retmsg();
  }
  retmsg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), retmsg);
  // @@protoc_insertion_point(field_set_allocated:Qot_StockFilter.Response.retMsg)
}

// optional int32 errCode = 3;
inline bool Response::has_errcode() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Response::set_has_errcode() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Response::clear_has_errcode() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Response::clear_errcode() {
  errcode_ = 0;
  clear_has_errcode();
}
inline ::google::protobuf::int32 Response::errcode() const {
  // @@protoc_insertion_point(field_get:Qot_StockFilter.Response.errCode)
  return errcode_;
}
inline void Response::set_errcode(::google::protobuf::int32 value) {
  set_has_errcode();
  errcode_ = value;
  // @@protoc_insertion_point(field_set:Qot_StockFilter.Response.errCode)
}

// optional .Qot_StockFilter.S2C s2c = 4;
inline bool Response::has_s2c() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Response::set_has_s2c() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Response::clear_has_s2c() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Response::clear_s2c() {
  if (s2c_ != NULL) s2c_->Clear();
  clear_has_s2c();
}
inline const ::Qot_StockFilter::S2C& Response::s2c() const {
  const ::Qot_StockFilter::S2C* p = s2c_;
  // @@protoc_insertion_point(field_get:Qot_StockFilter.Response.s2c)
  return p != NULL ? *p : *reinterpret_cast<const ::Qot_StockFilter::S2C*>(
      &::Qot_StockFilter::_S2C_default_instance_);
}
inline ::Qot_StockFilter::S2C* Response::release_s2c() {
  // @@protoc_insertion_point(field_release:Qot_StockFilter.Response.s2c)
  clear_has_s2c();
  ::Qot_StockFilter::S2C* temp = s2c_;
  s2c_ = NULL;
  return temp;
}
inline ::Qot_StockFilter::S2C* Response::mutable_s2c() {
  set_has_s2c();
  if (s2c_ == NULL) {
    s2c_ = new ::Qot_StockFilter::S2C;
  }
  // @@protoc_insertion_point(field_mutable:Qot_StockFilter.Response.s2c)
  return s2c_;
}
inline void Response::set_allocated_s2c(::Qot_StockFilter::S2C* s2c) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete s2c_;
  }
  if (s2c) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      s2c = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, s2c, submessage_arena);
    }
    set_has_s2c();
  } else {
    clear_has_s2c();
  }
  s2c_ = s2c;
  // @@protoc_insertion_point(field_set_allocated:Qot_StockFilter.Response.s2c)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace Qot_StockFilter

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::Qot_StockFilter::StockField> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Qot_StockFilter::StockField>() {
  return ::Qot_StockFilter::StockField_descriptor();
}
template <> struct is_proto_enum< ::Qot_StockFilter::AccumulateField> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Qot_StockFilter::AccumulateField>() {
  return ::Qot_StockFilter::AccumulateField_descriptor();
}
template <> struct is_proto_enum< ::Qot_StockFilter::FinancialField> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Qot_StockFilter::FinancialField>() {
  return ::Qot_StockFilter::FinancialField_descriptor();
}
template <> struct is_proto_enum< ::Qot_StockFilter::FinancialQuarter> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Qot_StockFilter::FinancialQuarter>() {
  return ::Qot_StockFilter::FinancialQuarter_descriptor();
}
template <> struct is_proto_enum< ::Qot_StockFilter::SortDir> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Qot_StockFilter::SortDir>() {
  return ::Qot_StockFilter::SortDir_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_Qot_5fStockFilter_2eproto__INCLUDED
