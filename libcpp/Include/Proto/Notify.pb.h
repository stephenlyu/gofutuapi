// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Notify.proto

#ifndef PROTOBUF_Notify_2eproto__INCLUDED
#define PROTOBUF_Notify_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "Common.pb.h"
// @@protoc_insertion_point(includes)

namespace protobuf_Notify_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[7];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsGtwEventImpl();
void InitDefaultsGtwEvent();
void InitDefaultsProgramStatusImpl();
void InitDefaultsProgramStatus();
void InitDefaultsConnectStatusImpl();
void InitDefaultsConnectStatus();
void InitDefaultsQotRightImpl();
void InitDefaultsQotRight();
void InitDefaultsAPILevelImpl();
void InitDefaultsAPILevel();
void InitDefaultsS2CImpl();
void InitDefaultsS2C();
void InitDefaultsResponseImpl();
void InitDefaultsResponse();
inline void InitDefaults() {
  InitDefaultsGtwEvent();
  InitDefaultsProgramStatus();
  InitDefaultsConnectStatus();
  InitDefaultsQotRight();
  InitDefaultsAPILevel();
  InitDefaultsS2C();
  InitDefaultsResponse();
}
}  // namespace protobuf_Notify_2eproto
namespace Notify {
class APILevel;
class APILevelDefaultTypeInternal;
extern APILevelDefaultTypeInternal _APILevel_default_instance_;
class ConnectStatus;
class ConnectStatusDefaultTypeInternal;
extern ConnectStatusDefaultTypeInternal _ConnectStatus_default_instance_;
class GtwEvent;
class GtwEventDefaultTypeInternal;
extern GtwEventDefaultTypeInternal _GtwEvent_default_instance_;
class ProgramStatus;
class ProgramStatusDefaultTypeInternal;
extern ProgramStatusDefaultTypeInternal _ProgramStatus_default_instance_;
class QotRight;
class QotRightDefaultTypeInternal;
extern QotRightDefaultTypeInternal _QotRight_default_instance_;
class Response;
class ResponseDefaultTypeInternal;
extern ResponseDefaultTypeInternal _Response_default_instance_;
class S2C;
class S2CDefaultTypeInternal;
extern S2CDefaultTypeInternal _S2C_default_instance_;
}  // namespace Notify
namespace Notify {

enum NotifyType {
  NotifyType_None = 0,
  NotifyType_GtwEvent = 1,
  NotifyType_ProgramStatus = 2,
  NotifyType_ConnStatus = 3,
  NotifyType_QotRight = 4,
  NotifyType_APILevel = 5
};
bool NotifyType_IsValid(int value);
const NotifyType NotifyType_MIN = NotifyType_None;
const NotifyType NotifyType_MAX = NotifyType_APILevel;
const int NotifyType_ARRAYSIZE = NotifyType_MAX + 1;

const ::google::protobuf::EnumDescriptor* NotifyType_descriptor();
inline const ::std::string& NotifyType_Name(NotifyType value) {
  return ::google::protobuf::internal::NameOfEnum(
    NotifyType_descriptor(), value);
}
inline bool NotifyType_Parse(
    const ::std::string& name, NotifyType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<NotifyType>(
    NotifyType_descriptor(), name, value);
}
enum GtwEventType {
  GtwEventType_None = 0,
  GtwEventType_LocalCfgLoadFailed = 1,
  GtwEventType_APISvrRunFailed = 2,
  GtwEventType_ForceUpdate = 3,
  GtwEventType_LoginFailed = 4,
  GtwEventType_UnAgreeDisclaimer = 5,
  GtwEventType_NetCfgMissing = 6,
  GtwEventType_KickedOut = 7,
  GtwEventType_LoginPwdChanged = 8,
  GtwEventType_BanLogin = 9,
  GtwEventType_NeedPicVerifyCode = 10,
  GtwEventType_NeedPhoneVerifyCode = 11,
  GtwEventType_AppDataNotExist = 12,
  GtwEventType_NessaryDataMissing = 13,
  GtwEventType_TradePwdChanged = 14,
  GtwEventType_EnableDeviceLock = 15
};
bool GtwEventType_IsValid(int value);
const GtwEventType GtwEventType_MIN = GtwEventType_None;
const GtwEventType GtwEventType_MAX = GtwEventType_EnableDeviceLock;
const int GtwEventType_ARRAYSIZE = GtwEventType_MAX + 1;

const ::google::protobuf::EnumDescriptor* GtwEventType_descriptor();
inline const ::std::string& GtwEventType_Name(GtwEventType value) {
  return ::google::protobuf::internal::NameOfEnum(
    GtwEventType_descriptor(), value);
}
inline bool GtwEventType_Parse(
    const ::std::string& name, GtwEventType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GtwEventType>(
    GtwEventType_descriptor(), name, value);
}
// ===================================================================

class GtwEvent : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Notify.GtwEvent) */ {
 public:
  GtwEvent();
  virtual ~GtwEvent();

  GtwEvent(const GtwEvent& from);

  inline GtwEvent& operator=(const GtwEvent& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GtwEvent(GtwEvent&& from) noexcept
    : GtwEvent() {
    *this = ::std::move(from);
  }

  inline GtwEvent& operator=(GtwEvent&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GtwEvent& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GtwEvent* internal_default_instance() {
    return reinterpret_cast<const GtwEvent*>(
               &_GtwEvent_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(GtwEvent* other);
  friend void swap(GtwEvent& a, GtwEvent& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GtwEvent* New() const PROTOBUF_FINAL { return New(NULL); }

  GtwEvent* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GtwEvent& from);
  void MergeFrom(const GtwEvent& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GtwEvent* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string desc = 2;
  bool has_desc() const;
  void clear_desc();
  static const int kDescFieldNumber = 2;
  const ::std::string& desc() const;
  void set_desc(const ::std::string& value);
  #if LANG_CXX11
  void set_desc(::std::string&& value);
  #endif
  void set_desc(const char* value);
  void set_desc(const char* value, size_t size);
  ::std::string* mutable_desc();
  ::std::string* release_desc();
  void set_allocated_desc(::std::string* desc);

  // required int32 eventType = 1;
  bool has_eventtype() const;
  void clear_eventtype();
  static const int kEventTypeFieldNumber = 1;
  ::google::protobuf::int32 eventtype() const;
  void set_eventtype(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Notify.GtwEvent)
 private:
  void set_has_eventtype();
  void clear_has_eventtype();
  void set_has_desc();
  void clear_has_desc();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr desc_;
  ::google::protobuf::int32 eventtype_;
  friend struct ::protobuf_Notify_2eproto::TableStruct;
  friend void ::protobuf_Notify_2eproto::InitDefaultsGtwEventImpl();
};
// -------------------------------------------------------------------

class ProgramStatus : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Notify.ProgramStatus) */ {
 public:
  ProgramStatus();
  virtual ~ProgramStatus();

  ProgramStatus(const ProgramStatus& from);

  inline ProgramStatus& operator=(const ProgramStatus& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ProgramStatus(ProgramStatus&& from) noexcept
    : ProgramStatus() {
    *this = ::std::move(from);
  }

  inline ProgramStatus& operator=(ProgramStatus&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProgramStatus& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ProgramStatus* internal_default_instance() {
    return reinterpret_cast<const ProgramStatus*>(
               &_ProgramStatus_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(ProgramStatus* other);
  friend void swap(ProgramStatus& a, ProgramStatus& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ProgramStatus* New() const PROTOBUF_FINAL { return New(NULL); }

  ProgramStatus* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ProgramStatus& from);
  void MergeFrom(const ProgramStatus& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ProgramStatus* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .Common.ProgramStatus programStatus = 1;
  bool has_programstatus() const;
  void clear_programstatus();
  static const int kProgramStatusFieldNumber = 1;
  const ::Common::ProgramStatus& programstatus() const;
  ::Common::ProgramStatus* release_programstatus();
  ::Common::ProgramStatus* mutable_programstatus();
  void set_allocated_programstatus(::Common::ProgramStatus* programstatus);

  // @@protoc_insertion_point(class_scope:Notify.ProgramStatus)
 private:
  void set_has_programstatus();
  void clear_has_programstatus();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::Common::ProgramStatus* programstatus_;
  friend struct ::protobuf_Notify_2eproto::TableStruct;
  friend void ::protobuf_Notify_2eproto::InitDefaultsProgramStatusImpl();
};
// -------------------------------------------------------------------

class ConnectStatus : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Notify.ConnectStatus) */ {
 public:
  ConnectStatus();
  virtual ~ConnectStatus();

  ConnectStatus(const ConnectStatus& from);

  inline ConnectStatus& operator=(const ConnectStatus& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ConnectStatus(ConnectStatus&& from) noexcept
    : ConnectStatus() {
    *this = ::std::move(from);
  }

  inline ConnectStatus& operator=(ConnectStatus&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ConnectStatus& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ConnectStatus* internal_default_instance() {
    return reinterpret_cast<const ConnectStatus*>(
               &_ConnectStatus_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(ConnectStatus* other);
  friend void swap(ConnectStatus& a, ConnectStatus& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ConnectStatus* New() const PROTOBUF_FINAL { return New(NULL); }

  ConnectStatus* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ConnectStatus& from);
  void MergeFrom(const ConnectStatus& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ConnectStatus* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bool qotLogined = 1;
  bool has_qotlogined() const;
  void clear_qotlogined();
  static const int kQotLoginedFieldNumber = 1;
  bool qotlogined() const;
  void set_qotlogined(bool value);

  // required bool trdLogined = 2;
  bool has_trdlogined() const;
  void clear_trdlogined();
  static const int kTrdLoginedFieldNumber = 2;
  bool trdlogined() const;
  void set_trdlogined(bool value);

  // @@protoc_insertion_point(class_scope:Notify.ConnectStatus)
 private:
  void set_has_qotlogined();
  void clear_has_qotlogined();
  void set_has_trdlogined();
  void clear_has_trdlogined();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  bool qotlogined_;
  bool trdlogined_;
  friend struct ::protobuf_Notify_2eproto::TableStruct;
  friend void ::protobuf_Notify_2eproto::InitDefaultsConnectStatusImpl();
};
// -------------------------------------------------------------------

class QotRight : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Notify.QotRight) */ {
 public:
  QotRight();
  virtual ~QotRight();

  QotRight(const QotRight& from);

  inline QotRight& operator=(const QotRight& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  QotRight(QotRight&& from) noexcept
    : QotRight() {
    *this = ::std::move(from);
  }

  inline QotRight& operator=(QotRight&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QotRight& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const QotRight* internal_default_instance() {
    return reinterpret_cast<const QotRight*>(
               &_QotRight_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(QotRight* other);
  friend void swap(QotRight& a, QotRight& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline QotRight* New() const PROTOBUF_FINAL { return New(NULL); }

  QotRight* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const QotRight& from);
  void MergeFrom(const QotRight& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(QotRight* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 hkQotRight = 4;
  bool has_hkqotright() const;
  void clear_hkqotright();
  static const int kHkQotRightFieldNumber = 4;
  ::google::protobuf::int32 hkqotright() const;
  void set_hkqotright(::google::protobuf::int32 value);

  // required int32 usQotRight = 5;
  bool has_usqotright() const;
  void clear_usqotright();
  static const int kUsQotRightFieldNumber = 5;
  ::google::protobuf::int32 usqotright() const;
  void set_usqotright(::google::protobuf::int32 value);

  // required int32 cnQotRight = 6;
  bool has_cnqotright() const;
  void clear_cnqotright();
  static const int kCnQotRightFieldNumber = 6;
  ::google::protobuf::int32 cnqotright() const;
  void set_cnqotright(::google::protobuf::int32 value);

  // optional int32 hkOptionQotRight = 7;
  bool has_hkoptionqotright() const;
  void clear_hkoptionqotright();
  static const int kHkOptionQotRightFieldNumber = 7;
  ::google::protobuf::int32 hkoptionqotright() const;
  void set_hkoptionqotright(::google::protobuf::int32 value);

  // optional bool hasUSOptionQotRight = 8;
  bool has_hasusoptionqotright() const;
  void clear_hasusoptionqotright();
  static const int kHasUSOptionQotRightFieldNumber = 8;
  bool hasusoptionqotright() const;
  void set_hasusoptionqotright(bool value);

  // optional int32 hkFutureQotRight = 9;
  bool has_hkfutureqotright() const;
  void clear_hkfutureqotright();
  static const int kHkFutureQotRightFieldNumber = 9;
  ::google::protobuf::int32 hkfutureqotright() const;
  void set_hkfutureqotright(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Notify.QotRight)
 private:
  void set_has_hkqotright();
  void clear_has_hkqotright();
  void set_has_usqotright();
  void clear_has_usqotright();
  void set_has_cnqotright();
  void clear_has_cnqotright();
  void set_has_hkoptionqotright();
  void clear_has_hkoptionqotright();
  void set_has_hasusoptionqotright();
  void clear_has_hasusoptionqotright();
  void set_has_hkfutureqotright();
  void clear_has_hkfutureqotright();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 hkqotright_;
  ::google::protobuf::int32 usqotright_;
  ::google::protobuf::int32 cnqotright_;
  ::google::protobuf::int32 hkoptionqotright_;
  bool hasusoptionqotright_;
  ::google::protobuf::int32 hkfutureqotright_;
  friend struct ::protobuf_Notify_2eproto::TableStruct;
  friend void ::protobuf_Notify_2eproto::InitDefaultsQotRightImpl();
};
// -------------------------------------------------------------------

class APILevel : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Notify.APILevel) */ {
 public:
  APILevel();
  virtual ~APILevel();

  APILevel(const APILevel& from);

  inline APILevel& operator=(const APILevel& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  APILevel(APILevel&& from) noexcept
    : APILevel() {
    *this = ::std::move(from);
  }

  inline APILevel& operator=(APILevel&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const APILevel& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const APILevel* internal_default_instance() {
    return reinterpret_cast<const APILevel*>(
               &_APILevel_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(APILevel* other);
  friend void swap(APILevel& a, APILevel& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline APILevel* New() const PROTOBUF_FINAL { return New(NULL); }

  APILevel* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const APILevel& from);
  void MergeFrom(const APILevel& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(APILevel* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string apiLevel = 3;
  bool has_apilevel() const;
  void clear_apilevel();
  static const int kApiLevelFieldNumber = 3;
  const ::std::string& apilevel() const;
  void set_apilevel(const ::std::string& value);
  #if LANG_CXX11
  void set_apilevel(::std::string&& value);
  #endif
  void set_apilevel(const char* value);
  void set_apilevel(const char* value, size_t size);
  ::std::string* mutable_apilevel();
  ::std::string* release_apilevel();
  void set_allocated_apilevel(::std::string* apilevel);

  // @@protoc_insertion_point(class_scope:Notify.APILevel)
 private:
  void set_has_apilevel();
  void clear_has_apilevel();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr apilevel_;
  friend struct ::protobuf_Notify_2eproto::TableStruct;
  friend void ::protobuf_Notify_2eproto::InitDefaultsAPILevelImpl();
};
// -------------------------------------------------------------------

class S2C : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Notify.S2C) */ {
 public:
  S2C();
  virtual ~S2C();

  S2C(const S2C& from);

  inline S2C& operator=(const S2C& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2C(S2C&& from) noexcept
    : S2C() {
    *this = ::std::move(from);
  }

  inline S2C& operator=(S2C&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S2C& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2C* internal_default_instance() {
    return reinterpret_cast<const S2C*>(
               &_S2C_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(S2C* other);
  friend void swap(S2C& a, S2C& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2C* New() const PROTOBUF_FINAL { return New(NULL); }

  S2C* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const S2C& from);
  void MergeFrom(const S2C& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(S2C* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Notify.GtwEvent event = 2;
  bool has_event() const;
  void clear_event();
  static const int kEventFieldNumber = 2;
  const ::Notify::GtwEvent& event() const;
  ::Notify::GtwEvent* release_event();
  ::Notify::GtwEvent* mutable_event();
  void set_allocated_event(::Notify::GtwEvent* event);

  // optional .Notify.ProgramStatus programStatus = 3;
  bool has_programstatus() const;
  void clear_programstatus();
  static const int kProgramStatusFieldNumber = 3;
  const ::Notify::ProgramStatus& programstatus() const;
  ::Notify::ProgramStatus* release_programstatus();
  ::Notify::ProgramStatus* mutable_programstatus();
  void set_allocated_programstatus(::Notify::ProgramStatus* programstatus);

  // optional .Notify.ConnectStatus connectStatus = 4;
  bool has_connectstatus() const;
  void clear_connectstatus();
  static const int kConnectStatusFieldNumber = 4;
  const ::Notify::ConnectStatus& connectstatus() const;
  ::Notify::ConnectStatus* release_connectstatus();
  ::Notify::ConnectStatus* mutable_connectstatus();
  void set_allocated_connectstatus(::Notify::ConnectStatus* connectstatus);

  // optional .Notify.QotRight qotRight = 5;
  bool has_qotright() const;
  void clear_qotright();
  static const int kQotRightFieldNumber = 5;
  const ::Notify::QotRight& qotright() const;
  ::Notify::QotRight* release_qotright();
  ::Notify::QotRight* mutable_qotright();
  void set_allocated_qotright(::Notify::QotRight* qotright);

  // optional .Notify.APILevel apiLevel = 6;
  bool has_apilevel() const;
  void clear_apilevel();
  static const int kApiLevelFieldNumber = 6;
  const ::Notify::APILevel& apilevel() const;
  ::Notify::APILevel* release_apilevel();
  ::Notify::APILevel* mutable_apilevel();
  void set_allocated_apilevel(::Notify::APILevel* apilevel);

  // required int32 type = 1;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Notify.S2C)
 private:
  void set_has_type();
  void clear_has_type();
  void set_has_event();
  void clear_has_event();
  void set_has_programstatus();
  void clear_has_programstatus();
  void set_has_connectstatus();
  void clear_has_connectstatus();
  void set_has_qotright();
  void clear_has_qotright();
  void set_has_apilevel();
  void clear_has_apilevel();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::Notify::GtwEvent* event_;
  ::Notify::ProgramStatus* programstatus_;
  ::Notify::ConnectStatus* connectstatus_;
  ::Notify::QotRight* qotright_;
  ::Notify::APILevel* apilevel_;
  ::google::protobuf::int32 type_;
  friend struct ::protobuf_Notify_2eproto::TableStruct;
  friend void ::protobuf_Notify_2eproto::InitDefaultsS2CImpl();
};
// -------------------------------------------------------------------

class Response : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Notify.Response) */ {
 public:
  Response();
  virtual ~Response();

  Response(const Response& from);

  inline Response& operator=(const Response& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Response(Response&& from) noexcept
    : Response() {
    *this = ::std::move(from);
  }

  inline Response& operator=(Response&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Response& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Response* internal_default_instance() {
    return reinterpret_cast<const Response*>(
               &_Response_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(Response* other);
  friend void swap(Response& a, Response& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Response* New() const PROTOBUF_FINAL { return New(NULL); }

  Response* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Response& from);
  void MergeFrom(const Response& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string retMsg = 2;
  bool has_retmsg() const;
  void clear_retmsg();
  static const int kRetMsgFieldNumber = 2;
  const ::std::string& retmsg() const;
  void set_retmsg(const ::std::string& value);
  #if LANG_CXX11
  void set_retmsg(::std::string&& value);
  #endif
  void set_retmsg(const char* value);
  void set_retmsg(const char* value, size_t size);
  ::std::string* mutable_retmsg();
  ::std::string* release_retmsg();
  void set_allocated_retmsg(::std::string* retmsg);

  // optional .Notify.S2C s2c = 4;
  bool has_s2c() const;
  void clear_s2c();
  static const int kS2CFieldNumber = 4;
  const ::Notify::S2C& s2c() const;
  ::Notify::S2C* release_s2c();
  ::Notify::S2C* mutable_s2c();
  void set_allocated_s2c(::Notify::S2C* s2c);

  // optional int32 errCode = 3;
  bool has_errcode() const;
  void clear_errcode();
  static const int kErrCodeFieldNumber = 3;
  ::google::protobuf::int32 errcode() const;
  void set_errcode(::google::protobuf::int32 value);

  // required int32 retType = 1 [default = -400];
  bool has_rettype() const;
  void clear_rettype();
  static const int kRetTypeFieldNumber = 1;
  ::google::protobuf::int32 rettype() const;
  void set_rettype(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Notify.Response)
 private:
  void set_has_rettype();
  void clear_has_rettype();
  void set_has_retmsg();
  void clear_has_retmsg();
  void set_has_errcode();
  void clear_has_errcode();
  void set_has_s2c();
  void clear_has_s2c();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr retmsg_;
  ::Notify::S2C* s2c_;
  ::google::protobuf::int32 errcode_;
  ::google::protobuf::int32 rettype_;
  friend struct ::protobuf_Notify_2eproto::TableStruct;
  friend void ::protobuf_Notify_2eproto::InitDefaultsResponseImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// GtwEvent

// required int32 eventType = 1;
inline bool GtwEvent::has_eventtype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GtwEvent::set_has_eventtype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GtwEvent::clear_has_eventtype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GtwEvent::clear_eventtype() {
  eventtype_ = 0;
  clear_has_eventtype();
}
inline ::google::protobuf::int32 GtwEvent::eventtype() const {
  // @@protoc_insertion_point(field_get:Notify.GtwEvent.eventType)
  return eventtype_;
}
inline void GtwEvent::set_eventtype(::google::protobuf::int32 value) {
  set_has_eventtype();
  eventtype_ = value;
  // @@protoc_insertion_point(field_set:Notify.GtwEvent.eventType)
}

// required string desc = 2;
inline bool GtwEvent::has_desc() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GtwEvent::set_has_desc() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GtwEvent::clear_has_desc() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GtwEvent::clear_desc() {
  desc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_desc();
}
inline const ::std::string& GtwEvent::desc() const {
  // @@protoc_insertion_point(field_get:Notify.GtwEvent.desc)
  return desc_.GetNoArena();
}
inline void GtwEvent::set_desc(const ::std::string& value) {
  set_has_desc();
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Notify.GtwEvent.desc)
}
#if LANG_CXX11
inline void GtwEvent::set_desc(::std::string&& value) {
  set_has_desc();
  desc_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Notify.GtwEvent.desc)
}
#endif
inline void GtwEvent::set_desc(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_desc();
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Notify.GtwEvent.desc)
}
inline void GtwEvent::set_desc(const char* value, size_t size) {
  set_has_desc();
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Notify.GtwEvent.desc)
}
inline ::std::string* GtwEvent::mutable_desc() {
  set_has_desc();
  // @@protoc_insertion_point(field_mutable:Notify.GtwEvent.desc)
  return desc_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GtwEvent::release_desc() {
  // @@protoc_insertion_point(field_release:Notify.GtwEvent.desc)
  clear_has_desc();
  return desc_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GtwEvent::set_allocated_desc(::std::string* desc) {
  if (desc != NULL) {
    set_has_desc();
  } else {
    clear_has_desc();
  }
  desc_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), desc);
  // @@protoc_insertion_point(field_set_allocated:Notify.GtwEvent.desc)
}

// -------------------------------------------------------------------

// ProgramStatus

// required .Common.ProgramStatus programStatus = 1;
inline bool ProgramStatus::has_programstatus() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProgramStatus::set_has_programstatus() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProgramStatus::clear_has_programstatus() {
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::Common::ProgramStatus& ProgramStatus::programstatus() const {
  const ::Common::ProgramStatus* p = programstatus_;
  // @@protoc_insertion_point(field_get:Notify.ProgramStatus.programStatus)
  return p != NULL ? *p : *reinterpret_cast<const ::Common::ProgramStatus*>(
      &::Common::_ProgramStatus_default_instance_);
}
inline ::Common::ProgramStatus* ProgramStatus::release_programstatus() {
  // @@protoc_insertion_point(field_release:Notify.ProgramStatus.programStatus)
  clear_has_programstatus();
  ::Common::ProgramStatus* temp = programstatus_;
  programstatus_ = NULL;
  return temp;
}
inline ::Common::ProgramStatus* ProgramStatus::mutable_programstatus() {
  set_has_programstatus();
  if (programstatus_ == NULL) {
    programstatus_ = new ::Common::ProgramStatus;
  }
  // @@protoc_insertion_point(field_mutable:Notify.ProgramStatus.programStatus)
  return programstatus_;
}
inline void ProgramStatus::set_allocated_programstatus(::Common::ProgramStatus* programstatus) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(programstatus_);
  }
  if (programstatus) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      programstatus = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, programstatus, submessage_arena);
    }
    set_has_programstatus();
  } else {
    clear_has_programstatus();
  }
  programstatus_ = programstatus;
  // @@protoc_insertion_point(field_set_allocated:Notify.ProgramStatus.programStatus)
}

// -------------------------------------------------------------------

// ConnectStatus

// required bool qotLogined = 1;
inline bool ConnectStatus::has_qotlogined() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ConnectStatus::set_has_qotlogined() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ConnectStatus::clear_has_qotlogined() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ConnectStatus::clear_qotlogined() {
  qotlogined_ = false;
  clear_has_qotlogined();
}
inline bool ConnectStatus::qotlogined() const {
  // @@protoc_insertion_point(field_get:Notify.ConnectStatus.qotLogined)
  return qotlogined_;
}
inline void ConnectStatus::set_qotlogined(bool value) {
  set_has_qotlogined();
  qotlogined_ = value;
  // @@protoc_insertion_point(field_set:Notify.ConnectStatus.qotLogined)
}

// required bool trdLogined = 2;
inline bool ConnectStatus::has_trdlogined() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ConnectStatus::set_has_trdlogined() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ConnectStatus::clear_has_trdlogined() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ConnectStatus::clear_trdlogined() {
  trdlogined_ = false;
  clear_has_trdlogined();
}
inline bool ConnectStatus::trdlogined() const {
  // @@protoc_insertion_point(field_get:Notify.ConnectStatus.trdLogined)
  return trdlogined_;
}
inline void ConnectStatus::set_trdlogined(bool value) {
  set_has_trdlogined();
  trdlogined_ = value;
  // @@protoc_insertion_point(field_set:Notify.ConnectStatus.trdLogined)
}

// -------------------------------------------------------------------

// QotRight

// required int32 hkQotRight = 4;
inline bool QotRight::has_hkqotright() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void QotRight::set_has_hkqotright() {
  _has_bits_[0] |= 0x00000001u;
}
inline void QotRight::clear_has_hkqotright() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void QotRight::clear_hkqotright() {
  hkqotright_ = 0;
  clear_has_hkqotright();
}
inline ::google::protobuf::int32 QotRight::hkqotright() const {
  // @@protoc_insertion_point(field_get:Notify.QotRight.hkQotRight)
  return hkqotright_;
}
inline void QotRight::set_hkqotright(::google::protobuf::int32 value) {
  set_has_hkqotright();
  hkqotright_ = value;
  // @@protoc_insertion_point(field_set:Notify.QotRight.hkQotRight)
}

// required int32 usQotRight = 5;
inline bool QotRight::has_usqotright() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void QotRight::set_has_usqotright() {
  _has_bits_[0] |= 0x00000002u;
}
inline void QotRight::clear_has_usqotright() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void QotRight::clear_usqotright() {
  usqotright_ = 0;
  clear_has_usqotright();
}
inline ::google::protobuf::int32 QotRight::usqotright() const {
  // @@protoc_insertion_point(field_get:Notify.QotRight.usQotRight)
  return usqotright_;
}
inline void QotRight::set_usqotright(::google::protobuf::int32 value) {
  set_has_usqotright();
  usqotright_ = value;
  // @@protoc_insertion_point(field_set:Notify.QotRight.usQotRight)
}

// required int32 cnQotRight = 6;
inline bool QotRight::has_cnqotright() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void QotRight::set_has_cnqotright() {
  _has_bits_[0] |= 0x00000004u;
}
inline void QotRight::clear_has_cnqotright() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void QotRight::clear_cnqotright() {
  cnqotright_ = 0;
  clear_has_cnqotright();
}
inline ::google::protobuf::int32 QotRight::cnqotright() const {
  // @@protoc_insertion_point(field_get:Notify.QotRight.cnQotRight)
  return cnqotright_;
}
inline void QotRight::set_cnqotright(::google::protobuf::int32 value) {
  set_has_cnqotright();
  cnqotright_ = value;
  // @@protoc_insertion_point(field_set:Notify.QotRight.cnQotRight)
}

// optional int32 hkOptionQotRight = 7;
inline bool QotRight::has_hkoptionqotright() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void QotRight::set_has_hkoptionqotright() {
  _has_bits_[0] |= 0x00000008u;
}
inline void QotRight::clear_has_hkoptionqotright() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void QotRight::clear_hkoptionqotright() {
  hkoptionqotright_ = 0;
  clear_has_hkoptionqotright();
}
inline ::google::protobuf::int32 QotRight::hkoptionqotright() const {
  // @@protoc_insertion_point(field_get:Notify.QotRight.hkOptionQotRight)
  return hkoptionqotright_;
}
inline void QotRight::set_hkoptionqotright(::google::protobuf::int32 value) {
  set_has_hkoptionqotright();
  hkoptionqotright_ = value;
  // @@protoc_insertion_point(field_set:Notify.QotRight.hkOptionQotRight)
}

// optional bool hasUSOptionQotRight = 8;
inline bool QotRight::has_hasusoptionqotright() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void QotRight::set_has_hasusoptionqotright() {
  _has_bits_[0] |= 0x00000010u;
}
inline void QotRight::clear_has_hasusoptionqotright() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void QotRight::clear_hasusoptionqotright() {
  hasusoptionqotright_ = false;
  clear_has_hasusoptionqotright();
}
inline bool QotRight::hasusoptionqotright() const {
  // @@protoc_insertion_point(field_get:Notify.QotRight.hasUSOptionQotRight)
  return hasusoptionqotright_;
}
inline void QotRight::set_hasusoptionqotright(bool value) {
  set_has_hasusoptionqotright();
  hasusoptionqotright_ = value;
  // @@protoc_insertion_point(field_set:Notify.QotRight.hasUSOptionQotRight)
}

// optional int32 hkFutureQotRight = 9;
inline bool QotRight::has_hkfutureqotright() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void QotRight::set_has_hkfutureqotright() {
  _has_bits_[0] |= 0x00000020u;
}
inline void QotRight::clear_has_hkfutureqotright() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void QotRight::clear_hkfutureqotright() {
  hkfutureqotright_ = 0;
  clear_has_hkfutureqotright();
}
inline ::google::protobuf::int32 QotRight::hkfutureqotright() const {
  // @@protoc_insertion_point(field_get:Notify.QotRight.hkFutureQotRight)
  return hkfutureqotright_;
}
inline void QotRight::set_hkfutureqotright(::google::protobuf::int32 value) {
  set_has_hkfutureqotright();
  hkfutureqotright_ = value;
  // @@protoc_insertion_point(field_set:Notify.QotRight.hkFutureQotRight)
}

// -------------------------------------------------------------------

// APILevel

// required string apiLevel = 3;
inline bool APILevel::has_apilevel() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void APILevel::set_has_apilevel() {
  _has_bits_[0] |= 0x00000001u;
}
inline void APILevel::clear_has_apilevel() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void APILevel::clear_apilevel() {
  apilevel_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_apilevel();
}
inline const ::std::string& APILevel::apilevel() const {
  // @@protoc_insertion_point(field_get:Notify.APILevel.apiLevel)
  return apilevel_.GetNoArena();
}
inline void APILevel::set_apilevel(const ::std::string& value) {
  set_has_apilevel();
  apilevel_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Notify.APILevel.apiLevel)
}
#if LANG_CXX11
inline void APILevel::set_apilevel(::std::string&& value) {
  set_has_apilevel();
  apilevel_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Notify.APILevel.apiLevel)
}
#endif
inline void APILevel::set_apilevel(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_apilevel();
  apilevel_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Notify.APILevel.apiLevel)
}
inline void APILevel::set_apilevel(const char* value, size_t size) {
  set_has_apilevel();
  apilevel_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Notify.APILevel.apiLevel)
}
inline ::std::string* APILevel::mutable_apilevel() {
  set_has_apilevel();
  // @@protoc_insertion_point(field_mutable:Notify.APILevel.apiLevel)
  return apilevel_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* APILevel::release_apilevel() {
  // @@protoc_insertion_point(field_release:Notify.APILevel.apiLevel)
  clear_has_apilevel();
  return apilevel_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void APILevel::set_allocated_apilevel(::std::string* apilevel) {
  if (apilevel != NULL) {
    set_has_apilevel();
  } else {
    clear_has_apilevel();
  }
  apilevel_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), apilevel);
  // @@protoc_insertion_point(field_set_allocated:Notify.APILevel.apiLevel)
}

// -------------------------------------------------------------------

// S2C

// required int32 type = 1;
inline bool S2C::has_type() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void S2C::set_has_type() {
  _has_bits_[0] |= 0x00000020u;
}
inline void S2C::clear_has_type() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void S2C::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 S2C::type() const {
  // @@protoc_insertion_point(field_get:Notify.S2C.type)
  return type_;
}
inline void S2C::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:Notify.S2C.type)
}

// optional .Notify.GtwEvent event = 2;
inline bool S2C::has_event() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void S2C::set_has_event() {
  _has_bits_[0] |= 0x00000001u;
}
inline void S2C::clear_has_event() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void S2C::clear_event() {
  if (event_ != NULL) event_->Clear();
  clear_has_event();
}
inline const ::Notify::GtwEvent& S2C::event() const {
  const ::Notify::GtwEvent* p = event_;
  // @@protoc_insertion_point(field_get:Notify.S2C.event)
  return p != NULL ? *p : *reinterpret_cast<const ::Notify::GtwEvent*>(
      &::Notify::_GtwEvent_default_instance_);
}
inline ::Notify::GtwEvent* S2C::release_event() {
  // @@protoc_insertion_point(field_release:Notify.S2C.event)
  clear_has_event();
  ::Notify::GtwEvent* temp = event_;
  event_ = NULL;
  return temp;
}
inline ::Notify::GtwEvent* S2C::mutable_event() {
  set_has_event();
  if (event_ == NULL) {
    event_ = new ::Notify::GtwEvent;
  }
  // @@protoc_insertion_point(field_mutable:Notify.S2C.event)
  return event_;
}
inline void S2C::set_allocated_event(::Notify::GtwEvent* event) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete event_;
  }
  if (event) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      event = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, event, submessage_arena);
    }
    set_has_event();
  } else {
    clear_has_event();
  }
  event_ = event;
  // @@protoc_insertion_point(field_set_allocated:Notify.S2C.event)
}

// optional .Notify.ProgramStatus programStatus = 3;
inline bool S2C::has_programstatus() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void S2C::set_has_programstatus() {
  _has_bits_[0] |= 0x00000002u;
}
inline void S2C::clear_has_programstatus() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void S2C::clear_programstatus() {
  if (programstatus_ != NULL) programstatus_->Clear();
  clear_has_programstatus();
}
inline const ::Notify::ProgramStatus& S2C::programstatus() const {
  const ::Notify::ProgramStatus* p = programstatus_;
  // @@protoc_insertion_point(field_get:Notify.S2C.programStatus)
  return p != NULL ? *p : *reinterpret_cast<const ::Notify::ProgramStatus*>(
      &::Notify::_ProgramStatus_default_instance_);
}
inline ::Notify::ProgramStatus* S2C::release_programstatus() {
  // @@protoc_insertion_point(field_release:Notify.S2C.programStatus)
  clear_has_programstatus();
  ::Notify::ProgramStatus* temp = programstatus_;
  programstatus_ = NULL;
  return temp;
}
inline ::Notify::ProgramStatus* S2C::mutable_programstatus() {
  set_has_programstatus();
  if (programstatus_ == NULL) {
    programstatus_ = new ::Notify::ProgramStatus;
  }
  // @@protoc_insertion_point(field_mutable:Notify.S2C.programStatus)
  return programstatus_;
}
inline void S2C::set_allocated_programstatus(::Notify::ProgramStatus* programstatus) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete programstatus_;
  }
  if (programstatus) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      programstatus = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, programstatus, submessage_arena);
    }
    set_has_programstatus();
  } else {
    clear_has_programstatus();
  }
  programstatus_ = programstatus;
  // @@protoc_insertion_point(field_set_allocated:Notify.S2C.programStatus)
}

// optional .Notify.ConnectStatus connectStatus = 4;
inline bool S2C::has_connectstatus() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void S2C::set_has_connectstatus() {
  _has_bits_[0] |= 0x00000004u;
}
inline void S2C::clear_has_connectstatus() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void S2C::clear_connectstatus() {
  if (connectstatus_ != NULL) connectstatus_->Clear();
  clear_has_connectstatus();
}
inline const ::Notify::ConnectStatus& S2C::connectstatus() const {
  const ::Notify::ConnectStatus* p = connectstatus_;
  // @@protoc_insertion_point(field_get:Notify.S2C.connectStatus)
  return p != NULL ? *p : *reinterpret_cast<const ::Notify::ConnectStatus*>(
      &::Notify::_ConnectStatus_default_instance_);
}
inline ::Notify::ConnectStatus* S2C::release_connectstatus() {
  // @@protoc_insertion_point(field_release:Notify.S2C.connectStatus)
  clear_has_connectstatus();
  ::Notify::ConnectStatus* temp = connectstatus_;
  connectstatus_ = NULL;
  return temp;
}
inline ::Notify::ConnectStatus* S2C::mutable_connectstatus() {
  set_has_connectstatus();
  if (connectstatus_ == NULL) {
    connectstatus_ = new ::Notify::ConnectStatus;
  }
  // @@protoc_insertion_point(field_mutable:Notify.S2C.connectStatus)
  return connectstatus_;
}
inline void S2C::set_allocated_connectstatus(::Notify::ConnectStatus* connectstatus) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete connectstatus_;
  }
  if (connectstatus) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      connectstatus = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, connectstatus, submessage_arena);
    }
    set_has_connectstatus();
  } else {
    clear_has_connectstatus();
  }
  connectstatus_ = connectstatus;
  // @@protoc_insertion_point(field_set_allocated:Notify.S2C.connectStatus)
}

// optional .Notify.QotRight qotRight = 5;
inline bool S2C::has_qotright() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void S2C::set_has_qotright() {
  _has_bits_[0] |= 0x00000008u;
}
inline void S2C::clear_has_qotright() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void S2C::clear_qotright() {
  if (qotright_ != NULL) qotright_->Clear();
  clear_has_qotright();
}
inline const ::Notify::QotRight& S2C::qotright() const {
  const ::Notify::QotRight* p = qotright_;
  // @@protoc_insertion_point(field_get:Notify.S2C.qotRight)
  return p != NULL ? *p : *reinterpret_cast<const ::Notify::QotRight*>(
      &::Notify::_QotRight_default_instance_);
}
inline ::Notify::QotRight* S2C::release_qotright() {
  // @@protoc_insertion_point(field_release:Notify.S2C.qotRight)
  clear_has_qotright();
  ::Notify::QotRight* temp = qotright_;
  qotright_ = NULL;
  return temp;
}
inline ::Notify::QotRight* S2C::mutable_qotright() {
  set_has_qotright();
  if (qotright_ == NULL) {
    qotright_ = new ::Notify::QotRight;
  }
  // @@protoc_insertion_point(field_mutable:Notify.S2C.qotRight)
  return qotright_;
}
inline void S2C::set_allocated_qotright(::Notify::QotRight* qotright) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete qotright_;
  }
  if (qotright) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      qotright = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, qotright, submessage_arena);
    }
    set_has_qotright();
  } else {
    clear_has_qotright();
  }
  qotright_ = qotright;
  // @@protoc_insertion_point(field_set_allocated:Notify.S2C.qotRight)
}

// optional .Notify.APILevel apiLevel = 6;
inline bool S2C::has_apilevel() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void S2C::set_has_apilevel() {
  _has_bits_[0] |= 0x00000010u;
}
inline void S2C::clear_has_apilevel() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void S2C::clear_apilevel() {
  if (apilevel_ != NULL) apilevel_->Clear();
  clear_has_apilevel();
}
inline const ::Notify::APILevel& S2C::apilevel() const {
  const ::Notify::APILevel* p = apilevel_;
  // @@protoc_insertion_point(field_get:Notify.S2C.apiLevel)
  return p != NULL ? *p : *reinterpret_cast<const ::Notify::APILevel*>(
      &::Notify::_APILevel_default_instance_);
}
inline ::Notify::APILevel* S2C::release_apilevel() {
  // @@protoc_insertion_point(field_release:Notify.S2C.apiLevel)
  clear_has_apilevel();
  ::Notify::APILevel* temp = apilevel_;
  apilevel_ = NULL;
  return temp;
}
inline ::Notify::APILevel* S2C::mutable_apilevel() {
  set_has_apilevel();
  if (apilevel_ == NULL) {
    apilevel_ = new ::Notify::APILevel;
  }
  // @@protoc_insertion_point(field_mutable:Notify.S2C.apiLevel)
  return apilevel_;
}
inline void S2C::set_allocated_apilevel(::Notify::APILevel* apilevel) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete apilevel_;
  }
  if (apilevel) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      apilevel = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, apilevel, submessage_arena);
    }
    set_has_apilevel();
  } else {
    clear_has_apilevel();
  }
  apilevel_ = apilevel;
  // @@protoc_insertion_point(field_set_allocated:Notify.S2C.apiLevel)
}

// -------------------------------------------------------------------

// Response

// required int32 retType = 1 [default = -400];
inline bool Response::has_rettype() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Response::set_has_rettype() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Response::clear_has_rettype() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Response::clear_rettype() {
  rettype_ = -400;
  clear_has_rettype();
}
inline ::google::protobuf::int32 Response::rettype() const {
  // @@protoc_insertion_point(field_get:Notify.Response.retType)
  return rettype_;
}
inline void Response::set_rettype(::google::protobuf::int32 value) {
  set_has_rettype();
  rettype_ = value;
  // @@protoc_insertion_point(field_set:Notify.Response.retType)
}

// optional string retMsg = 2;
inline bool Response::has_retmsg() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Response::set_has_retmsg() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Response::clear_has_retmsg() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Response::clear_retmsg() {
  retmsg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_retmsg();
}
inline const ::std::string& Response::retmsg() const {
  // @@protoc_insertion_point(field_get:Notify.Response.retMsg)
  return retmsg_.GetNoArena();
}
inline void Response::set_retmsg(const ::std::string& value) {
  set_has_retmsg();
  retmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Notify.Response.retMsg)
}
#if LANG_CXX11
inline void Response::set_retmsg(::std::string&& value) {
  set_has_retmsg();
  retmsg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Notify.Response.retMsg)
}
#endif
inline void Response::set_retmsg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_retmsg();
  retmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Notify.Response.retMsg)
}
inline void Response::set_retmsg(const char* value, size_t size) {
  set_has_retmsg();
  retmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Notify.Response.retMsg)
}
inline ::std::string* Response::mutable_retmsg() {
  set_has_retmsg();
  // @@protoc_insertion_point(field_mutable:Notify.Response.retMsg)
  return retmsg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Response::release_retmsg() {
  // @@protoc_insertion_point(field_release:Notify.Response.retMsg)
  clear_has_retmsg();
  return retmsg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Response::set_allocated_retmsg(::std::string* retmsg) {
  if (retmsg != NULL) {
    set_has_retmsg();
  } else {
    clear_has_retmsg();
  }
  retmsg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), retmsg);
  // @@protoc_insertion_point(field_set_allocated:Notify.Response.retMsg)
}

// optional int32 errCode = 3;
inline bool Response::has_errcode() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Response::set_has_errcode() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Response::clear_has_errcode() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Response::clear_errcode() {
  errcode_ = 0;
  clear_has_errcode();
}
inline ::google::protobuf::int32 Response::errcode() const {
  // @@protoc_insertion_point(field_get:Notify.Response.errCode)
  return errcode_;
}
inline void Response::set_errcode(::google::protobuf::int32 value) {
  set_has_errcode();
  errcode_ = value;
  // @@protoc_insertion_point(field_set:Notify.Response.errCode)
}

// optional .Notify.S2C s2c = 4;
inline bool Response::has_s2c() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Response::set_has_s2c() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Response::clear_has_s2c() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Response::clear_s2c() {
  if (s2c_ != NULL) s2c_->Clear();
  clear_has_s2c();
}
inline const ::Notify::S2C& Response::s2c() const {
  const ::Notify::S2C* p = s2c_;
  // @@protoc_insertion_point(field_get:Notify.Response.s2c)
  return p != NULL ? *p : *reinterpret_cast<const ::Notify::S2C*>(
      &::Notify::_S2C_default_instance_);
}
inline ::Notify::S2C* Response::release_s2c() {
  // @@protoc_insertion_point(field_release:Notify.Response.s2c)
  clear_has_s2c();
  ::Notify::S2C* temp = s2c_;
  s2c_ = NULL;
  return temp;
}
inline ::Notify::S2C* Response::mutable_s2c() {
  set_has_s2c();
  if (s2c_ == NULL) {
    s2c_ = new ::Notify::S2C;
  }
  // @@protoc_insertion_point(field_mutable:Notify.Response.s2c)
  return s2c_;
}
inline void Response::set_allocated_s2c(::Notify::S2C* s2c) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete s2c_;
  }
  if (s2c) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      s2c = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, s2c, submessage_arena);
    }
    set_has_s2c();
  } else {
    clear_has_s2c();
  }
  s2c_ = s2c;
  // @@protoc_insertion_point(field_set_allocated:Notify.Response.s2c)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace Notify

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::Notify::NotifyType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Notify::NotifyType>() {
  return ::Notify::NotifyType_descriptor();
}
template <> struct is_proto_enum< ::Notify::GtwEventType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Notify::GtwEventType>() {
  return ::Notify::GtwEventType_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_Notify_2eproto__INCLUDED
