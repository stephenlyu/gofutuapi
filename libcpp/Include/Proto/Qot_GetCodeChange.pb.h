// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Qot_GetCodeChange.proto

#ifndef PROTOBUF_Qot_5fGetCodeChange_2eproto__INCLUDED
#define PROTOBUF_Qot_5fGetCodeChange_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "Common.pb.h"
#include "Qot_Common.pb.h"
// @@protoc_insertion_point(includes)

namespace protobuf_Qot_5fGetCodeChange_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[6];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsCodeChangeInfoImpl();
void InitDefaultsCodeChangeInfo();
void InitDefaultsTimeFilterImpl();
void InitDefaultsTimeFilter();
void InitDefaultsC2SImpl();
void InitDefaultsC2S();
void InitDefaultsS2CImpl();
void InitDefaultsS2C();
void InitDefaultsRequestImpl();
void InitDefaultsRequest();
void InitDefaultsResponseImpl();
void InitDefaultsResponse();
inline void InitDefaults() {
  InitDefaultsCodeChangeInfo();
  InitDefaultsTimeFilter();
  InitDefaultsC2S();
  InitDefaultsS2C();
  InitDefaultsRequest();
  InitDefaultsResponse();
}
}  // namespace protobuf_Qot_5fGetCodeChange_2eproto
namespace Qot_GetCodeChange {
class C2S;
class C2SDefaultTypeInternal;
extern C2SDefaultTypeInternal _C2S_default_instance_;
class CodeChangeInfo;
class CodeChangeInfoDefaultTypeInternal;
extern CodeChangeInfoDefaultTypeInternal _CodeChangeInfo_default_instance_;
class Request;
class RequestDefaultTypeInternal;
extern RequestDefaultTypeInternal _Request_default_instance_;
class Response;
class ResponseDefaultTypeInternal;
extern ResponseDefaultTypeInternal _Response_default_instance_;
class S2C;
class S2CDefaultTypeInternal;
extern S2CDefaultTypeInternal _S2C_default_instance_;
class TimeFilter;
class TimeFilterDefaultTypeInternal;
extern TimeFilterDefaultTypeInternal _TimeFilter_default_instance_;
}  // namespace Qot_GetCodeChange
namespace Qot_GetCodeChange {

enum CodeChangeType {
  CodeChangeType_Unkown = 0,
  CodeChangeType_GemToMain = 1,
  CodeChangeType_Unpaid = 2,
  CodeChangeType_ChangeLot = 3,
  CodeChangeType_Split = 4,
  CodeChangeType_Joint = 5,
  CodeChangeType_JointSplit = 6,
  CodeChangeType_SplitJoint = 7,
  CodeChangeType_Other = 8
};
bool CodeChangeType_IsValid(int value);
const CodeChangeType CodeChangeType_MIN = CodeChangeType_Unkown;
const CodeChangeType CodeChangeType_MAX = CodeChangeType_Other;
const int CodeChangeType_ARRAYSIZE = CodeChangeType_MAX + 1;

const ::google::protobuf::EnumDescriptor* CodeChangeType_descriptor();
inline const ::std::string& CodeChangeType_Name(CodeChangeType value) {
  return ::google::protobuf::internal::NameOfEnum(
    CodeChangeType_descriptor(), value);
}
inline bool CodeChangeType_Parse(
    const ::std::string& name, CodeChangeType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CodeChangeType>(
    CodeChangeType_descriptor(), name, value);
}
enum TimeFilterType {
  TimeFilterType_Unknow = 0,
  TimeFilterType_Public = 1,
  TimeFilterType_Effective = 2,
  TimeFilterType_End = 3
};
bool TimeFilterType_IsValid(int value);
const TimeFilterType TimeFilterType_MIN = TimeFilterType_Unknow;
const TimeFilterType TimeFilterType_MAX = TimeFilterType_End;
const int TimeFilterType_ARRAYSIZE = TimeFilterType_MAX + 1;

const ::google::protobuf::EnumDescriptor* TimeFilterType_descriptor();
inline const ::std::string& TimeFilterType_Name(TimeFilterType value) {
  return ::google::protobuf::internal::NameOfEnum(
    TimeFilterType_descriptor(), value);
}
inline bool TimeFilterType_Parse(
    const ::std::string& name, TimeFilterType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TimeFilterType>(
    TimeFilterType_descriptor(), name, value);
}
// ===================================================================

class CodeChangeInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Qot_GetCodeChange.CodeChangeInfo) */ {
 public:
  CodeChangeInfo();
  virtual ~CodeChangeInfo();

  CodeChangeInfo(const CodeChangeInfo& from);

  inline CodeChangeInfo& operator=(const CodeChangeInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CodeChangeInfo(CodeChangeInfo&& from) noexcept
    : CodeChangeInfo() {
    *this = ::std::move(from);
  }

  inline CodeChangeInfo& operator=(CodeChangeInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CodeChangeInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CodeChangeInfo* internal_default_instance() {
    return reinterpret_cast<const CodeChangeInfo*>(
               &_CodeChangeInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(CodeChangeInfo* other);
  friend void swap(CodeChangeInfo& a, CodeChangeInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CodeChangeInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  CodeChangeInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CodeChangeInfo& from);
  void MergeFrom(const CodeChangeInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CodeChangeInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string publicTime = 4;
  bool has_publictime() const;
  void clear_publictime();
  static const int kPublicTimeFieldNumber = 4;
  const ::std::string& publictime() const;
  void set_publictime(const ::std::string& value);
  #if LANG_CXX11
  void set_publictime(::std::string&& value);
  #endif
  void set_publictime(const char* value);
  void set_publictime(const char* value, size_t size);
  ::std::string* mutable_publictime();
  ::std::string* release_publictime();
  void set_allocated_publictime(::std::string* publictime);

  // optional string effectiveTime = 6;
  bool has_effectivetime() const;
  void clear_effectivetime();
  static const int kEffectiveTimeFieldNumber = 6;
  const ::std::string& effectivetime() const;
  void set_effectivetime(const ::std::string& value);
  #if LANG_CXX11
  void set_effectivetime(::std::string&& value);
  #endif
  void set_effectivetime(const char* value);
  void set_effectivetime(const char* value, size_t size);
  ::std::string* mutable_effectivetime();
  ::std::string* release_effectivetime();
  void set_allocated_effectivetime(::std::string* effectivetime);

  // optional string endTime = 8;
  bool has_endtime() const;
  void clear_endtime();
  static const int kEndTimeFieldNumber = 8;
  const ::std::string& endtime() const;
  void set_endtime(const ::std::string& value);
  #if LANG_CXX11
  void set_endtime(::std::string&& value);
  #endif
  void set_endtime(const char* value);
  void set_endtime(const char* value, size_t size);
  ::std::string* mutable_endtime();
  ::std::string* release_endtime();
  void set_allocated_endtime(::std::string* endtime);

  // required .Qot_Common.Security security = 2;
  bool has_security() const;
  void clear_security();
  static const int kSecurityFieldNumber = 2;
  const ::Qot_Common::Security& security() const;
  ::Qot_Common::Security* release_security();
  ::Qot_Common::Security* mutable_security();
  void set_allocated_security(::Qot_Common::Security* security);

  // required .Qot_Common.Security relatedSecurity = 3;
  bool has_relatedsecurity() const;
  void clear_relatedsecurity();
  static const int kRelatedSecurityFieldNumber = 3;
  const ::Qot_Common::Security& relatedsecurity() const;
  ::Qot_Common::Security* release_relatedsecurity();
  ::Qot_Common::Security* mutable_relatedsecurity();
  void set_allocated_relatedsecurity(::Qot_Common::Security* relatedsecurity);

  // optional double publicTimestamp = 5;
  bool has_publictimestamp() const;
  void clear_publictimestamp();
  static const int kPublicTimestampFieldNumber = 5;
  double publictimestamp() const;
  void set_publictimestamp(double value);

  // optional double effectiveTimestamp = 7;
  bool has_effectivetimestamp() const;
  void clear_effectivetimestamp();
  static const int kEffectiveTimestampFieldNumber = 7;
  double effectivetimestamp() const;
  void set_effectivetimestamp(double value);

  // optional double endTimestamp = 9;
  bool has_endtimestamp() const;
  void clear_endtimestamp();
  static const int kEndTimestampFieldNumber = 9;
  double endtimestamp() const;
  void set_endtimestamp(double value);

  // required int32 type = 1;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Qot_GetCodeChange.CodeChangeInfo)
 private:
  void set_has_type();
  void clear_has_type();
  void set_has_security();
  void clear_has_security();
  void set_has_relatedsecurity();
  void clear_has_relatedsecurity();
  void set_has_publictime();
  void clear_has_publictime();
  void set_has_publictimestamp();
  void clear_has_publictimestamp();
  void set_has_effectivetime();
  void clear_has_effectivetime();
  void set_has_effectivetimestamp();
  void clear_has_effectivetimestamp();
  void set_has_endtime();
  void clear_has_endtime();
  void set_has_endtimestamp();
  void clear_has_endtimestamp();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr publictime_;
  ::google::protobuf::internal::ArenaStringPtr effectivetime_;
  ::google::protobuf::internal::ArenaStringPtr endtime_;
  ::Qot_Common::Security* security_;
  ::Qot_Common::Security* relatedsecurity_;
  double publictimestamp_;
  double effectivetimestamp_;
  double endtimestamp_;
  ::google::protobuf::int32 type_;
  friend struct ::protobuf_Qot_5fGetCodeChange_2eproto::TableStruct;
  friend void ::protobuf_Qot_5fGetCodeChange_2eproto::InitDefaultsCodeChangeInfoImpl();
};
// -------------------------------------------------------------------

class TimeFilter : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Qot_GetCodeChange.TimeFilter) */ {
 public:
  TimeFilter();
  virtual ~TimeFilter();

  TimeFilter(const TimeFilter& from);

  inline TimeFilter& operator=(const TimeFilter& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TimeFilter(TimeFilter&& from) noexcept
    : TimeFilter() {
    *this = ::std::move(from);
  }

  inline TimeFilter& operator=(TimeFilter&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TimeFilter& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TimeFilter* internal_default_instance() {
    return reinterpret_cast<const TimeFilter*>(
               &_TimeFilter_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(TimeFilter* other);
  friend void swap(TimeFilter& a, TimeFilter& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TimeFilter* New() const PROTOBUF_FINAL { return New(NULL); }

  TimeFilter* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TimeFilter& from);
  void MergeFrom(const TimeFilter& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TimeFilter* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string beginTime = 2;
  bool has_begintime() const;
  void clear_begintime();
  static const int kBeginTimeFieldNumber = 2;
  const ::std::string& begintime() const;
  void set_begintime(const ::std::string& value);
  #if LANG_CXX11
  void set_begintime(::std::string&& value);
  #endif
  void set_begintime(const char* value);
  void set_begintime(const char* value, size_t size);
  ::std::string* mutable_begintime();
  ::std::string* release_begintime();
  void set_allocated_begintime(::std::string* begintime);

  // optional string endTime = 3;
  bool has_endtime() const;
  void clear_endtime();
  static const int kEndTimeFieldNumber = 3;
  const ::std::string& endtime() const;
  void set_endtime(const ::std::string& value);
  #if LANG_CXX11
  void set_endtime(::std::string&& value);
  #endif
  void set_endtime(const char* value);
  void set_endtime(const char* value, size_t size);
  ::std::string* mutable_endtime();
  ::std::string* release_endtime();
  void set_allocated_endtime(::std::string* endtime);

  // required int32 type = 1;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Qot_GetCodeChange.TimeFilter)
 private:
  void set_has_type();
  void clear_has_type();
  void set_has_begintime();
  void clear_has_begintime();
  void set_has_endtime();
  void clear_has_endtime();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr begintime_;
  ::google::protobuf::internal::ArenaStringPtr endtime_;
  ::google::protobuf::int32 type_;
  friend struct ::protobuf_Qot_5fGetCodeChange_2eproto::TableStruct;
  friend void ::protobuf_Qot_5fGetCodeChange_2eproto::InitDefaultsTimeFilterImpl();
};
// -------------------------------------------------------------------

class C2S : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Qot_GetCodeChange.C2S) */ {
 public:
  C2S();
  virtual ~C2S();

  C2S(const C2S& from);

  inline C2S& operator=(const C2S& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  C2S(C2S&& from) noexcept
    : C2S() {
    *this = ::std::move(from);
  }

  inline C2S& operator=(C2S&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2S& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const C2S* internal_default_instance() {
    return reinterpret_cast<const C2S*>(
               &_C2S_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(C2S* other);
  friend void swap(C2S& a, C2S& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline C2S* New() const PROTOBUF_FINAL { return New(NULL); }

  C2S* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const C2S& from);
  void MergeFrom(const C2S& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(C2S* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Qot_Common.Security securityList = 2;
  int securitylist_size() const;
  void clear_securitylist();
  static const int kSecurityListFieldNumber = 2;
  const ::Qot_Common::Security& securitylist(int index) const;
  ::Qot_Common::Security* mutable_securitylist(int index);
  ::Qot_Common::Security* add_securitylist();
  ::google::protobuf::RepeatedPtrField< ::Qot_Common::Security >*
      mutable_securitylist();
  const ::google::protobuf::RepeatedPtrField< ::Qot_Common::Security >&
      securitylist() const;

  // repeated .Qot_GetCodeChange.TimeFilter timeFilterList = 3;
  int timefilterlist_size() const;
  void clear_timefilterlist();
  static const int kTimeFilterListFieldNumber = 3;
  const ::Qot_GetCodeChange::TimeFilter& timefilterlist(int index) const;
  ::Qot_GetCodeChange::TimeFilter* mutable_timefilterlist(int index);
  ::Qot_GetCodeChange::TimeFilter* add_timefilterlist();
  ::google::protobuf::RepeatedPtrField< ::Qot_GetCodeChange::TimeFilter >*
      mutable_timefilterlist();
  const ::google::protobuf::RepeatedPtrField< ::Qot_GetCodeChange::TimeFilter >&
      timefilterlist() const;

  // repeated int32 typeList = 4;
  int typelist_size() const;
  void clear_typelist();
  static const int kTypeListFieldNumber = 4;
  ::google::protobuf::int32 typelist(int index) const;
  void set_typelist(int index, ::google::protobuf::int32 value);
  void add_typelist(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      typelist() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_typelist();

  // optional int32 placeHolder = 1;
  bool has_placeholder() const;
  void clear_placeholder();
  static const int kPlaceHolderFieldNumber = 1;
  ::google::protobuf::int32 placeholder() const;
  void set_placeholder(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Qot_GetCodeChange.C2S)
 private:
  void set_has_placeholder();
  void clear_has_placeholder();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::Qot_Common::Security > securitylist_;
  ::google::protobuf::RepeatedPtrField< ::Qot_GetCodeChange::TimeFilter > timefilterlist_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > typelist_;
  ::google::protobuf::int32 placeholder_;
  friend struct ::protobuf_Qot_5fGetCodeChange_2eproto::TableStruct;
  friend void ::protobuf_Qot_5fGetCodeChange_2eproto::InitDefaultsC2SImpl();
};
// -------------------------------------------------------------------

class S2C : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Qot_GetCodeChange.S2C) */ {
 public:
  S2C();
  virtual ~S2C();

  S2C(const S2C& from);

  inline S2C& operator=(const S2C& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2C(S2C&& from) noexcept
    : S2C() {
    *this = ::std::move(from);
  }

  inline S2C& operator=(S2C&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S2C& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2C* internal_default_instance() {
    return reinterpret_cast<const S2C*>(
               &_S2C_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(S2C* other);
  friend void swap(S2C& a, S2C& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2C* New() const PROTOBUF_FINAL { return New(NULL); }

  S2C* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const S2C& from);
  void MergeFrom(const S2C& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(S2C* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Qot_GetCodeChange.CodeChangeInfo codeChangeList = 1;
  int codechangelist_size() const;
  void clear_codechangelist();
  static const int kCodeChangeListFieldNumber = 1;
  const ::Qot_GetCodeChange::CodeChangeInfo& codechangelist(int index) const;
  ::Qot_GetCodeChange::CodeChangeInfo* mutable_codechangelist(int index);
  ::Qot_GetCodeChange::CodeChangeInfo* add_codechangelist();
  ::google::protobuf::RepeatedPtrField< ::Qot_GetCodeChange::CodeChangeInfo >*
      mutable_codechangelist();
  const ::google::protobuf::RepeatedPtrField< ::Qot_GetCodeChange::CodeChangeInfo >&
      codechangelist() const;

  // @@protoc_insertion_point(class_scope:Qot_GetCodeChange.S2C)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::Qot_GetCodeChange::CodeChangeInfo > codechangelist_;
  friend struct ::protobuf_Qot_5fGetCodeChange_2eproto::TableStruct;
  friend void ::protobuf_Qot_5fGetCodeChange_2eproto::InitDefaultsS2CImpl();
};
// -------------------------------------------------------------------

class Request : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Qot_GetCodeChange.Request) */ {
 public:
  Request();
  virtual ~Request();

  Request(const Request& from);

  inline Request& operator=(const Request& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Request(Request&& from) noexcept
    : Request() {
    *this = ::std::move(from);
  }

  inline Request& operator=(Request&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Request& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Request* internal_default_instance() {
    return reinterpret_cast<const Request*>(
               &_Request_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(Request* other);
  friend void swap(Request& a, Request& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Request* New() const PROTOBUF_FINAL { return New(NULL); }

  Request* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Request& from);
  void MergeFrom(const Request& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .Qot_GetCodeChange.C2S c2s = 1;
  bool has_c2s() const;
  void clear_c2s();
  static const int kC2SFieldNumber = 1;
  const ::Qot_GetCodeChange::C2S& c2s() const;
  ::Qot_GetCodeChange::C2S* release_c2s();
  ::Qot_GetCodeChange::C2S* mutable_c2s();
  void set_allocated_c2s(::Qot_GetCodeChange::C2S* c2s);

  // @@protoc_insertion_point(class_scope:Qot_GetCodeChange.Request)
 private:
  void set_has_c2s();
  void clear_has_c2s();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::Qot_GetCodeChange::C2S* c2s_;
  friend struct ::protobuf_Qot_5fGetCodeChange_2eproto::TableStruct;
  friend void ::protobuf_Qot_5fGetCodeChange_2eproto::InitDefaultsRequestImpl();
};
// -------------------------------------------------------------------

class Response : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Qot_GetCodeChange.Response) */ {
 public:
  Response();
  virtual ~Response();

  Response(const Response& from);

  inline Response& operator=(const Response& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Response(Response&& from) noexcept
    : Response() {
    *this = ::std::move(from);
  }

  inline Response& operator=(Response&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Response& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Response* internal_default_instance() {
    return reinterpret_cast<const Response*>(
               &_Response_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(Response* other);
  friend void swap(Response& a, Response& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Response* New() const PROTOBUF_FINAL { return New(NULL); }

  Response* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Response& from);
  void MergeFrom(const Response& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string retMsg = 2;
  bool has_retmsg() const;
  void clear_retmsg();
  static const int kRetMsgFieldNumber = 2;
  const ::std::string& retmsg() const;
  void set_retmsg(const ::std::string& value);
  #if LANG_CXX11
  void set_retmsg(::std::string&& value);
  #endif
  void set_retmsg(const char* value);
  void set_retmsg(const char* value, size_t size);
  ::std::string* mutable_retmsg();
  ::std::string* release_retmsg();
  void set_allocated_retmsg(::std::string* retmsg);

  // optional .Qot_GetCodeChange.S2C s2c = 4;
  bool has_s2c() const;
  void clear_s2c();
  static const int kS2CFieldNumber = 4;
  const ::Qot_GetCodeChange::S2C& s2c() const;
  ::Qot_GetCodeChange::S2C* release_s2c();
  ::Qot_GetCodeChange::S2C* mutable_s2c();
  void set_allocated_s2c(::Qot_GetCodeChange::S2C* s2c);

  // optional int32 errCode = 3;
  bool has_errcode() const;
  void clear_errcode();
  static const int kErrCodeFieldNumber = 3;
  ::google::protobuf::int32 errcode() const;
  void set_errcode(::google::protobuf::int32 value);

  // required int32 retType = 1 [default = -400];
  bool has_rettype() const;
  void clear_rettype();
  static const int kRetTypeFieldNumber = 1;
  ::google::protobuf::int32 rettype() const;
  void set_rettype(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Qot_GetCodeChange.Response)
 private:
  void set_has_rettype();
  void clear_has_rettype();
  void set_has_retmsg();
  void clear_has_retmsg();
  void set_has_errcode();
  void clear_has_errcode();
  void set_has_s2c();
  void clear_has_s2c();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr retmsg_;
  ::Qot_GetCodeChange::S2C* s2c_;
  ::google::protobuf::int32 errcode_;
  ::google::protobuf::int32 rettype_;
  friend struct ::protobuf_Qot_5fGetCodeChange_2eproto::TableStruct;
  friend void ::protobuf_Qot_5fGetCodeChange_2eproto::InitDefaultsResponseImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// CodeChangeInfo

// required int32 type = 1;
inline bool CodeChangeInfo::has_type() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CodeChangeInfo::set_has_type() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CodeChangeInfo::clear_has_type() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CodeChangeInfo::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 CodeChangeInfo::type() const {
  // @@protoc_insertion_point(field_get:Qot_GetCodeChange.CodeChangeInfo.type)
  return type_;
}
inline void CodeChangeInfo::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:Qot_GetCodeChange.CodeChangeInfo.type)
}

// required .Qot_Common.Security security = 2;
inline bool CodeChangeInfo::has_security() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CodeChangeInfo::set_has_security() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CodeChangeInfo::clear_has_security() {
  _has_bits_[0] &= ~0x00000008u;
}
inline const ::Qot_Common::Security& CodeChangeInfo::security() const {
  const ::Qot_Common::Security* p = security_;
  // @@protoc_insertion_point(field_get:Qot_GetCodeChange.CodeChangeInfo.security)
  return p != NULL ? *p : *reinterpret_cast<const ::Qot_Common::Security*>(
      &::Qot_Common::_Security_default_instance_);
}
inline ::Qot_Common::Security* CodeChangeInfo::release_security() {
  // @@protoc_insertion_point(field_release:Qot_GetCodeChange.CodeChangeInfo.security)
  clear_has_security();
  ::Qot_Common::Security* temp = security_;
  security_ = NULL;
  return temp;
}
inline ::Qot_Common::Security* CodeChangeInfo::mutable_security() {
  set_has_security();
  if (security_ == NULL) {
    security_ = new ::Qot_Common::Security;
  }
  // @@protoc_insertion_point(field_mutable:Qot_GetCodeChange.CodeChangeInfo.security)
  return security_;
}
inline void CodeChangeInfo::set_allocated_security(::Qot_Common::Security* security) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(security_);
  }
  if (security) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      security = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, security, submessage_arena);
    }
    set_has_security();
  } else {
    clear_has_security();
  }
  security_ = security;
  // @@protoc_insertion_point(field_set_allocated:Qot_GetCodeChange.CodeChangeInfo.security)
}

// required .Qot_Common.Security relatedSecurity = 3;
inline bool CodeChangeInfo::has_relatedsecurity() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CodeChangeInfo::set_has_relatedsecurity() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CodeChangeInfo::clear_has_relatedsecurity() {
  _has_bits_[0] &= ~0x00000010u;
}
inline const ::Qot_Common::Security& CodeChangeInfo::relatedsecurity() const {
  const ::Qot_Common::Security* p = relatedsecurity_;
  // @@protoc_insertion_point(field_get:Qot_GetCodeChange.CodeChangeInfo.relatedSecurity)
  return p != NULL ? *p : *reinterpret_cast<const ::Qot_Common::Security*>(
      &::Qot_Common::_Security_default_instance_);
}
inline ::Qot_Common::Security* CodeChangeInfo::release_relatedsecurity() {
  // @@protoc_insertion_point(field_release:Qot_GetCodeChange.CodeChangeInfo.relatedSecurity)
  clear_has_relatedsecurity();
  ::Qot_Common::Security* temp = relatedsecurity_;
  relatedsecurity_ = NULL;
  return temp;
}
inline ::Qot_Common::Security* CodeChangeInfo::mutable_relatedsecurity() {
  set_has_relatedsecurity();
  if (relatedsecurity_ == NULL) {
    relatedsecurity_ = new ::Qot_Common::Security;
  }
  // @@protoc_insertion_point(field_mutable:Qot_GetCodeChange.CodeChangeInfo.relatedSecurity)
  return relatedsecurity_;
}
inline void CodeChangeInfo::set_allocated_relatedsecurity(::Qot_Common::Security* relatedsecurity) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(relatedsecurity_);
  }
  if (relatedsecurity) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      relatedsecurity = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, relatedsecurity, submessage_arena);
    }
    set_has_relatedsecurity();
  } else {
    clear_has_relatedsecurity();
  }
  relatedsecurity_ = relatedsecurity;
  // @@protoc_insertion_point(field_set_allocated:Qot_GetCodeChange.CodeChangeInfo.relatedSecurity)
}

// optional string publicTime = 4;
inline bool CodeChangeInfo::has_publictime() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CodeChangeInfo::set_has_publictime() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CodeChangeInfo::clear_has_publictime() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CodeChangeInfo::clear_publictime() {
  publictime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_publictime();
}
inline const ::std::string& CodeChangeInfo::publictime() const {
  // @@protoc_insertion_point(field_get:Qot_GetCodeChange.CodeChangeInfo.publicTime)
  return publictime_.GetNoArena();
}
inline void CodeChangeInfo::set_publictime(const ::std::string& value) {
  set_has_publictime();
  publictime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Qot_GetCodeChange.CodeChangeInfo.publicTime)
}
#if LANG_CXX11
inline void CodeChangeInfo::set_publictime(::std::string&& value) {
  set_has_publictime();
  publictime_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Qot_GetCodeChange.CodeChangeInfo.publicTime)
}
#endif
inline void CodeChangeInfo::set_publictime(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_publictime();
  publictime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Qot_GetCodeChange.CodeChangeInfo.publicTime)
}
inline void CodeChangeInfo::set_publictime(const char* value, size_t size) {
  set_has_publictime();
  publictime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Qot_GetCodeChange.CodeChangeInfo.publicTime)
}
inline ::std::string* CodeChangeInfo::mutable_publictime() {
  set_has_publictime();
  // @@protoc_insertion_point(field_mutable:Qot_GetCodeChange.CodeChangeInfo.publicTime)
  return publictime_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CodeChangeInfo::release_publictime() {
  // @@protoc_insertion_point(field_release:Qot_GetCodeChange.CodeChangeInfo.publicTime)
  clear_has_publictime();
  return publictime_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CodeChangeInfo::set_allocated_publictime(::std::string* publictime) {
  if (publictime != NULL) {
    set_has_publictime();
  } else {
    clear_has_publictime();
  }
  publictime_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), publictime);
  // @@protoc_insertion_point(field_set_allocated:Qot_GetCodeChange.CodeChangeInfo.publicTime)
}

// optional double publicTimestamp = 5;
inline bool CodeChangeInfo::has_publictimestamp() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CodeChangeInfo::set_has_publictimestamp() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CodeChangeInfo::clear_has_publictimestamp() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CodeChangeInfo::clear_publictimestamp() {
  publictimestamp_ = 0;
  clear_has_publictimestamp();
}
inline double CodeChangeInfo::publictimestamp() const {
  // @@protoc_insertion_point(field_get:Qot_GetCodeChange.CodeChangeInfo.publicTimestamp)
  return publictimestamp_;
}
inline void CodeChangeInfo::set_publictimestamp(double value) {
  set_has_publictimestamp();
  publictimestamp_ = value;
  // @@protoc_insertion_point(field_set:Qot_GetCodeChange.CodeChangeInfo.publicTimestamp)
}

// optional string effectiveTime = 6;
inline bool CodeChangeInfo::has_effectivetime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CodeChangeInfo::set_has_effectivetime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CodeChangeInfo::clear_has_effectivetime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CodeChangeInfo::clear_effectivetime() {
  effectivetime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_effectivetime();
}
inline const ::std::string& CodeChangeInfo::effectivetime() const {
  // @@protoc_insertion_point(field_get:Qot_GetCodeChange.CodeChangeInfo.effectiveTime)
  return effectivetime_.GetNoArena();
}
inline void CodeChangeInfo::set_effectivetime(const ::std::string& value) {
  set_has_effectivetime();
  effectivetime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Qot_GetCodeChange.CodeChangeInfo.effectiveTime)
}
#if LANG_CXX11
inline void CodeChangeInfo::set_effectivetime(::std::string&& value) {
  set_has_effectivetime();
  effectivetime_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Qot_GetCodeChange.CodeChangeInfo.effectiveTime)
}
#endif
inline void CodeChangeInfo::set_effectivetime(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_effectivetime();
  effectivetime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Qot_GetCodeChange.CodeChangeInfo.effectiveTime)
}
inline void CodeChangeInfo::set_effectivetime(const char* value, size_t size) {
  set_has_effectivetime();
  effectivetime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Qot_GetCodeChange.CodeChangeInfo.effectiveTime)
}
inline ::std::string* CodeChangeInfo::mutable_effectivetime() {
  set_has_effectivetime();
  // @@protoc_insertion_point(field_mutable:Qot_GetCodeChange.CodeChangeInfo.effectiveTime)
  return effectivetime_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CodeChangeInfo::release_effectivetime() {
  // @@protoc_insertion_point(field_release:Qot_GetCodeChange.CodeChangeInfo.effectiveTime)
  clear_has_effectivetime();
  return effectivetime_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CodeChangeInfo::set_allocated_effectivetime(::std::string* effectivetime) {
  if (effectivetime != NULL) {
    set_has_effectivetime();
  } else {
    clear_has_effectivetime();
  }
  effectivetime_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), effectivetime);
  // @@protoc_insertion_point(field_set_allocated:Qot_GetCodeChange.CodeChangeInfo.effectiveTime)
}

// optional double effectiveTimestamp = 7;
inline bool CodeChangeInfo::has_effectivetimestamp() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CodeChangeInfo::set_has_effectivetimestamp() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CodeChangeInfo::clear_has_effectivetimestamp() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CodeChangeInfo::clear_effectivetimestamp() {
  effectivetimestamp_ = 0;
  clear_has_effectivetimestamp();
}
inline double CodeChangeInfo::effectivetimestamp() const {
  // @@protoc_insertion_point(field_get:Qot_GetCodeChange.CodeChangeInfo.effectiveTimestamp)
  return effectivetimestamp_;
}
inline void CodeChangeInfo::set_effectivetimestamp(double value) {
  set_has_effectivetimestamp();
  effectivetimestamp_ = value;
  // @@protoc_insertion_point(field_set:Qot_GetCodeChange.CodeChangeInfo.effectiveTimestamp)
}

// optional string endTime = 8;
inline bool CodeChangeInfo::has_endtime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CodeChangeInfo::set_has_endtime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CodeChangeInfo::clear_has_endtime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CodeChangeInfo::clear_endtime() {
  endtime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_endtime();
}
inline const ::std::string& CodeChangeInfo::endtime() const {
  // @@protoc_insertion_point(field_get:Qot_GetCodeChange.CodeChangeInfo.endTime)
  return endtime_.GetNoArena();
}
inline void CodeChangeInfo::set_endtime(const ::std::string& value) {
  set_has_endtime();
  endtime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Qot_GetCodeChange.CodeChangeInfo.endTime)
}
#if LANG_CXX11
inline void CodeChangeInfo::set_endtime(::std::string&& value) {
  set_has_endtime();
  endtime_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Qot_GetCodeChange.CodeChangeInfo.endTime)
}
#endif
inline void CodeChangeInfo::set_endtime(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_endtime();
  endtime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Qot_GetCodeChange.CodeChangeInfo.endTime)
}
inline void CodeChangeInfo::set_endtime(const char* value, size_t size) {
  set_has_endtime();
  endtime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Qot_GetCodeChange.CodeChangeInfo.endTime)
}
inline ::std::string* CodeChangeInfo::mutable_endtime() {
  set_has_endtime();
  // @@protoc_insertion_point(field_mutable:Qot_GetCodeChange.CodeChangeInfo.endTime)
  return endtime_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CodeChangeInfo::release_endtime() {
  // @@protoc_insertion_point(field_release:Qot_GetCodeChange.CodeChangeInfo.endTime)
  clear_has_endtime();
  return endtime_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CodeChangeInfo::set_allocated_endtime(::std::string* endtime) {
  if (endtime != NULL) {
    set_has_endtime();
  } else {
    clear_has_endtime();
  }
  endtime_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), endtime);
  // @@protoc_insertion_point(field_set_allocated:Qot_GetCodeChange.CodeChangeInfo.endTime)
}

// optional double endTimestamp = 9;
inline bool CodeChangeInfo::has_endtimestamp() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CodeChangeInfo::set_has_endtimestamp() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CodeChangeInfo::clear_has_endtimestamp() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CodeChangeInfo::clear_endtimestamp() {
  endtimestamp_ = 0;
  clear_has_endtimestamp();
}
inline double CodeChangeInfo::endtimestamp() const {
  // @@protoc_insertion_point(field_get:Qot_GetCodeChange.CodeChangeInfo.endTimestamp)
  return endtimestamp_;
}
inline void CodeChangeInfo::set_endtimestamp(double value) {
  set_has_endtimestamp();
  endtimestamp_ = value;
  // @@protoc_insertion_point(field_set:Qot_GetCodeChange.CodeChangeInfo.endTimestamp)
}

// -------------------------------------------------------------------

// TimeFilter

// required int32 type = 1;
inline bool TimeFilter::has_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TimeFilter::set_has_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TimeFilter::clear_has_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TimeFilter::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 TimeFilter::type() const {
  // @@protoc_insertion_point(field_get:Qot_GetCodeChange.TimeFilter.type)
  return type_;
}
inline void TimeFilter::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:Qot_GetCodeChange.TimeFilter.type)
}

// optional string beginTime = 2;
inline bool TimeFilter::has_begintime() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TimeFilter::set_has_begintime() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TimeFilter::clear_has_begintime() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TimeFilter::clear_begintime() {
  begintime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_begintime();
}
inline const ::std::string& TimeFilter::begintime() const {
  // @@protoc_insertion_point(field_get:Qot_GetCodeChange.TimeFilter.beginTime)
  return begintime_.GetNoArena();
}
inline void TimeFilter::set_begintime(const ::std::string& value) {
  set_has_begintime();
  begintime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Qot_GetCodeChange.TimeFilter.beginTime)
}
#if LANG_CXX11
inline void TimeFilter::set_begintime(::std::string&& value) {
  set_has_begintime();
  begintime_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Qot_GetCodeChange.TimeFilter.beginTime)
}
#endif
inline void TimeFilter::set_begintime(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_begintime();
  begintime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Qot_GetCodeChange.TimeFilter.beginTime)
}
inline void TimeFilter::set_begintime(const char* value, size_t size) {
  set_has_begintime();
  begintime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Qot_GetCodeChange.TimeFilter.beginTime)
}
inline ::std::string* TimeFilter::mutable_begintime() {
  set_has_begintime();
  // @@protoc_insertion_point(field_mutable:Qot_GetCodeChange.TimeFilter.beginTime)
  return begintime_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TimeFilter::release_begintime() {
  // @@protoc_insertion_point(field_release:Qot_GetCodeChange.TimeFilter.beginTime)
  clear_has_begintime();
  return begintime_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TimeFilter::set_allocated_begintime(::std::string* begintime) {
  if (begintime != NULL) {
    set_has_begintime();
  } else {
    clear_has_begintime();
  }
  begintime_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), begintime);
  // @@protoc_insertion_point(field_set_allocated:Qot_GetCodeChange.TimeFilter.beginTime)
}

// optional string endTime = 3;
inline bool TimeFilter::has_endtime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TimeFilter::set_has_endtime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TimeFilter::clear_has_endtime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TimeFilter::clear_endtime() {
  endtime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_endtime();
}
inline const ::std::string& TimeFilter::endtime() const {
  // @@protoc_insertion_point(field_get:Qot_GetCodeChange.TimeFilter.endTime)
  return endtime_.GetNoArena();
}
inline void TimeFilter::set_endtime(const ::std::string& value) {
  set_has_endtime();
  endtime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Qot_GetCodeChange.TimeFilter.endTime)
}
#if LANG_CXX11
inline void TimeFilter::set_endtime(::std::string&& value) {
  set_has_endtime();
  endtime_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Qot_GetCodeChange.TimeFilter.endTime)
}
#endif
inline void TimeFilter::set_endtime(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_endtime();
  endtime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Qot_GetCodeChange.TimeFilter.endTime)
}
inline void TimeFilter::set_endtime(const char* value, size_t size) {
  set_has_endtime();
  endtime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Qot_GetCodeChange.TimeFilter.endTime)
}
inline ::std::string* TimeFilter::mutable_endtime() {
  set_has_endtime();
  // @@protoc_insertion_point(field_mutable:Qot_GetCodeChange.TimeFilter.endTime)
  return endtime_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TimeFilter::release_endtime() {
  // @@protoc_insertion_point(field_release:Qot_GetCodeChange.TimeFilter.endTime)
  clear_has_endtime();
  return endtime_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TimeFilter::set_allocated_endtime(::std::string* endtime) {
  if (endtime != NULL) {
    set_has_endtime();
  } else {
    clear_has_endtime();
  }
  endtime_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), endtime);
  // @@protoc_insertion_point(field_set_allocated:Qot_GetCodeChange.TimeFilter.endTime)
}

// -------------------------------------------------------------------

// C2S

// optional int32 placeHolder = 1;
inline bool C2S::has_placeholder() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C2S::set_has_placeholder() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C2S::clear_has_placeholder() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void C2S::clear_placeholder() {
  placeholder_ = 0;
  clear_has_placeholder();
}
inline ::google::protobuf::int32 C2S::placeholder() const {
  // @@protoc_insertion_point(field_get:Qot_GetCodeChange.C2S.placeHolder)
  return placeholder_;
}
inline void C2S::set_placeholder(::google::protobuf::int32 value) {
  set_has_placeholder();
  placeholder_ = value;
  // @@protoc_insertion_point(field_set:Qot_GetCodeChange.C2S.placeHolder)
}

// repeated .Qot_Common.Security securityList = 2;
inline int C2S::securitylist_size() const {
  return securitylist_.size();
}
inline const ::Qot_Common::Security& C2S::securitylist(int index) const {
  // @@protoc_insertion_point(field_get:Qot_GetCodeChange.C2S.securityList)
  return securitylist_.Get(index);
}
inline ::Qot_Common::Security* C2S::mutable_securitylist(int index) {
  // @@protoc_insertion_point(field_mutable:Qot_GetCodeChange.C2S.securityList)
  return securitylist_.Mutable(index);
}
inline ::Qot_Common::Security* C2S::add_securitylist() {
  // @@protoc_insertion_point(field_add:Qot_GetCodeChange.C2S.securityList)
  return securitylist_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::Qot_Common::Security >*
C2S::mutable_securitylist() {
  // @@protoc_insertion_point(field_mutable_list:Qot_GetCodeChange.C2S.securityList)
  return &securitylist_;
}
inline const ::google::protobuf::RepeatedPtrField< ::Qot_Common::Security >&
C2S::securitylist() const {
  // @@protoc_insertion_point(field_list:Qot_GetCodeChange.C2S.securityList)
  return securitylist_;
}

// repeated .Qot_GetCodeChange.TimeFilter timeFilterList = 3;
inline int C2S::timefilterlist_size() const {
  return timefilterlist_.size();
}
inline void C2S::clear_timefilterlist() {
  timefilterlist_.Clear();
}
inline const ::Qot_GetCodeChange::TimeFilter& C2S::timefilterlist(int index) const {
  // @@protoc_insertion_point(field_get:Qot_GetCodeChange.C2S.timeFilterList)
  return timefilterlist_.Get(index);
}
inline ::Qot_GetCodeChange::TimeFilter* C2S::mutable_timefilterlist(int index) {
  // @@protoc_insertion_point(field_mutable:Qot_GetCodeChange.C2S.timeFilterList)
  return timefilterlist_.Mutable(index);
}
inline ::Qot_GetCodeChange::TimeFilter* C2S::add_timefilterlist() {
  // @@protoc_insertion_point(field_add:Qot_GetCodeChange.C2S.timeFilterList)
  return timefilterlist_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::Qot_GetCodeChange::TimeFilter >*
C2S::mutable_timefilterlist() {
  // @@protoc_insertion_point(field_mutable_list:Qot_GetCodeChange.C2S.timeFilterList)
  return &timefilterlist_;
}
inline const ::google::protobuf::RepeatedPtrField< ::Qot_GetCodeChange::TimeFilter >&
C2S::timefilterlist() const {
  // @@protoc_insertion_point(field_list:Qot_GetCodeChange.C2S.timeFilterList)
  return timefilterlist_;
}

// repeated int32 typeList = 4;
inline int C2S::typelist_size() const {
  return typelist_.size();
}
inline void C2S::clear_typelist() {
  typelist_.Clear();
}
inline ::google::protobuf::int32 C2S::typelist(int index) const {
  // @@protoc_insertion_point(field_get:Qot_GetCodeChange.C2S.typeList)
  return typelist_.Get(index);
}
inline void C2S::set_typelist(int index, ::google::protobuf::int32 value) {
  typelist_.Set(index, value);
  // @@protoc_insertion_point(field_set:Qot_GetCodeChange.C2S.typeList)
}
inline void C2S::add_typelist(::google::protobuf::int32 value) {
  typelist_.Add(value);
  // @@protoc_insertion_point(field_add:Qot_GetCodeChange.C2S.typeList)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
C2S::typelist() const {
  // @@protoc_insertion_point(field_list:Qot_GetCodeChange.C2S.typeList)
  return typelist_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
C2S::mutable_typelist() {
  // @@protoc_insertion_point(field_mutable_list:Qot_GetCodeChange.C2S.typeList)
  return &typelist_;
}

// -------------------------------------------------------------------

// S2C

// repeated .Qot_GetCodeChange.CodeChangeInfo codeChangeList = 1;
inline int S2C::codechangelist_size() const {
  return codechangelist_.size();
}
inline void S2C::clear_codechangelist() {
  codechangelist_.Clear();
}
inline const ::Qot_GetCodeChange::CodeChangeInfo& S2C::codechangelist(int index) const {
  // @@protoc_insertion_point(field_get:Qot_GetCodeChange.S2C.codeChangeList)
  return codechangelist_.Get(index);
}
inline ::Qot_GetCodeChange::CodeChangeInfo* S2C::mutable_codechangelist(int index) {
  // @@protoc_insertion_point(field_mutable:Qot_GetCodeChange.S2C.codeChangeList)
  return codechangelist_.Mutable(index);
}
inline ::Qot_GetCodeChange::CodeChangeInfo* S2C::add_codechangelist() {
  // @@protoc_insertion_point(field_add:Qot_GetCodeChange.S2C.codeChangeList)
  return codechangelist_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::Qot_GetCodeChange::CodeChangeInfo >*
S2C::mutable_codechangelist() {
  // @@protoc_insertion_point(field_mutable_list:Qot_GetCodeChange.S2C.codeChangeList)
  return &codechangelist_;
}
inline const ::google::protobuf::RepeatedPtrField< ::Qot_GetCodeChange::CodeChangeInfo >&
S2C::codechangelist() const {
  // @@protoc_insertion_point(field_list:Qot_GetCodeChange.S2C.codeChangeList)
  return codechangelist_;
}

// -------------------------------------------------------------------

// Request

// required .Qot_GetCodeChange.C2S c2s = 1;
inline bool Request::has_c2s() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Request::set_has_c2s() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Request::clear_has_c2s() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Request::clear_c2s() {
  if (c2s_ != NULL) c2s_->Clear();
  clear_has_c2s();
}
inline const ::Qot_GetCodeChange::C2S& Request::c2s() const {
  const ::Qot_GetCodeChange::C2S* p = c2s_;
  // @@protoc_insertion_point(field_get:Qot_GetCodeChange.Request.c2s)
  return p != NULL ? *p : *reinterpret_cast<const ::Qot_GetCodeChange::C2S*>(
      &::Qot_GetCodeChange::_C2S_default_instance_);
}
inline ::Qot_GetCodeChange::C2S* Request::release_c2s() {
  // @@protoc_insertion_point(field_release:Qot_GetCodeChange.Request.c2s)
  clear_has_c2s();
  ::Qot_GetCodeChange::C2S* temp = c2s_;
  c2s_ = NULL;
  return temp;
}
inline ::Qot_GetCodeChange::C2S* Request::mutable_c2s() {
  set_has_c2s();
  if (c2s_ == NULL) {
    c2s_ = new ::Qot_GetCodeChange::C2S;
  }
  // @@protoc_insertion_point(field_mutable:Qot_GetCodeChange.Request.c2s)
  return c2s_;
}
inline void Request::set_allocated_c2s(::Qot_GetCodeChange::C2S* c2s) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete c2s_;
  }
  if (c2s) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      c2s = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, c2s, submessage_arena);
    }
    set_has_c2s();
  } else {
    clear_has_c2s();
  }
  c2s_ = c2s;
  // @@protoc_insertion_point(field_set_allocated:Qot_GetCodeChange.Request.c2s)
}

// -------------------------------------------------------------------

// Response

// required int32 retType = 1 [default = -400];
inline bool Response::has_rettype() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Response::set_has_rettype() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Response::clear_has_rettype() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Response::clear_rettype() {
  rettype_ = -400;
  clear_has_rettype();
}
inline ::google::protobuf::int32 Response::rettype() const {
  // @@protoc_insertion_point(field_get:Qot_GetCodeChange.Response.retType)
  return rettype_;
}
inline void Response::set_rettype(::google::protobuf::int32 value) {
  set_has_rettype();
  rettype_ = value;
  // @@protoc_insertion_point(field_set:Qot_GetCodeChange.Response.retType)
}

// optional string retMsg = 2;
inline bool Response::has_retmsg() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Response::set_has_retmsg() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Response::clear_has_retmsg() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Response::clear_retmsg() {
  retmsg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_retmsg();
}
inline const ::std::string& Response::retmsg() const {
  // @@protoc_insertion_point(field_get:Qot_GetCodeChange.Response.retMsg)
  return retmsg_.GetNoArena();
}
inline void Response::set_retmsg(const ::std::string& value) {
  set_has_retmsg();
  retmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Qot_GetCodeChange.Response.retMsg)
}
#if LANG_CXX11
inline void Response::set_retmsg(::std::string&& value) {
  set_has_retmsg();
  retmsg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Qot_GetCodeChange.Response.retMsg)
}
#endif
inline void Response::set_retmsg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_retmsg();
  retmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Qot_GetCodeChange.Response.retMsg)
}
inline void Response::set_retmsg(const char* value, size_t size) {
  set_has_retmsg();
  retmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Qot_GetCodeChange.Response.retMsg)
}
inline ::std::string* Response::mutable_retmsg() {
  set_has_retmsg();
  // @@protoc_insertion_point(field_mutable:Qot_GetCodeChange.Response.retMsg)
  return retmsg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Response::release_retmsg() {
  // @@protoc_insertion_point(field_release:Qot_GetCodeChange.Response.retMsg)
  clear_has_retmsg();
  return retmsg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Response::set_allocated_retmsg(::std::string* retmsg) {
  if (retmsg != NULL) {
    set_has_retmsg();
  } else {
    clear_has_retmsg();
  }
  retmsg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), retmsg);
  // @@protoc_insertion_point(field_set_allocated:Qot_GetCodeChange.Response.retMsg)
}

// optional int32 errCode = 3;
inline bool Response::has_errcode() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Response::set_has_errcode() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Response::clear_has_errcode() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Response::clear_errcode() {
  errcode_ = 0;
  clear_has_errcode();
}
inline ::google::protobuf::int32 Response::errcode() const {
  // @@protoc_insertion_point(field_get:Qot_GetCodeChange.Response.errCode)
  return errcode_;
}
inline void Response::set_errcode(::google::protobuf::int32 value) {
  set_has_errcode();
  errcode_ = value;
  // @@protoc_insertion_point(field_set:Qot_GetCodeChange.Response.errCode)
}

// optional .Qot_GetCodeChange.S2C s2c = 4;
inline bool Response::has_s2c() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Response::set_has_s2c() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Response::clear_has_s2c() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Response::clear_s2c() {
  if (s2c_ != NULL) s2c_->Clear();
  clear_has_s2c();
}
inline const ::Qot_GetCodeChange::S2C& Response::s2c() const {
  const ::Qot_GetCodeChange::S2C* p = s2c_;
  // @@protoc_insertion_point(field_get:Qot_GetCodeChange.Response.s2c)
  return p != NULL ? *p : *reinterpret_cast<const ::Qot_GetCodeChange::S2C*>(
      &::Qot_GetCodeChange::_S2C_default_instance_);
}
inline ::Qot_GetCodeChange::S2C* Response::release_s2c() {
  // @@protoc_insertion_point(field_release:Qot_GetCodeChange.Response.s2c)
  clear_has_s2c();
  ::Qot_GetCodeChange::S2C* temp = s2c_;
  s2c_ = NULL;
  return temp;
}
inline ::Qot_GetCodeChange::S2C* Response::mutable_s2c() {
  set_has_s2c();
  if (s2c_ == NULL) {
    s2c_ = new ::Qot_GetCodeChange::S2C;
  }
  // @@protoc_insertion_point(field_mutable:Qot_GetCodeChange.Response.s2c)
  return s2c_;
}
inline void Response::set_allocated_s2c(::Qot_GetCodeChange::S2C* s2c) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete s2c_;
  }
  if (s2c) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      s2c = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, s2c, submessage_arena);
    }
    set_has_s2c();
  } else {
    clear_has_s2c();
  }
  s2c_ = s2c;
  // @@protoc_insertion_point(field_set_allocated:Qot_GetCodeChange.Response.s2c)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace Qot_GetCodeChange

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::Qot_GetCodeChange::CodeChangeType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Qot_GetCodeChange::CodeChangeType>() {
  return ::Qot_GetCodeChange::CodeChangeType_descriptor();
}
template <> struct is_proto_enum< ::Qot_GetCodeChange::TimeFilterType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Qot_GetCodeChange::TimeFilterType>() {
  return ::Qot_GetCodeChange::TimeFilterType_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_Qot_5fGetCodeChange_2eproto__INCLUDED
