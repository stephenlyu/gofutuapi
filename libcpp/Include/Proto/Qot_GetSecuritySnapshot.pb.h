// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Qot_GetSecuritySnapshot.proto

#ifndef PROTOBUF_Qot_5fGetSecuritySnapshot_2eproto__INCLUDED
#define PROTOBUF_Qot_5fGetSecuritySnapshot_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "Common.pb.h"
#include "Qot_Common.pb.h"
// @@protoc_insertion_point(includes)

namespace protobuf_Qot_5fGetSecuritySnapshot_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[12];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsC2SImpl();
void InitDefaultsC2S();
void InitDefaultsEquitySnapshotExDataImpl();
void InitDefaultsEquitySnapshotExData();
void InitDefaultsWarrantSnapshotExDataImpl();
void InitDefaultsWarrantSnapshotExData();
void InitDefaultsOptionSnapshotExDataImpl();
void InitDefaultsOptionSnapshotExData();
void InitDefaultsIndexSnapshotExDataImpl();
void InitDefaultsIndexSnapshotExData();
void InitDefaultsPlateSnapshotExDataImpl();
void InitDefaultsPlateSnapshotExData();
void InitDefaultsFutureSnapshotExDataImpl();
void InitDefaultsFutureSnapshotExData();
void InitDefaultsSnapshotBasicDataImpl();
void InitDefaultsSnapshotBasicData();
void InitDefaultsSnapshotImpl();
void InitDefaultsSnapshot();
void InitDefaultsS2CImpl();
void InitDefaultsS2C();
void InitDefaultsRequestImpl();
void InitDefaultsRequest();
void InitDefaultsResponseImpl();
void InitDefaultsResponse();
inline void InitDefaults() {
  InitDefaultsC2S();
  InitDefaultsEquitySnapshotExData();
  InitDefaultsWarrantSnapshotExData();
  InitDefaultsOptionSnapshotExData();
  InitDefaultsIndexSnapshotExData();
  InitDefaultsPlateSnapshotExData();
  InitDefaultsFutureSnapshotExData();
  InitDefaultsSnapshotBasicData();
  InitDefaultsSnapshot();
  InitDefaultsS2C();
  InitDefaultsRequest();
  InitDefaultsResponse();
}
}  // namespace protobuf_Qot_5fGetSecuritySnapshot_2eproto
namespace Qot_GetSecuritySnapshot {
class C2S;
class C2SDefaultTypeInternal;
extern C2SDefaultTypeInternal _C2S_default_instance_;
class EquitySnapshotExData;
class EquitySnapshotExDataDefaultTypeInternal;
extern EquitySnapshotExDataDefaultTypeInternal _EquitySnapshotExData_default_instance_;
class FutureSnapshotExData;
class FutureSnapshotExDataDefaultTypeInternal;
extern FutureSnapshotExDataDefaultTypeInternal _FutureSnapshotExData_default_instance_;
class IndexSnapshotExData;
class IndexSnapshotExDataDefaultTypeInternal;
extern IndexSnapshotExDataDefaultTypeInternal _IndexSnapshotExData_default_instance_;
class OptionSnapshotExData;
class OptionSnapshotExDataDefaultTypeInternal;
extern OptionSnapshotExDataDefaultTypeInternal _OptionSnapshotExData_default_instance_;
class PlateSnapshotExData;
class PlateSnapshotExDataDefaultTypeInternal;
extern PlateSnapshotExDataDefaultTypeInternal _PlateSnapshotExData_default_instance_;
class Request;
class RequestDefaultTypeInternal;
extern RequestDefaultTypeInternal _Request_default_instance_;
class Response;
class ResponseDefaultTypeInternal;
extern ResponseDefaultTypeInternal _Response_default_instance_;
class S2C;
class S2CDefaultTypeInternal;
extern S2CDefaultTypeInternal _S2C_default_instance_;
class Snapshot;
class SnapshotDefaultTypeInternal;
extern SnapshotDefaultTypeInternal _Snapshot_default_instance_;
class SnapshotBasicData;
class SnapshotBasicDataDefaultTypeInternal;
extern SnapshotBasicDataDefaultTypeInternal _SnapshotBasicData_default_instance_;
class WarrantSnapshotExData;
class WarrantSnapshotExDataDefaultTypeInternal;
extern WarrantSnapshotExDataDefaultTypeInternal _WarrantSnapshotExData_default_instance_;
}  // namespace Qot_GetSecuritySnapshot
namespace Qot_GetSecuritySnapshot {

// ===================================================================

class C2S : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Qot_GetSecuritySnapshot.C2S) */ {
 public:
  C2S();
  virtual ~C2S();

  C2S(const C2S& from);

  inline C2S& operator=(const C2S& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  C2S(C2S&& from) noexcept
    : C2S() {
    *this = ::std::move(from);
  }

  inline C2S& operator=(C2S&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2S& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const C2S* internal_default_instance() {
    return reinterpret_cast<const C2S*>(
               &_C2S_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(C2S* other);
  friend void swap(C2S& a, C2S& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline C2S* New() const PROTOBUF_FINAL { return New(NULL); }

  C2S* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const C2S& from);
  void MergeFrom(const C2S& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(C2S* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Qot_Common.Security securityList = 1;
  int securitylist_size() const;
  void clear_securitylist();
  static const int kSecurityListFieldNumber = 1;
  const ::Qot_Common::Security& securitylist(int index) const;
  ::Qot_Common::Security* mutable_securitylist(int index);
  ::Qot_Common::Security* add_securitylist();
  ::google::protobuf::RepeatedPtrField< ::Qot_Common::Security >*
      mutable_securitylist();
  const ::google::protobuf::RepeatedPtrField< ::Qot_Common::Security >&
      securitylist() const;

  // @@protoc_insertion_point(class_scope:Qot_GetSecuritySnapshot.C2S)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::Qot_Common::Security > securitylist_;
  friend struct ::protobuf_Qot_5fGetSecuritySnapshot_2eproto::TableStruct;
  friend void ::protobuf_Qot_5fGetSecuritySnapshot_2eproto::InitDefaultsC2SImpl();
};
// -------------------------------------------------------------------

class EquitySnapshotExData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Qot_GetSecuritySnapshot.EquitySnapshotExData) */ {
 public:
  EquitySnapshotExData();
  virtual ~EquitySnapshotExData();

  EquitySnapshotExData(const EquitySnapshotExData& from);

  inline EquitySnapshotExData& operator=(const EquitySnapshotExData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EquitySnapshotExData(EquitySnapshotExData&& from) noexcept
    : EquitySnapshotExData() {
    *this = ::std::move(from);
  }

  inline EquitySnapshotExData& operator=(EquitySnapshotExData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EquitySnapshotExData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const EquitySnapshotExData* internal_default_instance() {
    return reinterpret_cast<const EquitySnapshotExData*>(
               &_EquitySnapshotExData_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(EquitySnapshotExData* other);
  friend void swap(EquitySnapshotExData& a, EquitySnapshotExData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EquitySnapshotExData* New() const PROTOBUF_FINAL { return New(NULL); }

  EquitySnapshotExData* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EquitySnapshotExData& from);
  void MergeFrom(const EquitySnapshotExData& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EquitySnapshotExData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 issuedShares = 1;
  bool has_issuedshares() const;
  void clear_issuedshares();
  static const int kIssuedSharesFieldNumber = 1;
  ::google::protobuf::int64 issuedshares() const;
  void set_issuedshares(::google::protobuf::int64 value);

  // required double issuedMarketVal = 2;
  bool has_issuedmarketval() const;
  void clear_issuedmarketval();
  static const int kIssuedMarketValFieldNumber = 2;
  double issuedmarketval() const;
  void set_issuedmarketval(double value);

  // required double netAsset = 3;
  bool has_netasset() const;
  void clear_netasset();
  static const int kNetAssetFieldNumber = 3;
  double netasset() const;
  void set_netasset(double value);

  // required double netProfit = 4;
  bool has_netprofit() const;
  void clear_netprofit();
  static const int kNetProfitFieldNumber = 4;
  double netprofit() const;
  void set_netprofit(double value);

  // required double earningsPershare = 5;
  bool has_earningspershare() const;
  void clear_earningspershare();
  static const int kEarningsPershareFieldNumber = 5;
  double earningspershare() const;
  void set_earningspershare(double value);

  // required int64 outstandingShares = 6;
  bool has_outstandingshares() const;
  void clear_outstandingshares();
  static const int kOutstandingSharesFieldNumber = 6;
  ::google::protobuf::int64 outstandingshares() const;
  void set_outstandingshares(::google::protobuf::int64 value);

  // required double outstandingMarketVal = 7;
  bool has_outstandingmarketval() const;
  void clear_outstandingmarketval();
  static const int kOutstandingMarketValFieldNumber = 7;
  double outstandingmarketval() const;
  void set_outstandingmarketval(double value);

  // required double netAssetPershare = 8;
  bool has_netassetpershare() const;
  void clear_netassetpershare();
  static const int kNetAssetPershareFieldNumber = 8;
  double netassetpershare() const;
  void set_netassetpershare(double value);

  // required double eyRate = 9;
  bool has_eyrate() const;
  void clear_eyrate();
  static const int kEyRateFieldNumber = 9;
  double eyrate() const;
  void set_eyrate(double value);

  // required double peRate = 10;
  bool has_perate() const;
  void clear_perate();
  static const int kPeRateFieldNumber = 10;
  double perate() const;
  void set_perate(double value);

  // required double pbRate = 11;
  bool has_pbrate() const;
  void clear_pbrate();
  static const int kPbRateFieldNumber = 11;
  double pbrate() const;
  void set_pbrate(double value);

  // required double peTTMRate = 12;
  bool has_pettmrate() const;
  void clear_pettmrate();
  static const int kPeTTMRateFieldNumber = 12;
  double pettmrate() const;
  void set_pettmrate(double value);

  // optional double dividendTTM = 13;
  bool has_dividendttm() const;
  void clear_dividendttm();
  static const int kDividendTTMFieldNumber = 13;
  double dividendttm() const;
  void set_dividendttm(double value);

  // optional double dividendRatioTTM = 14;
  bool has_dividendratiottm() const;
  void clear_dividendratiottm();
  static const int kDividendRatioTTMFieldNumber = 14;
  double dividendratiottm() const;
  void set_dividendratiottm(double value);

  // optional double dividendLFY = 15;
  bool has_dividendlfy() const;
  void clear_dividendlfy();
  static const int kDividendLFYFieldNumber = 15;
  double dividendlfy() const;
  void set_dividendlfy(double value);

  // optional double dividendLFYRatio = 16;
  bool has_dividendlfyratio() const;
  void clear_dividendlfyratio();
  static const int kDividendLFYRatioFieldNumber = 16;
  double dividendlfyratio() const;
  void set_dividendlfyratio(double value);

  // @@protoc_insertion_point(class_scope:Qot_GetSecuritySnapshot.EquitySnapshotExData)
 private:
  void set_has_issuedshares();
  void clear_has_issuedshares();
  void set_has_issuedmarketval();
  void clear_has_issuedmarketval();
  void set_has_netasset();
  void clear_has_netasset();
  void set_has_netprofit();
  void clear_has_netprofit();
  void set_has_earningspershare();
  void clear_has_earningspershare();
  void set_has_outstandingshares();
  void clear_has_outstandingshares();
  void set_has_outstandingmarketval();
  void clear_has_outstandingmarketval();
  void set_has_netassetpershare();
  void clear_has_netassetpershare();
  void set_has_eyrate();
  void clear_has_eyrate();
  void set_has_perate();
  void clear_has_perate();
  void set_has_pbrate();
  void clear_has_pbrate();
  void set_has_pettmrate();
  void clear_has_pettmrate();
  void set_has_dividendttm();
  void clear_has_dividendttm();
  void set_has_dividendratiottm();
  void clear_has_dividendratiottm();
  void set_has_dividendlfy();
  void clear_has_dividendlfy();
  void set_has_dividendlfyratio();
  void clear_has_dividendlfyratio();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int64 issuedshares_;
  double issuedmarketval_;
  double netasset_;
  double netprofit_;
  double earningspershare_;
  ::google::protobuf::int64 outstandingshares_;
  double outstandingmarketval_;
  double netassetpershare_;
  double eyrate_;
  double perate_;
  double pbrate_;
  double pettmrate_;
  double dividendttm_;
  double dividendratiottm_;
  double dividendlfy_;
  double dividendlfyratio_;
  friend struct ::protobuf_Qot_5fGetSecuritySnapshot_2eproto::TableStruct;
  friend void ::protobuf_Qot_5fGetSecuritySnapshot_2eproto::InitDefaultsEquitySnapshotExDataImpl();
};
// -------------------------------------------------------------------

class WarrantSnapshotExData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Qot_GetSecuritySnapshot.WarrantSnapshotExData) */ {
 public:
  WarrantSnapshotExData();
  virtual ~WarrantSnapshotExData();

  WarrantSnapshotExData(const WarrantSnapshotExData& from);

  inline WarrantSnapshotExData& operator=(const WarrantSnapshotExData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  WarrantSnapshotExData(WarrantSnapshotExData&& from) noexcept
    : WarrantSnapshotExData() {
    *this = ::std::move(from);
  }

  inline WarrantSnapshotExData& operator=(WarrantSnapshotExData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WarrantSnapshotExData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const WarrantSnapshotExData* internal_default_instance() {
    return reinterpret_cast<const WarrantSnapshotExData*>(
               &_WarrantSnapshotExData_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(WarrantSnapshotExData* other);
  friend void swap(WarrantSnapshotExData& a, WarrantSnapshotExData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline WarrantSnapshotExData* New() const PROTOBUF_FINAL { return New(NULL); }

  WarrantSnapshotExData* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const WarrantSnapshotExData& from);
  void MergeFrom(const WarrantSnapshotExData& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(WarrantSnapshotExData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string maturityTime = 4;
  bool has_maturitytime() const;
  void clear_maturitytime();
  static const int kMaturityTimeFieldNumber = 4;
  const ::std::string& maturitytime() const;
  void set_maturitytime(const ::std::string& value);
  #if LANG_CXX11
  void set_maturitytime(::std::string&& value);
  #endif
  void set_maturitytime(const char* value);
  void set_maturitytime(const char* value, size_t size);
  ::std::string* mutable_maturitytime();
  ::std::string* release_maturitytime();
  void set_allocated_maturitytime(::std::string* maturitytime);

  // required string endTradeTime = 5;
  bool has_endtradetime() const;
  void clear_endtradetime();
  static const int kEndTradeTimeFieldNumber = 5;
  const ::std::string& endtradetime() const;
  void set_endtradetime(const ::std::string& value);
  #if LANG_CXX11
  void set_endtradetime(::std::string&& value);
  #endif
  void set_endtradetime(const char* value);
  void set_endtradetime(const char* value, size_t size);
  ::std::string* mutable_endtradetime();
  ::std::string* release_endtradetime();
  void set_allocated_endtradetime(::std::string* endtradetime);

  // required .Qot_Common.Security owner = 6;
  bool has_owner() const;
  void clear_owner();
  static const int kOwnerFieldNumber = 6;
  const ::Qot_Common::Security& owner() const;
  ::Qot_Common::Security* release_owner();
  ::Qot_Common::Security* mutable_owner();
  void set_allocated_owner(::Qot_Common::Security* owner);

  // required double conversionRate = 1;
  bool has_conversionrate() const;
  void clear_conversionrate();
  static const int kConversionRateFieldNumber = 1;
  double conversionrate() const;
  void set_conversionrate(double value);

  // required double strikePrice = 3;
  bool has_strikeprice() const;
  void clear_strikeprice();
  static const int kStrikePriceFieldNumber = 3;
  double strikeprice() const;
  void set_strikeprice(double value);

  // required double recoveryPrice = 7;
  bool has_recoveryprice() const;
  void clear_recoveryprice();
  static const int kRecoveryPriceFieldNumber = 7;
  double recoveryprice() const;
  void set_recoveryprice(double value);

  // required int64 streetVolumn = 8;
  bool has_streetvolumn() const;
  void clear_streetvolumn();
  static const int kStreetVolumnFieldNumber = 8;
  ::google::protobuf::int64 streetvolumn() const;
  void set_streetvolumn(::google::protobuf::int64 value);

  // required int64 issueVolumn = 9;
  bool has_issuevolumn() const;
  void clear_issuevolumn();
  static const int kIssueVolumnFieldNumber = 9;
  ::google::protobuf::int64 issuevolumn() const;
  void set_issuevolumn(::google::protobuf::int64 value);

  // required double streetRate = 10;
  bool has_streetrate() const;
  void clear_streetrate();
  static const int kStreetRateFieldNumber = 10;
  double streetrate() const;
  void set_streetrate(double value);

  // required double delta = 11;
  bool has_delta() const;
  void clear_delta();
  static const int kDeltaFieldNumber = 11;
  double delta() const;
  void set_delta(double value);

  // required double impliedVolatility = 12;
  bool has_impliedvolatility() const;
  void clear_impliedvolatility();
  static const int kImpliedVolatilityFieldNumber = 12;
  double impliedvolatility() const;
  void set_impliedvolatility(double value);

  // required double premium = 13;
  bool has_premium() const;
  void clear_premium();
  static const int kPremiumFieldNumber = 13;
  double premium() const;
  void set_premium(double value);

  // required int32 warrantType = 2;
  bool has_warranttype() const;
  void clear_warranttype();
  static const int kWarrantTypeFieldNumber = 2;
  ::google::protobuf::int32 warranttype() const;
  void set_warranttype(::google::protobuf::int32 value);

  // optional int32 inLinePriceStatus = 24;
  bool has_inlinepricestatus() const;
  void clear_inlinepricestatus();
  static const int kInLinePriceStatusFieldNumber = 24;
  ::google::protobuf::int32 inlinepricestatus() const;
  void set_inlinepricestatus(::google::protobuf::int32 value);

  // optional double maturityTimestamp = 14;
  bool has_maturitytimestamp() const;
  void clear_maturitytimestamp();
  static const int kMaturityTimestampFieldNumber = 14;
  double maturitytimestamp() const;
  void set_maturitytimestamp(double value);

  // optional double endTradeTimestamp = 15;
  bool has_endtradetimestamp() const;
  void clear_endtradetimestamp();
  static const int kEndTradeTimestampFieldNumber = 15;
  double endtradetimestamp() const;
  void set_endtradetimestamp(double value);

  // optional double leverage = 16;
  bool has_leverage() const;
  void clear_leverage();
  static const int kLeverageFieldNumber = 16;
  double leverage() const;
  void set_leverage(double value);

  // optional double ipop = 17;
  bool has_ipop() const;
  void clear_ipop();
  static const int kIpopFieldNumber = 17;
  double ipop() const;
  void set_ipop(double value);

  // optional double breakEvenPoint = 18;
  bool has_breakevenpoint() const;
  void clear_breakevenpoint();
  static const int kBreakEvenPointFieldNumber = 18;
  double breakevenpoint() const;
  void set_breakevenpoint(double value);

  // optional double conversionPrice = 19;
  bool has_conversionprice() const;
  void clear_conversionprice();
  static const int kConversionPriceFieldNumber = 19;
  double conversionprice() const;
  void set_conversionprice(double value);

  // optional double priceRecoveryRatio = 20;
  bool has_pricerecoveryratio() const;
  void clear_pricerecoveryratio();
  static const int kPriceRecoveryRatioFieldNumber = 20;
  double pricerecoveryratio() const;
  void set_pricerecoveryratio(double value);

  // optional double score = 21;
  bool has_score() const;
  void clear_score();
  static const int kScoreFieldNumber = 21;
  double score() const;
  void set_score(double value);

  // optional double upperStrikePrice = 22;
  bool has_upperstrikeprice() const;
  void clear_upperstrikeprice();
  static const int kUpperStrikePriceFieldNumber = 22;
  double upperstrikeprice() const;
  void set_upperstrikeprice(double value);

  // optional double lowerStrikePrice = 23;
  bool has_lowerstrikeprice() const;
  void clear_lowerstrikeprice();
  static const int kLowerStrikePriceFieldNumber = 23;
  double lowerstrikeprice() const;
  void set_lowerstrikeprice(double value);

  // @@protoc_insertion_point(class_scope:Qot_GetSecuritySnapshot.WarrantSnapshotExData)
 private:
  void set_has_conversionrate();
  void clear_has_conversionrate();
  void set_has_warranttype();
  void clear_has_warranttype();
  void set_has_strikeprice();
  void clear_has_strikeprice();
  void set_has_maturitytime();
  void clear_has_maturitytime();
  void set_has_endtradetime();
  void clear_has_endtradetime();
  void set_has_owner();
  void clear_has_owner();
  void set_has_recoveryprice();
  void clear_has_recoveryprice();
  void set_has_streetvolumn();
  void clear_has_streetvolumn();
  void set_has_issuevolumn();
  void clear_has_issuevolumn();
  void set_has_streetrate();
  void clear_has_streetrate();
  void set_has_delta();
  void clear_has_delta();
  void set_has_impliedvolatility();
  void clear_has_impliedvolatility();
  void set_has_premium();
  void clear_has_premium();
  void set_has_maturitytimestamp();
  void clear_has_maturitytimestamp();
  void set_has_endtradetimestamp();
  void clear_has_endtradetimestamp();
  void set_has_leverage();
  void clear_has_leverage();
  void set_has_ipop();
  void clear_has_ipop();
  void set_has_breakevenpoint();
  void clear_has_breakevenpoint();
  void set_has_conversionprice();
  void clear_has_conversionprice();
  void set_has_pricerecoveryratio();
  void clear_has_pricerecoveryratio();
  void set_has_score();
  void clear_has_score();
  void set_has_upperstrikeprice();
  void clear_has_upperstrikeprice();
  void set_has_lowerstrikeprice();
  void clear_has_lowerstrikeprice();
  void set_has_inlinepricestatus();
  void clear_has_inlinepricestatus();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr maturitytime_;
  ::google::protobuf::internal::ArenaStringPtr endtradetime_;
  ::Qot_Common::Security* owner_;
  double conversionrate_;
  double strikeprice_;
  double recoveryprice_;
  ::google::protobuf::int64 streetvolumn_;
  ::google::protobuf::int64 issuevolumn_;
  double streetrate_;
  double delta_;
  double impliedvolatility_;
  double premium_;
  ::google::protobuf::int32 warranttype_;
  ::google::protobuf::int32 inlinepricestatus_;
  double maturitytimestamp_;
  double endtradetimestamp_;
  double leverage_;
  double ipop_;
  double breakevenpoint_;
  double conversionprice_;
  double pricerecoveryratio_;
  double score_;
  double upperstrikeprice_;
  double lowerstrikeprice_;
  friend struct ::protobuf_Qot_5fGetSecuritySnapshot_2eproto::TableStruct;
  friend void ::protobuf_Qot_5fGetSecuritySnapshot_2eproto::InitDefaultsWarrantSnapshotExDataImpl();
};
// -------------------------------------------------------------------

class OptionSnapshotExData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Qot_GetSecuritySnapshot.OptionSnapshotExData) */ {
 public:
  OptionSnapshotExData();
  virtual ~OptionSnapshotExData();

  OptionSnapshotExData(const OptionSnapshotExData& from);

  inline OptionSnapshotExData& operator=(const OptionSnapshotExData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  OptionSnapshotExData(OptionSnapshotExData&& from) noexcept
    : OptionSnapshotExData() {
    *this = ::std::move(from);
  }

  inline OptionSnapshotExData& operator=(OptionSnapshotExData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OptionSnapshotExData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const OptionSnapshotExData* internal_default_instance() {
    return reinterpret_cast<const OptionSnapshotExData*>(
               &_OptionSnapshotExData_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(OptionSnapshotExData* other);
  friend void swap(OptionSnapshotExData& a, OptionSnapshotExData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline OptionSnapshotExData* New() const PROTOBUF_FINAL { return New(NULL); }

  OptionSnapshotExData* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const OptionSnapshotExData& from);
  void MergeFrom(const OptionSnapshotExData& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(OptionSnapshotExData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string strikeTime = 3;
  bool has_striketime() const;
  void clear_striketime();
  static const int kStrikeTimeFieldNumber = 3;
  const ::std::string& striketime() const;
  void set_striketime(const ::std::string& value);
  #if LANG_CXX11
  void set_striketime(::std::string&& value);
  #endif
  void set_striketime(const char* value);
  void set_striketime(const char* value, size_t size);
  ::std::string* mutable_striketime();
  ::std::string* release_striketime();
  void set_allocated_striketime(::std::string* striketime);

  // required .Qot_Common.Security owner = 2;
  bool has_owner() const;
  void clear_owner();
  static const int kOwnerFieldNumber = 2;
  const ::Qot_Common::Security& owner() const;
  ::Qot_Common::Security* release_owner();
  ::Qot_Common::Security* mutable_owner();
  void set_allocated_owner(::Qot_Common::Security* owner);

  // required int32 type = 1;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // required int32 contractSize = 5;
  bool has_contractsize() const;
  void clear_contractsize();
  static const int kContractSizeFieldNumber = 5;
  ::google::protobuf::int32 contractsize() const;
  void set_contractsize(::google::protobuf::int32 value);

  // required double strikePrice = 4;
  bool has_strikeprice() const;
  void clear_strikeprice();
  static const int kStrikePriceFieldNumber = 4;
  double strikeprice() const;
  void set_strikeprice(double value);

  // required double impliedVolatility = 7;
  bool has_impliedvolatility() const;
  void clear_impliedvolatility();
  static const int kImpliedVolatilityFieldNumber = 7;
  double impliedvolatility() const;
  void set_impliedvolatility(double value);

  // required double premium = 8;
  bool has_premium() const;
  void clear_premium();
  static const int kPremiumFieldNumber = 8;
  double premium() const;
  void set_premium(double value);

  // required double delta = 9;
  bool has_delta() const;
  void clear_delta();
  static const int kDeltaFieldNumber = 9;
  double delta() const;
  void set_delta(double value);

  // required double gamma = 10;
  bool has_gamma() const;
  void clear_gamma();
  static const int kGammaFieldNumber = 10;
  double gamma() const;
  void set_gamma(double value);

  // required int32 openInterest = 6;
  bool has_openinterest() const;
  void clear_openinterest();
  static const int kOpenInterestFieldNumber = 6;
  ::google::protobuf::int32 openinterest() const;
  void set_openinterest(::google::protobuf::int32 value);

  // optional int32 indexOptionType = 15;
  bool has_indexoptiontype() const;
  void clear_indexoptiontype();
  static const int kIndexOptionTypeFieldNumber = 15;
  ::google::protobuf::int32 indexoptiontype() const;
  void set_indexoptiontype(::google::protobuf::int32 value);

  // required double vega = 11;
  bool has_vega() const;
  void clear_vega();
  static const int kVegaFieldNumber = 11;
  double vega() const;
  void set_vega(double value);

  // required double theta = 12;
  bool has_theta() const;
  void clear_theta();
  static const int kThetaFieldNumber = 12;
  double theta() const;
  void set_theta(double value);

  // required double rho = 13;
  bool has_rho() const;
  void clear_rho();
  static const int kRhoFieldNumber = 13;
  double rho() const;
  void set_rho(double value);

  // optional double strikeTimestamp = 14;
  bool has_striketimestamp() const;
  void clear_striketimestamp();
  static const int kStrikeTimestampFieldNumber = 14;
  double striketimestamp() const;
  void set_striketimestamp(double value);

  // optional int32 netOpenInterest = 16;
  bool has_netopeninterest() const;
  void clear_netopeninterest();
  static const int kNetOpenInterestFieldNumber = 16;
  ::google::protobuf::int32 netopeninterest() const;
  void set_netopeninterest(::google::protobuf::int32 value);

  // optional int32 expiryDateDistance = 17;
  bool has_expirydatedistance() const;
  void clear_expirydatedistance();
  static const int kExpiryDateDistanceFieldNumber = 17;
  ::google::protobuf::int32 expirydatedistance() const;
  void set_expirydatedistance(::google::protobuf::int32 value);

  // optional double contractNominalValue = 18;
  bool has_contractnominalvalue() const;
  void clear_contractnominalvalue();
  static const int kContractNominalValueFieldNumber = 18;
  double contractnominalvalue() const;
  void set_contractnominalvalue(double value);

  // optional double ownerLotMultiplier = 19;
  bool has_ownerlotmultiplier() const;
  void clear_ownerlotmultiplier();
  static const int kOwnerLotMultiplierFieldNumber = 19;
  double ownerlotmultiplier() const;
  void set_ownerlotmultiplier(double value);

  // optional double contractMultiplier = 21;
  bool has_contractmultiplier() const;
  void clear_contractmultiplier();
  static const int kContractMultiplierFieldNumber = 21;
  double contractmultiplier() const;
  void set_contractmultiplier(double value);

  // optional int32 optionAreaType = 20;
  bool has_optionareatype() const;
  void clear_optionareatype();
  static const int kOptionAreaTypeFieldNumber = 20;
  ::google::protobuf::int32 optionareatype() const;
  void set_optionareatype(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Qot_GetSecuritySnapshot.OptionSnapshotExData)
 private:
  void set_has_type();
  void clear_has_type();
  void set_has_owner();
  void clear_has_owner();
  void set_has_striketime();
  void clear_has_striketime();
  void set_has_strikeprice();
  void clear_has_strikeprice();
  void set_has_contractsize();
  void clear_has_contractsize();
  void set_has_openinterest();
  void clear_has_openinterest();
  void set_has_impliedvolatility();
  void clear_has_impliedvolatility();
  void set_has_premium();
  void clear_has_premium();
  void set_has_delta();
  void clear_has_delta();
  void set_has_gamma();
  void clear_has_gamma();
  void set_has_vega();
  void clear_has_vega();
  void set_has_theta();
  void clear_has_theta();
  void set_has_rho();
  void clear_has_rho();
  void set_has_striketimestamp();
  void clear_has_striketimestamp();
  void set_has_indexoptiontype();
  void clear_has_indexoptiontype();
  void set_has_netopeninterest();
  void clear_has_netopeninterest();
  void set_has_expirydatedistance();
  void clear_has_expirydatedistance();
  void set_has_contractnominalvalue();
  void clear_has_contractnominalvalue();
  void set_has_ownerlotmultiplier();
  void clear_has_ownerlotmultiplier();
  void set_has_optionareatype();
  void clear_has_optionareatype();
  void set_has_contractmultiplier();
  void clear_has_contractmultiplier();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr striketime_;
  ::Qot_Common::Security* owner_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 contractsize_;
  double strikeprice_;
  double impliedvolatility_;
  double premium_;
  double delta_;
  double gamma_;
  ::google::protobuf::int32 openinterest_;
  ::google::protobuf::int32 indexoptiontype_;
  double vega_;
  double theta_;
  double rho_;
  double striketimestamp_;
  ::google::protobuf::int32 netopeninterest_;
  ::google::protobuf::int32 expirydatedistance_;
  double contractnominalvalue_;
  double ownerlotmultiplier_;
  double contractmultiplier_;
  ::google::protobuf::int32 optionareatype_;
  friend struct ::protobuf_Qot_5fGetSecuritySnapshot_2eproto::TableStruct;
  friend void ::protobuf_Qot_5fGetSecuritySnapshot_2eproto::InitDefaultsOptionSnapshotExDataImpl();
};
// -------------------------------------------------------------------

class IndexSnapshotExData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Qot_GetSecuritySnapshot.IndexSnapshotExData) */ {
 public:
  IndexSnapshotExData();
  virtual ~IndexSnapshotExData();

  IndexSnapshotExData(const IndexSnapshotExData& from);

  inline IndexSnapshotExData& operator=(const IndexSnapshotExData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  IndexSnapshotExData(IndexSnapshotExData&& from) noexcept
    : IndexSnapshotExData() {
    *this = ::std::move(from);
  }

  inline IndexSnapshotExData& operator=(IndexSnapshotExData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const IndexSnapshotExData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const IndexSnapshotExData* internal_default_instance() {
    return reinterpret_cast<const IndexSnapshotExData*>(
               &_IndexSnapshotExData_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(IndexSnapshotExData* other);
  friend void swap(IndexSnapshotExData& a, IndexSnapshotExData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline IndexSnapshotExData* New() const PROTOBUF_FINAL { return New(NULL); }

  IndexSnapshotExData* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const IndexSnapshotExData& from);
  void MergeFrom(const IndexSnapshotExData& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(IndexSnapshotExData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 raiseCount = 1;
  bool has_raisecount() const;
  void clear_raisecount();
  static const int kRaiseCountFieldNumber = 1;
  ::google::protobuf::int32 raisecount() const;
  void set_raisecount(::google::protobuf::int32 value);

  // required int32 fallCount = 2;
  bool has_fallcount() const;
  void clear_fallcount();
  static const int kFallCountFieldNumber = 2;
  ::google::protobuf::int32 fallcount() const;
  void set_fallcount(::google::protobuf::int32 value);

  // required int32 equalCount = 3;
  bool has_equalcount() const;
  void clear_equalcount();
  static const int kEqualCountFieldNumber = 3;
  ::google::protobuf::int32 equalcount() const;
  void set_equalcount(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Qot_GetSecuritySnapshot.IndexSnapshotExData)
 private:
  void set_has_raisecount();
  void clear_has_raisecount();
  void set_has_fallcount();
  void clear_has_fallcount();
  void set_has_equalcount();
  void clear_has_equalcount();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 raisecount_;
  ::google::protobuf::int32 fallcount_;
  ::google::protobuf::int32 equalcount_;
  friend struct ::protobuf_Qot_5fGetSecuritySnapshot_2eproto::TableStruct;
  friend void ::protobuf_Qot_5fGetSecuritySnapshot_2eproto::InitDefaultsIndexSnapshotExDataImpl();
};
// -------------------------------------------------------------------

class PlateSnapshotExData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Qot_GetSecuritySnapshot.PlateSnapshotExData) */ {
 public:
  PlateSnapshotExData();
  virtual ~PlateSnapshotExData();

  PlateSnapshotExData(const PlateSnapshotExData& from);

  inline PlateSnapshotExData& operator=(const PlateSnapshotExData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlateSnapshotExData(PlateSnapshotExData&& from) noexcept
    : PlateSnapshotExData() {
    *this = ::std::move(from);
  }

  inline PlateSnapshotExData& operator=(PlateSnapshotExData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PlateSnapshotExData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PlateSnapshotExData* internal_default_instance() {
    return reinterpret_cast<const PlateSnapshotExData*>(
               &_PlateSnapshotExData_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(PlateSnapshotExData* other);
  friend void swap(PlateSnapshotExData& a, PlateSnapshotExData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlateSnapshotExData* New() const PROTOBUF_FINAL { return New(NULL); }

  PlateSnapshotExData* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlateSnapshotExData& from);
  void MergeFrom(const PlateSnapshotExData& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlateSnapshotExData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 raiseCount = 1;
  bool has_raisecount() const;
  void clear_raisecount();
  static const int kRaiseCountFieldNumber = 1;
  ::google::protobuf::int32 raisecount() const;
  void set_raisecount(::google::protobuf::int32 value);

  // required int32 fallCount = 2;
  bool has_fallcount() const;
  void clear_fallcount();
  static const int kFallCountFieldNumber = 2;
  ::google::protobuf::int32 fallcount() const;
  void set_fallcount(::google::protobuf::int32 value);

  // required int32 equalCount = 3;
  bool has_equalcount() const;
  void clear_equalcount();
  static const int kEqualCountFieldNumber = 3;
  ::google::protobuf::int32 equalcount() const;
  void set_equalcount(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Qot_GetSecuritySnapshot.PlateSnapshotExData)
 private:
  void set_has_raisecount();
  void clear_has_raisecount();
  void set_has_fallcount();
  void clear_has_fallcount();
  void set_has_equalcount();
  void clear_has_equalcount();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 raisecount_;
  ::google::protobuf::int32 fallcount_;
  ::google::protobuf::int32 equalcount_;
  friend struct ::protobuf_Qot_5fGetSecuritySnapshot_2eproto::TableStruct;
  friend void ::protobuf_Qot_5fGetSecuritySnapshot_2eproto::InitDefaultsPlateSnapshotExDataImpl();
};
// -------------------------------------------------------------------

class FutureSnapshotExData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Qot_GetSecuritySnapshot.FutureSnapshotExData) */ {
 public:
  FutureSnapshotExData();
  virtual ~FutureSnapshotExData();

  FutureSnapshotExData(const FutureSnapshotExData& from);

  inline FutureSnapshotExData& operator=(const FutureSnapshotExData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  FutureSnapshotExData(FutureSnapshotExData&& from) noexcept
    : FutureSnapshotExData() {
    *this = ::std::move(from);
  }

  inline FutureSnapshotExData& operator=(FutureSnapshotExData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FutureSnapshotExData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FutureSnapshotExData* internal_default_instance() {
    return reinterpret_cast<const FutureSnapshotExData*>(
               &_FutureSnapshotExData_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(FutureSnapshotExData* other);
  friend void swap(FutureSnapshotExData& a, FutureSnapshotExData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline FutureSnapshotExData* New() const PROTOBUF_FINAL { return New(NULL); }

  FutureSnapshotExData* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FutureSnapshotExData& from);
  void MergeFrom(const FutureSnapshotExData& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FutureSnapshotExData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string lastTradeTime = 4;
  bool has_lasttradetime() const;
  void clear_lasttradetime();
  static const int kLastTradeTimeFieldNumber = 4;
  const ::std::string& lasttradetime() const;
  void set_lasttradetime(const ::std::string& value);
  #if LANG_CXX11
  void set_lasttradetime(::std::string&& value);
  #endif
  void set_lasttradetime(const char* value);
  void set_lasttradetime(const char* value, size_t size);
  ::std::string* mutable_lasttradetime();
  ::std::string* release_lasttradetime();
  void set_allocated_lasttradetime(::std::string* lasttradetime);

  // required double lastSettlePrice = 1;
  bool has_lastsettleprice() const;
  void clear_lastsettleprice();
  static const int kLastSettlePriceFieldNumber = 1;
  double lastsettleprice() const;
  void set_lastsettleprice(double value);

  // required int32 position = 2;
  bool has_position() const;
  void clear_position();
  static const int kPositionFieldNumber = 2;
  ::google::protobuf::int32 position() const;
  void set_position(::google::protobuf::int32 value);

  // required int32 positionChange = 3;
  bool has_positionchange() const;
  void clear_positionchange();
  static const int kPositionChangeFieldNumber = 3;
  ::google::protobuf::int32 positionchange() const;
  void set_positionchange(::google::protobuf::int32 value);

  // optional double lastTradeTimestamp = 5;
  bool has_lasttradetimestamp() const;
  void clear_lasttradetimestamp();
  static const int kLastTradeTimestampFieldNumber = 5;
  double lasttradetimestamp() const;
  void set_lasttradetimestamp(double value);

  // required bool isMainContract = 6;
  bool has_ismaincontract() const;
  void clear_ismaincontract();
  static const int kIsMainContractFieldNumber = 6;
  bool ismaincontract() const;
  void set_ismaincontract(bool value);

  // @@protoc_insertion_point(class_scope:Qot_GetSecuritySnapshot.FutureSnapshotExData)
 private:
  void set_has_lastsettleprice();
  void clear_has_lastsettleprice();
  void set_has_position();
  void clear_has_position();
  void set_has_positionchange();
  void clear_has_positionchange();
  void set_has_lasttradetime();
  void clear_has_lasttradetime();
  void set_has_lasttradetimestamp();
  void clear_has_lasttradetimestamp();
  void set_has_ismaincontract();
  void clear_has_ismaincontract();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr lasttradetime_;
  double lastsettleprice_;
  ::google::protobuf::int32 position_;
  ::google::protobuf::int32 positionchange_;
  double lasttradetimestamp_;
  bool ismaincontract_;
  friend struct ::protobuf_Qot_5fGetSecuritySnapshot_2eproto::TableStruct;
  friend void ::protobuf_Qot_5fGetSecuritySnapshot_2eproto::InitDefaultsFutureSnapshotExDataImpl();
};
// -------------------------------------------------------------------

class SnapshotBasicData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Qot_GetSecuritySnapshot.SnapshotBasicData) */ {
 public:
  SnapshotBasicData();
  virtual ~SnapshotBasicData();

  SnapshotBasicData(const SnapshotBasicData& from);

  inline SnapshotBasicData& operator=(const SnapshotBasicData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SnapshotBasicData(SnapshotBasicData&& from) noexcept
    : SnapshotBasicData() {
    *this = ::std::move(from);
  }

  inline SnapshotBasicData& operator=(SnapshotBasicData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SnapshotBasicData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SnapshotBasicData* internal_default_instance() {
    return reinterpret_cast<const SnapshotBasicData*>(
               &_SnapshotBasicData_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(SnapshotBasicData* other);
  friend void swap(SnapshotBasicData& a, SnapshotBasicData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SnapshotBasicData* New() const PROTOBUF_FINAL { return New(NULL); }

  SnapshotBasicData* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SnapshotBasicData& from);
  void MergeFrom(const SnapshotBasicData& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SnapshotBasicData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string listTime = 4;
  bool has_listtime() const;
  void clear_listtime();
  static const int kListTimeFieldNumber = 4;
  const ::std::string& listtime() const;
  void set_listtime(const ::std::string& value);
  #if LANG_CXX11
  void set_listtime(::std::string&& value);
  #endif
  void set_listtime(const char* value);
  void set_listtime(const char* value, size_t size);
  ::std::string* mutable_listtime();
  ::std::string* release_listtime();
  void set_allocated_listtime(::std::string* listtime);

  // required string updateTime = 7;
  bool has_updatetime() const;
  void clear_updatetime();
  static const int kUpdateTimeFieldNumber = 7;
  const ::std::string& updatetime() const;
  void set_updatetime(const ::std::string& value);
  #if LANG_CXX11
  void set_updatetime(::std::string&& value);
  #endif
  void set_updatetime(const char* value);
  void set_updatetime(const char* value, size_t size);
  ::std::string* mutable_updatetime();
  ::std::string* release_updatetime();
  void set_allocated_updatetime(::std::string* updatetime);

  // required .Qot_Common.Security security = 1;
  bool has_security() const;
  void clear_security();
  static const int kSecurityFieldNumber = 1;
  const ::Qot_Common::Security& security() const;
  ::Qot_Common::Security* release_security();
  ::Qot_Common::Security* mutable_security();
  void set_allocated_security(::Qot_Common::Security* security);

  // optional .Qot_Common.PreAfterMarketData preMarket = 37;
  bool has_premarket() const;
  void clear_premarket();
  static const int kPreMarketFieldNumber = 37;
  const ::Qot_Common::PreAfterMarketData& premarket() const;
  ::Qot_Common::PreAfterMarketData* release_premarket();
  ::Qot_Common::PreAfterMarketData* mutable_premarket();
  void set_allocated_premarket(::Qot_Common::PreAfterMarketData* premarket);

  // optional .Qot_Common.PreAfterMarketData afterMarket = 38;
  bool has_aftermarket() const;
  void clear_aftermarket();
  static const int kAfterMarketFieldNumber = 38;
  const ::Qot_Common::PreAfterMarketData& aftermarket() const;
  ::Qot_Common::PreAfterMarketData* release_aftermarket();
  ::Qot_Common::PreAfterMarketData* mutable_aftermarket();
  void set_allocated_aftermarket(::Qot_Common::PreAfterMarketData* aftermarket);

  // required int32 type = 2;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 2;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // required int32 lotSize = 5;
  bool has_lotsize() const;
  void clear_lotsize();
  static const int kLotSizeFieldNumber = 5;
  ::google::protobuf::int32 lotsize() const;
  void set_lotsize(::google::protobuf::int32 value);

  // required double priceSpread = 6;
  bool has_pricespread() const;
  void clear_pricespread();
  static const int kPriceSpreadFieldNumber = 6;
  double pricespread() const;
  void set_pricespread(double value);

  // required double highPrice = 8;
  bool has_highprice() const;
  void clear_highprice();
  static const int kHighPriceFieldNumber = 8;
  double highprice() const;
  void set_highprice(double value);

  // required double openPrice = 9;
  bool has_openprice() const;
  void clear_openprice();
  static const int kOpenPriceFieldNumber = 9;
  double openprice() const;
  void set_openprice(double value);

  // required double lowPrice = 10;
  bool has_lowprice() const;
  void clear_lowprice();
  static const int kLowPriceFieldNumber = 10;
  double lowprice() const;
  void set_lowprice(double value);

  // required double lastClosePrice = 11;
  bool has_lastcloseprice() const;
  void clear_lastcloseprice();
  static const int kLastClosePriceFieldNumber = 11;
  double lastcloseprice() const;
  void set_lastcloseprice(double value);

  // required double curPrice = 12;
  bool has_curprice() const;
  void clear_curprice();
  static const int kCurPriceFieldNumber = 12;
  double curprice() const;
  void set_curprice(double value);

  // required int64 volume = 13;
  bool has_volume() const;
  void clear_volume();
  static const int kVolumeFieldNumber = 13;
  ::google::protobuf::int64 volume() const;
  void set_volume(::google::protobuf::int64 value);

  // required double turnover = 14;
  bool has_turnover() const;
  void clear_turnover();
  static const int kTurnoverFieldNumber = 14;
  double turnover() const;
  void set_turnover(double value);

  // required double turnoverRate = 15;
  bool has_turnoverrate() const;
  void clear_turnoverrate();
  static const int kTurnoverRateFieldNumber = 15;
  double turnoverrate() const;
  void set_turnoverrate(double value);

  // optional double listTimestamp = 16;
  bool has_listtimestamp() const;
  void clear_listtimestamp();
  static const int kListTimestampFieldNumber = 16;
  double listtimestamp() const;
  void set_listtimestamp(double value);

  // optional double updateTimestamp = 17;
  bool has_updatetimestamp() const;
  void clear_updatetimestamp();
  static const int kUpdateTimestampFieldNumber = 17;
  double updatetimestamp() const;
  void set_updatetimestamp(double value);

  // optional double askPrice = 18;
  bool has_askprice() const;
  void clear_askprice();
  static const int kAskPriceFieldNumber = 18;
  double askprice() const;
  void set_askprice(double value);

  // optional double bidPrice = 19;
  bool has_bidprice() const;
  void clear_bidprice();
  static const int kBidPriceFieldNumber = 19;
  double bidprice() const;
  void set_bidprice(double value);

  // optional int64 askVol = 20;
  bool has_askvol() const;
  void clear_askvol();
  static const int kAskVolFieldNumber = 20;
  ::google::protobuf::int64 askvol() const;
  void set_askvol(::google::protobuf::int64 value);

  // optional int64 bidVol = 21;
  bool has_bidvol() const;
  void clear_bidvol();
  static const int kBidVolFieldNumber = 21;
  ::google::protobuf::int64 bidvol() const;
  void set_bidvol(::google::protobuf::int64 value);

  // required bool isSuspend = 3;
  bool has_issuspend() const;
  void clear_issuspend();
  static const int kIsSuspendFieldNumber = 3;
  bool issuspend() const;
  void set_issuspend(bool value);

  // optional bool enableMargin = 22;
  bool has_enablemargin() const;
  void clear_enablemargin();
  static const int kEnableMarginFieldNumber = 22;
  bool enablemargin() const;
  void set_enablemargin(bool value);

  // optional bool enableShortSell = 25;
  bool has_enableshortsell() const;
  void clear_enableshortsell();
  static const int kEnableShortSellFieldNumber = 25;
  bool enableshortsell() const;
  void set_enableshortsell(bool value);

  // optional int32 secStatus = 39;
  bool has_secstatus() const;
  void clear_secstatus();
  static const int kSecStatusFieldNumber = 39;
  ::google::protobuf::int32 secstatus() const;
  void set_secstatus(::google::protobuf::int32 value);

  // optional double mortgageRatio = 23;
  bool has_mortgageratio() const;
  void clear_mortgageratio();
  static const int kMortgageRatioFieldNumber = 23;
  double mortgageratio() const;
  void set_mortgageratio(double value);

  // optional double longMarginInitialRatio = 24;
  bool has_longmargininitialratio() const;
  void clear_longmargininitialratio();
  static const int kLongMarginInitialRatioFieldNumber = 24;
  double longmargininitialratio() const;
  void set_longmargininitialratio(double value);

  // optional double shortSellRate = 26;
  bool has_shortsellrate() const;
  void clear_shortsellrate();
  static const int kShortSellRateFieldNumber = 26;
  double shortsellrate() const;
  void set_shortsellrate(double value);

  // optional int64 shortAvailableVolume = 27;
  bool has_shortavailablevolume() const;
  void clear_shortavailablevolume();
  static const int kShortAvailableVolumeFieldNumber = 27;
  ::google::protobuf::int64 shortavailablevolume() const;
  void set_shortavailablevolume(::google::protobuf::int64 value);

  // optional double shortMarginInitialRatio = 28;
  bool has_shortmargininitialratio() const;
  void clear_shortmargininitialratio();
  static const int kShortMarginInitialRatioFieldNumber = 28;
  double shortmargininitialratio() const;
  void set_shortmargininitialratio(double value);

  // optional double amplitude = 29;
  bool has_amplitude() const;
  void clear_amplitude();
  static const int kAmplitudeFieldNumber = 29;
  double amplitude() const;
  void set_amplitude(double value);

  // optional double avgPrice = 30;
  bool has_avgprice() const;
  void clear_avgprice();
  static const int kAvgPriceFieldNumber = 30;
  double avgprice() const;
  void set_avgprice(double value);

  // optional double bidAskRatio = 31;
  bool has_bidaskratio() const;
  void clear_bidaskratio();
  static const int kBidAskRatioFieldNumber = 31;
  double bidaskratio() const;
  void set_bidaskratio(double value);

  // optional double volumeRatio = 32;
  bool has_volumeratio() const;
  void clear_volumeratio();
  static const int kVolumeRatioFieldNumber = 32;
  double volumeratio() const;
  void set_volumeratio(double value);

  // optional double highest52WeeksPrice = 33;
  bool has_highest52weeksprice() const;
  void clear_highest52weeksprice();
  static const int kHighest52WeeksPriceFieldNumber = 33;
  double highest52weeksprice() const;
  void set_highest52weeksprice(double value);

  // optional double lowest52WeeksPrice = 34;
  bool has_lowest52weeksprice() const;
  void clear_lowest52weeksprice();
  static const int kLowest52WeeksPriceFieldNumber = 34;
  double lowest52weeksprice() const;
  void set_lowest52weeksprice(double value);

  // optional double highestHistoryPrice = 35;
  bool has_highesthistoryprice() const;
  void clear_highesthistoryprice();
  static const int kHighestHistoryPriceFieldNumber = 35;
  double highesthistoryprice() const;
  void set_highesthistoryprice(double value);

  // optional double lowestHistoryPrice = 36;
  bool has_lowesthistoryprice() const;
  void clear_lowesthistoryprice();
  static const int kLowestHistoryPriceFieldNumber = 36;
  double lowesthistoryprice() const;
  void set_lowesthistoryprice(double value);

  // @@protoc_insertion_point(class_scope:Qot_GetSecuritySnapshot.SnapshotBasicData)
 private:
  void set_has_security();
  void clear_has_security();
  void set_has_type();
  void clear_has_type();
  void set_has_issuspend();
  void clear_has_issuspend();
  void set_has_listtime();
  void clear_has_listtime();
  void set_has_lotsize();
  void clear_has_lotsize();
  void set_has_pricespread();
  void clear_has_pricespread();
  void set_has_updatetime();
  void clear_has_updatetime();
  void set_has_highprice();
  void clear_has_highprice();
  void set_has_openprice();
  void clear_has_openprice();
  void set_has_lowprice();
  void clear_has_lowprice();
  void set_has_lastcloseprice();
  void clear_has_lastcloseprice();
  void set_has_curprice();
  void clear_has_curprice();
  void set_has_volume();
  void clear_has_volume();
  void set_has_turnover();
  void clear_has_turnover();
  void set_has_turnoverrate();
  void clear_has_turnoverrate();
  void set_has_listtimestamp();
  void clear_has_listtimestamp();
  void set_has_updatetimestamp();
  void clear_has_updatetimestamp();
  void set_has_askprice();
  void clear_has_askprice();
  void set_has_bidprice();
  void clear_has_bidprice();
  void set_has_askvol();
  void clear_has_askvol();
  void set_has_bidvol();
  void clear_has_bidvol();
  void set_has_enablemargin();
  void clear_has_enablemargin();
  void set_has_mortgageratio();
  void clear_has_mortgageratio();
  void set_has_longmargininitialratio();
  void clear_has_longmargininitialratio();
  void set_has_enableshortsell();
  void clear_has_enableshortsell();
  void set_has_shortsellrate();
  void clear_has_shortsellrate();
  void set_has_shortavailablevolume();
  void clear_has_shortavailablevolume();
  void set_has_shortmargininitialratio();
  void clear_has_shortmargininitialratio();
  void set_has_amplitude();
  void clear_has_amplitude();
  void set_has_avgprice();
  void clear_has_avgprice();
  void set_has_bidaskratio();
  void clear_has_bidaskratio();
  void set_has_volumeratio();
  void clear_has_volumeratio();
  void set_has_highest52weeksprice();
  void clear_has_highest52weeksprice();
  void set_has_lowest52weeksprice();
  void clear_has_lowest52weeksprice();
  void set_has_highesthistoryprice();
  void clear_has_highesthistoryprice();
  void set_has_lowesthistoryprice();
  void clear_has_lowesthistoryprice();
  void set_has_premarket();
  void clear_has_premarket();
  void set_has_aftermarket();
  void clear_has_aftermarket();
  void set_has_secstatus();
  void clear_has_secstatus();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<2> _has_bits_;
  ::google::protobuf::internal::ArenaStringPtr listtime_;
  ::google::protobuf::internal::ArenaStringPtr updatetime_;
  ::Qot_Common::Security* security_;
  ::Qot_Common::PreAfterMarketData* premarket_;
  ::Qot_Common::PreAfterMarketData* aftermarket_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 lotsize_;
  double pricespread_;
  double highprice_;
  double openprice_;
  double lowprice_;
  double lastcloseprice_;
  double curprice_;
  ::google::protobuf::int64 volume_;
  double turnover_;
  double turnoverrate_;
  double listtimestamp_;
  double updatetimestamp_;
  double askprice_;
  double bidprice_;
  ::google::protobuf::int64 askvol_;
  ::google::protobuf::int64 bidvol_;
  bool issuspend_;
  bool enablemargin_;
  bool enableshortsell_;
  ::google::protobuf::int32 secstatus_;
  double mortgageratio_;
  double longmargininitialratio_;
  double shortsellrate_;
  ::google::protobuf::int64 shortavailablevolume_;
  double shortmargininitialratio_;
  double amplitude_;
  double avgprice_;
  double bidaskratio_;
  double volumeratio_;
  double highest52weeksprice_;
  double lowest52weeksprice_;
  double highesthistoryprice_;
  double lowesthistoryprice_;
  mutable int _cached_size_;
  friend struct ::protobuf_Qot_5fGetSecuritySnapshot_2eproto::TableStruct;
  friend void ::protobuf_Qot_5fGetSecuritySnapshot_2eproto::InitDefaultsSnapshotBasicDataImpl();
};
// -------------------------------------------------------------------

class Snapshot : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Qot_GetSecuritySnapshot.Snapshot) */ {
 public:
  Snapshot();
  virtual ~Snapshot();

  Snapshot(const Snapshot& from);

  inline Snapshot& operator=(const Snapshot& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Snapshot(Snapshot&& from) noexcept
    : Snapshot() {
    *this = ::std::move(from);
  }

  inline Snapshot& operator=(Snapshot&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Snapshot& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Snapshot* internal_default_instance() {
    return reinterpret_cast<const Snapshot*>(
               &_Snapshot_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(Snapshot* other);
  friend void swap(Snapshot& a, Snapshot& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Snapshot* New() const PROTOBUF_FINAL { return New(NULL); }

  Snapshot* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Snapshot& from);
  void MergeFrom(const Snapshot& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Snapshot* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .Qot_GetSecuritySnapshot.SnapshotBasicData basic = 1;
  bool has_basic() const;
  void clear_basic();
  static const int kBasicFieldNumber = 1;
  const ::Qot_GetSecuritySnapshot::SnapshotBasicData& basic() const;
  ::Qot_GetSecuritySnapshot::SnapshotBasicData* release_basic();
  ::Qot_GetSecuritySnapshot::SnapshotBasicData* mutable_basic();
  void set_allocated_basic(::Qot_GetSecuritySnapshot::SnapshotBasicData* basic);

  // optional .Qot_GetSecuritySnapshot.EquitySnapshotExData equityExData = 2;
  bool has_equityexdata() const;
  void clear_equityexdata();
  static const int kEquityExDataFieldNumber = 2;
  const ::Qot_GetSecuritySnapshot::EquitySnapshotExData& equityexdata() const;
  ::Qot_GetSecuritySnapshot::EquitySnapshotExData* release_equityexdata();
  ::Qot_GetSecuritySnapshot::EquitySnapshotExData* mutable_equityexdata();
  void set_allocated_equityexdata(::Qot_GetSecuritySnapshot::EquitySnapshotExData* equityexdata);

  // optional .Qot_GetSecuritySnapshot.WarrantSnapshotExData warrantExData = 3;
  bool has_warrantexdata() const;
  void clear_warrantexdata();
  static const int kWarrantExDataFieldNumber = 3;
  const ::Qot_GetSecuritySnapshot::WarrantSnapshotExData& warrantexdata() const;
  ::Qot_GetSecuritySnapshot::WarrantSnapshotExData* release_warrantexdata();
  ::Qot_GetSecuritySnapshot::WarrantSnapshotExData* mutable_warrantexdata();
  void set_allocated_warrantexdata(::Qot_GetSecuritySnapshot::WarrantSnapshotExData* warrantexdata);

  // optional .Qot_GetSecuritySnapshot.OptionSnapshotExData optionExData = 4;
  bool has_optionexdata() const;
  void clear_optionexdata();
  static const int kOptionExDataFieldNumber = 4;
  const ::Qot_GetSecuritySnapshot::OptionSnapshotExData& optionexdata() const;
  ::Qot_GetSecuritySnapshot::OptionSnapshotExData* release_optionexdata();
  ::Qot_GetSecuritySnapshot::OptionSnapshotExData* mutable_optionexdata();
  void set_allocated_optionexdata(::Qot_GetSecuritySnapshot::OptionSnapshotExData* optionexdata);

  // optional .Qot_GetSecuritySnapshot.IndexSnapshotExData indexExData = 5;
  bool has_indexexdata() const;
  void clear_indexexdata();
  static const int kIndexExDataFieldNumber = 5;
  const ::Qot_GetSecuritySnapshot::IndexSnapshotExData& indexexdata() const;
  ::Qot_GetSecuritySnapshot::IndexSnapshotExData* release_indexexdata();
  ::Qot_GetSecuritySnapshot::IndexSnapshotExData* mutable_indexexdata();
  void set_allocated_indexexdata(::Qot_GetSecuritySnapshot::IndexSnapshotExData* indexexdata);

  // optional .Qot_GetSecuritySnapshot.PlateSnapshotExData plateExData = 6;
  bool has_plateexdata() const;
  void clear_plateexdata();
  static const int kPlateExDataFieldNumber = 6;
  const ::Qot_GetSecuritySnapshot::PlateSnapshotExData& plateexdata() const;
  ::Qot_GetSecuritySnapshot::PlateSnapshotExData* release_plateexdata();
  ::Qot_GetSecuritySnapshot::PlateSnapshotExData* mutable_plateexdata();
  void set_allocated_plateexdata(::Qot_GetSecuritySnapshot::PlateSnapshotExData* plateexdata);

  // optional .Qot_GetSecuritySnapshot.FutureSnapshotExData futureExData = 7;
  bool has_futureexdata() const;
  void clear_futureexdata();
  static const int kFutureExDataFieldNumber = 7;
  const ::Qot_GetSecuritySnapshot::FutureSnapshotExData& futureexdata() const;
  ::Qot_GetSecuritySnapshot::FutureSnapshotExData* release_futureexdata();
  ::Qot_GetSecuritySnapshot::FutureSnapshotExData* mutable_futureexdata();
  void set_allocated_futureexdata(::Qot_GetSecuritySnapshot::FutureSnapshotExData* futureexdata);

  // @@protoc_insertion_point(class_scope:Qot_GetSecuritySnapshot.Snapshot)
 private:
  void set_has_basic();
  void clear_has_basic();
  void set_has_equityexdata();
  void clear_has_equityexdata();
  void set_has_warrantexdata();
  void clear_has_warrantexdata();
  void set_has_optionexdata();
  void clear_has_optionexdata();
  void set_has_indexexdata();
  void clear_has_indexexdata();
  void set_has_plateexdata();
  void clear_has_plateexdata();
  void set_has_futureexdata();
  void clear_has_futureexdata();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::Qot_GetSecuritySnapshot::SnapshotBasicData* basic_;
  ::Qot_GetSecuritySnapshot::EquitySnapshotExData* equityexdata_;
  ::Qot_GetSecuritySnapshot::WarrantSnapshotExData* warrantexdata_;
  ::Qot_GetSecuritySnapshot::OptionSnapshotExData* optionexdata_;
  ::Qot_GetSecuritySnapshot::IndexSnapshotExData* indexexdata_;
  ::Qot_GetSecuritySnapshot::PlateSnapshotExData* plateexdata_;
  ::Qot_GetSecuritySnapshot::FutureSnapshotExData* futureexdata_;
  friend struct ::protobuf_Qot_5fGetSecuritySnapshot_2eproto::TableStruct;
  friend void ::protobuf_Qot_5fGetSecuritySnapshot_2eproto::InitDefaultsSnapshotImpl();
};
// -------------------------------------------------------------------

class S2C : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Qot_GetSecuritySnapshot.S2C) */ {
 public:
  S2C();
  virtual ~S2C();

  S2C(const S2C& from);

  inline S2C& operator=(const S2C& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2C(S2C&& from) noexcept
    : S2C() {
    *this = ::std::move(from);
  }

  inline S2C& operator=(S2C&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S2C& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2C* internal_default_instance() {
    return reinterpret_cast<const S2C*>(
               &_S2C_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(S2C* other);
  friend void swap(S2C& a, S2C& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2C* New() const PROTOBUF_FINAL { return New(NULL); }

  S2C* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const S2C& from);
  void MergeFrom(const S2C& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(S2C* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Qot_GetSecuritySnapshot.Snapshot snapshotList = 1;
  int snapshotlist_size() const;
  void clear_snapshotlist();
  static const int kSnapshotListFieldNumber = 1;
  const ::Qot_GetSecuritySnapshot::Snapshot& snapshotlist(int index) const;
  ::Qot_GetSecuritySnapshot::Snapshot* mutable_snapshotlist(int index);
  ::Qot_GetSecuritySnapshot::Snapshot* add_snapshotlist();
  ::google::protobuf::RepeatedPtrField< ::Qot_GetSecuritySnapshot::Snapshot >*
      mutable_snapshotlist();
  const ::google::protobuf::RepeatedPtrField< ::Qot_GetSecuritySnapshot::Snapshot >&
      snapshotlist() const;

  // @@protoc_insertion_point(class_scope:Qot_GetSecuritySnapshot.S2C)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::Qot_GetSecuritySnapshot::Snapshot > snapshotlist_;
  friend struct ::protobuf_Qot_5fGetSecuritySnapshot_2eproto::TableStruct;
  friend void ::protobuf_Qot_5fGetSecuritySnapshot_2eproto::InitDefaultsS2CImpl();
};
// -------------------------------------------------------------------

class Request : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Qot_GetSecuritySnapshot.Request) */ {
 public:
  Request();
  virtual ~Request();

  Request(const Request& from);

  inline Request& operator=(const Request& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Request(Request&& from) noexcept
    : Request() {
    *this = ::std::move(from);
  }

  inline Request& operator=(Request&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Request& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Request* internal_default_instance() {
    return reinterpret_cast<const Request*>(
               &_Request_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void Swap(Request* other);
  friend void swap(Request& a, Request& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Request* New() const PROTOBUF_FINAL { return New(NULL); }

  Request* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Request& from);
  void MergeFrom(const Request& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .Qot_GetSecuritySnapshot.C2S c2s = 1;
  bool has_c2s() const;
  void clear_c2s();
  static const int kC2SFieldNumber = 1;
  const ::Qot_GetSecuritySnapshot::C2S& c2s() const;
  ::Qot_GetSecuritySnapshot::C2S* release_c2s();
  ::Qot_GetSecuritySnapshot::C2S* mutable_c2s();
  void set_allocated_c2s(::Qot_GetSecuritySnapshot::C2S* c2s);

  // @@protoc_insertion_point(class_scope:Qot_GetSecuritySnapshot.Request)
 private:
  void set_has_c2s();
  void clear_has_c2s();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::Qot_GetSecuritySnapshot::C2S* c2s_;
  friend struct ::protobuf_Qot_5fGetSecuritySnapshot_2eproto::TableStruct;
  friend void ::protobuf_Qot_5fGetSecuritySnapshot_2eproto::InitDefaultsRequestImpl();
};
// -------------------------------------------------------------------

class Response : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Qot_GetSecuritySnapshot.Response) */ {
 public:
  Response();
  virtual ~Response();

  Response(const Response& from);

  inline Response& operator=(const Response& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Response(Response&& from) noexcept
    : Response() {
    *this = ::std::move(from);
  }

  inline Response& operator=(Response&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Response& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Response* internal_default_instance() {
    return reinterpret_cast<const Response*>(
               &_Response_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    11;

  void Swap(Response* other);
  friend void swap(Response& a, Response& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Response* New() const PROTOBUF_FINAL { return New(NULL); }

  Response* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Response& from);
  void MergeFrom(const Response& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string retMsg = 2;
  bool has_retmsg() const;
  void clear_retmsg();
  static const int kRetMsgFieldNumber = 2;
  const ::std::string& retmsg() const;
  void set_retmsg(const ::std::string& value);
  #if LANG_CXX11
  void set_retmsg(::std::string&& value);
  #endif
  void set_retmsg(const char* value);
  void set_retmsg(const char* value, size_t size);
  ::std::string* mutable_retmsg();
  ::std::string* release_retmsg();
  void set_allocated_retmsg(::std::string* retmsg);

  // optional .Qot_GetSecuritySnapshot.S2C s2c = 4;
  bool has_s2c() const;
  void clear_s2c();
  static const int kS2CFieldNumber = 4;
  const ::Qot_GetSecuritySnapshot::S2C& s2c() const;
  ::Qot_GetSecuritySnapshot::S2C* release_s2c();
  ::Qot_GetSecuritySnapshot::S2C* mutable_s2c();
  void set_allocated_s2c(::Qot_GetSecuritySnapshot::S2C* s2c);

  // optional int32 errCode = 3;
  bool has_errcode() const;
  void clear_errcode();
  static const int kErrCodeFieldNumber = 3;
  ::google::protobuf::int32 errcode() const;
  void set_errcode(::google::protobuf::int32 value);

  // required int32 retType = 1 [default = -400];
  bool has_rettype() const;
  void clear_rettype();
  static const int kRetTypeFieldNumber = 1;
  ::google::protobuf::int32 rettype() const;
  void set_rettype(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Qot_GetSecuritySnapshot.Response)
 private:
  void set_has_rettype();
  void clear_has_rettype();
  void set_has_retmsg();
  void clear_has_retmsg();
  void set_has_errcode();
  void clear_has_errcode();
  void set_has_s2c();
  void clear_has_s2c();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr retmsg_;
  ::Qot_GetSecuritySnapshot::S2C* s2c_;
  ::google::protobuf::int32 errcode_;
  ::google::protobuf::int32 rettype_;
  friend struct ::protobuf_Qot_5fGetSecuritySnapshot_2eproto::TableStruct;
  friend void ::protobuf_Qot_5fGetSecuritySnapshot_2eproto::InitDefaultsResponseImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// C2S

// repeated .Qot_Common.Security securityList = 1;
inline int C2S::securitylist_size() const {
  return securitylist_.size();
}
inline const ::Qot_Common::Security& C2S::securitylist(int index) const {
  // @@protoc_insertion_point(field_get:Qot_GetSecuritySnapshot.C2S.securityList)
  return securitylist_.Get(index);
}
inline ::Qot_Common::Security* C2S::mutable_securitylist(int index) {
  // @@protoc_insertion_point(field_mutable:Qot_GetSecuritySnapshot.C2S.securityList)
  return securitylist_.Mutable(index);
}
inline ::Qot_Common::Security* C2S::add_securitylist() {
  // @@protoc_insertion_point(field_add:Qot_GetSecuritySnapshot.C2S.securityList)
  return securitylist_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::Qot_Common::Security >*
C2S::mutable_securitylist() {
  // @@protoc_insertion_point(field_mutable_list:Qot_GetSecuritySnapshot.C2S.securityList)
  return &securitylist_;
}
inline const ::google::protobuf::RepeatedPtrField< ::Qot_Common::Security >&
C2S::securitylist() const {
  // @@protoc_insertion_point(field_list:Qot_GetSecuritySnapshot.C2S.securityList)
  return securitylist_;
}

// -------------------------------------------------------------------

// EquitySnapshotExData

// required int64 issuedShares = 1;
inline bool EquitySnapshotExData::has_issuedshares() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EquitySnapshotExData::set_has_issuedshares() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EquitySnapshotExData::clear_has_issuedshares() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EquitySnapshotExData::clear_issuedshares() {
  issuedshares_ = GOOGLE_LONGLONG(0);
  clear_has_issuedshares();
}
inline ::google::protobuf::int64 EquitySnapshotExData::issuedshares() const {
  // @@protoc_insertion_point(field_get:Qot_GetSecuritySnapshot.EquitySnapshotExData.issuedShares)
  return issuedshares_;
}
inline void EquitySnapshotExData::set_issuedshares(::google::protobuf::int64 value) {
  set_has_issuedshares();
  issuedshares_ = value;
  // @@protoc_insertion_point(field_set:Qot_GetSecuritySnapshot.EquitySnapshotExData.issuedShares)
}

// required double issuedMarketVal = 2;
inline bool EquitySnapshotExData::has_issuedmarketval() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void EquitySnapshotExData::set_has_issuedmarketval() {
  _has_bits_[0] |= 0x00000002u;
}
inline void EquitySnapshotExData::clear_has_issuedmarketval() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void EquitySnapshotExData::clear_issuedmarketval() {
  issuedmarketval_ = 0;
  clear_has_issuedmarketval();
}
inline double EquitySnapshotExData::issuedmarketval() const {
  // @@protoc_insertion_point(field_get:Qot_GetSecuritySnapshot.EquitySnapshotExData.issuedMarketVal)
  return issuedmarketval_;
}
inline void EquitySnapshotExData::set_issuedmarketval(double value) {
  set_has_issuedmarketval();
  issuedmarketval_ = value;
  // @@protoc_insertion_point(field_set:Qot_GetSecuritySnapshot.EquitySnapshotExData.issuedMarketVal)
}

// required double netAsset = 3;
inline bool EquitySnapshotExData::has_netasset() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void EquitySnapshotExData::set_has_netasset() {
  _has_bits_[0] |= 0x00000004u;
}
inline void EquitySnapshotExData::clear_has_netasset() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void EquitySnapshotExData::clear_netasset() {
  netasset_ = 0;
  clear_has_netasset();
}
inline double EquitySnapshotExData::netasset() const {
  // @@protoc_insertion_point(field_get:Qot_GetSecuritySnapshot.EquitySnapshotExData.netAsset)
  return netasset_;
}
inline void EquitySnapshotExData::set_netasset(double value) {
  set_has_netasset();
  netasset_ = value;
  // @@protoc_insertion_point(field_set:Qot_GetSecuritySnapshot.EquitySnapshotExData.netAsset)
}

// required double netProfit = 4;
inline bool EquitySnapshotExData::has_netprofit() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void EquitySnapshotExData::set_has_netprofit() {
  _has_bits_[0] |= 0x00000008u;
}
inline void EquitySnapshotExData::clear_has_netprofit() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void EquitySnapshotExData::clear_netprofit() {
  netprofit_ = 0;
  clear_has_netprofit();
}
inline double EquitySnapshotExData::netprofit() const {
  // @@protoc_insertion_point(field_get:Qot_GetSecuritySnapshot.EquitySnapshotExData.netProfit)
  return netprofit_;
}
inline void EquitySnapshotExData::set_netprofit(double value) {
  set_has_netprofit();
  netprofit_ = value;
  // @@protoc_insertion_point(field_set:Qot_GetSecuritySnapshot.EquitySnapshotExData.netProfit)
}

// required double earningsPershare = 5;
inline bool EquitySnapshotExData::has_earningspershare() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void EquitySnapshotExData::set_has_earningspershare() {
  _has_bits_[0] |= 0x00000010u;
}
inline void EquitySnapshotExData::clear_has_earningspershare() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void EquitySnapshotExData::clear_earningspershare() {
  earningspershare_ = 0;
  clear_has_earningspershare();
}
inline double EquitySnapshotExData::earningspershare() const {
  // @@protoc_insertion_point(field_get:Qot_GetSecuritySnapshot.EquitySnapshotExData.earningsPershare)
  return earningspershare_;
}
inline void EquitySnapshotExData::set_earningspershare(double value) {
  set_has_earningspershare();
  earningspershare_ = value;
  // @@protoc_insertion_point(field_set:Qot_GetSecuritySnapshot.EquitySnapshotExData.earningsPershare)
}

// required int64 outstandingShares = 6;
inline bool EquitySnapshotExData::has_outstandingshares() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void EquitySnapshotExData::set_has_outstandingshares() {
  _has_bits_[0] |= 0x00000020u;
}
inline void EquitySnapshotExData::clear_has_outstandingshares() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void EquitySnapshotExData::clear_outstandingshares() {
  outstandingshares_ = GOOGLE_LONGLONG(0);
  clear_has_outstandingshares();
}
inline ::google::protobuf::int64 EquitySnapshotExData::outstandingshares() const {
  // @@protoc_insertion_point(field_get:Qot_GetSecuritySnapshot.EquitySnapshotExData.outstandingShares)
  return outstandingshares_;
}
inline void EquitySnapshotExData::set_outstandingshares(::google::protobuf::int64 value) {
  set_has_outstandingshares();
  outstandingshares_ = value;
  // @@protoc_insertion_point(field_set:Qot_GetSecuritySnapshot.EquitySnapshotExData.outstandingShares)
}

// required double outstandingMarketVal = 7;
inline bool EquitySnapshotExData::has_outstandingmarketval() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void EquitySnapshotExData::set_has_outstandingmarketval() {
  _has_bits_[0] |= 0x00000040u;
}
inline void EquitySnapshotExData::clear_has_outstandingmarketval() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void EquitySnapshotExData::clear_outstandingmarketval() {
  outstandingmarketval_ = 0;
  clear_has_outstandingmarketval();
}
inline double EquitySnapshotExData::outstandingmarketval() const {
  // @@protoc_insertion_point(field_get:Qot_GetSecuritySnapshot.EquitySnapshotExData.outstandingMarketVal)
  return outstandingmarketval_;
}
inline void EquitySnapshotExData::set_outstandingmarketval(double value) {
  set_has_outstandingmarketval();
  outstandingmarketval_ = value;
  // @@protoc_insertion_point(field_set:Qot_GetSecuritySnapshot.EquitySnapshotExData.outstandingMarketVal)
}

// required double netAssetPershare = 8;
inline bool EquitySnapshotExData::has_netassetpershare() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void EquitySnapshotExData::set_has_netassetpershare() {
  _has_bits_[0] |= 0x00000080u;
}
inline void EquitySnapshotExData::clear_has_netassetpershare() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void EquitySnapshotExData::clear_netassetpershare() {
  netassetpershare_ = 0;
  clear_has_netassetpershare();
}
inline double EquitySnapshotExData::netassetpershare() const {
  // @@protoc_insertion_point(field_get:Qot_GetSecuritySnapshot.EquitySnapshotExData.netAssetPershare)
  return netassetpershare_;
}
inline void EquitySnapshotExData::set_netassetpershare(double value) {
  set_has_netassetpershare();
  netassetpershare_ = value;
  // @@protoc_insertion_point(field_set:Qot_GetSecuritySnapshot.EquitySnapshotExData.netAssetPershare)
}

// required double eyRate = 9;
inline bool EquitySnapshotExData::has_eyrate() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void EquitySnapshotExData::set_has_eyrate() {
  _has_bits_[0] |= 0x00000100u;
}
inline void EquitySnapshotExData::clear_has_eyrate() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void EquitySnapshotExData::clear_eyrate() {
  eyrate_ = 0;
  clear_has_eyrate();
}
inline double EquitySnapshotExData::eyrate() const {
  // @@protoc_insertion_point(field_get:Qot_GetSecuritySnapshot.EquitySnapshotExData.eyRate)
  return eyrate_;
}
inline void EquitySnapshotExData::set_eyrate(double value) {
  set_has_eyrate();
  eyrate_ = value;
  // @@protoc_insertion_point(field_set:Qot_GetSecuritySnapshot.EquitySnapshotExData.eyRate)
}

// required double peRate = 10;
inline bool EquitySnapshotExData::has_perate() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void EquitySnapshotExData::set_has_perate() {
  _has_bits_[0] |= 0x00000200u;
}
inline void EquitySnapshotExData::clear_has_perate() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void EquitySnapshotExData::clear_perate() {
  perate_ = 0;
  clear_has_perate();
}
inline double EquitySnapshotExData::perate() const {
  // @@protoc_insertion_point(field_get:Qot_GetSecuritySnapshot.EquitySnapshotExData.peRate)
  return perate_;
}
inline void EquitySnapshotExData::set_perate(double value) {
  set_has_perate();
  perate_ = value;
  // @@protoc_insertion_point(field_set:Qot_GetSecuritySnapshot.EquitySnapshotExData.peRate)
}

// required double pbRate = 11;
inline bool EquitySnapshotExData::has_pbrate() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void EquitySnapshotExData::set_has_pbrate() {
  _has_bits_[0] |= 0x00000400u;
}
inline void EquitySnapshotExData::clear_has_pbrate() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void EquitySnapshotExData::clear_pbrate() {
  pbrate_ = 0;
  clear_has_pbrate();
}
inline double EquitySnapshotExData::pbrate() const {
  // @@protoc_insertion_point(field_get:Qot_GetSecuritySnapshot.EquitySnapshotExData.pbRate)
  return pbrate_;
}
inline void EquitySnapshotExData::set_pbrate(double value) {
  set_has_pbrate();
  pbrate_ = value;
  // @@protoc_insertion_point(field_set:Qot_GetSecuritySnapshot.EquitySnapshotExData.pbRate)
}

// required double peTTMRate = 12;
inline bool EquitySnapshotExData::has_pettmrate() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void EquitySnapshotExData::set_has_pettmrate() {
  _has_bits_[0] |= 0x00000800u;
}
inline void EquitySnapshotExData::clear_has_pettmrate() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void EquitySnapshotExData::clear_pettmrate() {
  pettmrate_ = 0;
  clear_has_pettmrate();
}
inline double EquitySnapshotExData::pettmrate() const {
  // @@protoc_insertion_point(field_get:Qot_GetSecuritySnapshot.EquitySnapshotExData.peTTMRate)
  return pettmrate_;
}
inline void EquitySnapshotExData::set_pettmrate(double value) {
  set_has_pettmrate();
  pettmrate_ = value;
  // @@protoc_insertion_point(field_set:Qot_GetSecuritySnapshot.EquitySnapshotExData.peTTMRate)
}

// optional double dividendTTM = 13;
inline bool EquitySnapshotExData::has_dividendttm() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void EquitySnapshotExData::set_has_dividendttm() {
  _has_bits_[0] |= 0x00001000u;
}
inline void EquitySnapshotExData::clear_has_dividendttm() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void EquitySnapshotExData::clear_dividendttm() {
  dividendttm_ = 0;
  clear_has_dividendttm();
}
inline double EquitySnapshotExData::dividendttm() const {
  // @@protoc_insertion_point(field_get:Qot_GetSecuritySnapshot.EquitySnapshotExData.dividendTTM)
  return dividendttm_;
}
inline void EquitySnapshotExData::set_dividendttm(double value) {
  set_has_dividendttm();
  dividendttm_ = value;
  // @@protoc_insertion_point(field_set:Qot_GetSecuritySnapshot.EquitySnapshotExData.dividendTTM)
}

// optional double dividendRatioTTM = 14;
inline bool EquitySnapshotExData::has_dividendratiottm() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void EquitySnapshotExData::set_has_dividendratiottm() {
  _has_bits_[0] |= 0x00002000u;
}
inline void EquitySnapshotExData::clear_has_dividendratiottm() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void EquitySnapshotExData::clear_dividendratiottm() {
  dividendratiottm_ = 0;
  clear_has_dividendratiottm();
}
inline double EquitySnapshotExData::dividendratiottm() const {
  // @@protoc_insertion_point(field_get:Qot_GetSecuritySnapshot.EquitySnapshotExData.dividendRatioTTM)
  return dividendratiottm_;
}
inline void EquitySnapshotExData::set_dividendratiottm(double value) {
  set_has_dividendratiottm();
  dividendratiottm_ = value;
  // @@protoc_insertion_point(field_set:Qot_GetSecuritySnapshot.EquitySnapshotExData.dividendRatioTTM)
}

// optional double dividendLFY = 15;
inline bool EquitySnapshotExData::has_dividendlfy() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void EquitySnapshotExData::set_has_dividendlfy() {
  _has_bits_[0] |= 0x00004000u;
}
inline void EquitySnapshotExData::clear_has_dividendlfy() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void EquitySnapshotExData::clear_dividendlfy() {
  dividendlfy_ = 0;
  clear_has_dividendlfy();
}
inline double EquitySnapshotExData::dividendlfy() const {
  // @@protoc_insertion_point(field_get:Qot_GetSecuritySnapshot.EquitySnapshotExData.dividendLFY)
  return dividendlfy_;
}
inline void EquitySnapshotExData::set_dividendlfy(double value) {
  set_has_dividendlfy();
  dividendlfy_ = value;
  // @@protoc_insertion_point(field_set:Qot_GetSecuritySnapshot.EquitySnapshotExData.dividendLFY)
}

// optional double dividendLFYRatio = 16;
inline bool EquitySnapshotExData::has_dividendlfyratio() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void EquitySnapshotExData::set_has_dividendlfyratio() {
  _has_bits_[0] |= 0x00008000u;
}
inline void EquitySnapshotExData::clear_has_dividendlfyratio() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void EquitySnapshotExData::clear_dividendlfyratio() {
  dividendlfyratio_ = 0;
  clear_has_dividendlfyratio();
}
inline double EquitySnapshotExData::dividendlfyratio() const {
  // @@protoc_insertion_point(field_get:Qot_GetSecuritySnapshot.EquitySnapshotExData.dividendLFYRatio)
  return dividendlfyratio_;
}
inline void EquitySnapshotExData::set_dividendlfyratio(double value) {
  set_has_dividendlfyratio();
  dividendlfyratio_ = value;
  // @@protoc_insertion_point(field_set:Qot_GetSecuritySnapshot.EquitySnapshotExData.dividendLFYRatio)
}

// -------------------------------------------------------------------

// WarrantSnapshotExData

// required double conversionRate = 1;
inline bool WarrantSnapshotExData::has_conversionrate() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void WarrantSnapshotExData::set_has_conversionrate() {
  _has_bits_[0] |= 0x00000008u;
}
inline void WarrantSnapshotExData::clear_has_conversionrate() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void WarrantSnapshotExData::clear_conversionrate() {
  conversionrate_ = 0;
  clear_has_conversionrate();
}
inline double WarrantSnapshotExData::conversionrate() const {
  // @@protoc_insertion_point(field_get:Qot_GetSecuritySnapshot.WarrantSnapshotExData.conversionRate)
  return conversionrate_;
}
inline void WarrantSnapshotExData::set_conversionrate(double value) {
  set_has_conversionrate();
  conversionrate_ = value;
  // @@protoc_insertion_point(field_set:Qot_GetSecuritySnapshot.WarrantSnapshotExData.conversionRate)
}

// required int32 warrantType = 2;
inline bool WarrantSnapshotExData::has_warranttype() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void WarrantSnapshotExData::set_has_warranttype() {
  _has_bits_[0] |= 0x00001000u;
}
inline void WarrantSnapshotExData::clear_has_warranttype() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void WarrantSnapshotExData::clear_warranttype() {
  warranttype_ = 0;
  clear_has_warranttype();
}
inline ::google::protobuf::int32 WarrantSnapshotExData::warranttype() const {
  // @@protoc_insertion_point(field_get:Qot_GetSecuritySnapshot.WarrantSnapshotExData.warrantType)
  return warranttype_;
}
inline void WarrantSnapshotExData::set_warranttype(::google::protobuf::int32 value) {
  set_has_warranttype();
  warranttype_ = value;
  // @@protoc_insertion_point(field_set:Qot_GetSecuritySnapshot.WarrantSnapshotExData.warrantType)
}

// required double strikePrice = 3;
inline bool WarrantSnapshotExData::has_strikeprice() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void WarrantSnapshotExData::set_has_strikeprice() {
  _has_bits_[0] |= 0x00000010u;
}
inline void WarrantSnapshotExData::clear_has_strikeprice() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void WarrantSnapshotExData::clear_strikeprice() {
  strikeprice_ = 0;
  clear_has_strikeprice();
}
inline double WarrantSnapshotExData::strikeprice() const {
  // @@protoc_insertion_point(field_get:Qot_GetSecuritySnapshot.WarrantSnapshotExData.strikePrice)
  return strikeprice_;
}
inline void WarrantSnapshotExData::set_strikeprice(double value) {
  set_has_strikeprice();
  strikeprice_ = value;
  // @@protoc_insertion_point(field_set:Qot_GetSecuritySnapshot.WarrantSnapshotExData.strikePrice)
}

// required string maturityTime = 4;
inline bool WarrantSnapshotExData::has_maturitytime() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WarrantSnapshotExData::set_has_maturitytime() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WarrantSnapshotExData::clear_has_maturitytime() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WarrantSnapshotExData::clear_maturitytime() {
  maturitytime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_maturitytime();
}
inline const ::std::string& WarrantSnapshotExData::maturitytime() const {
  // @@protoc_insertion_point(field_get:Qot_GetSecuritySnapshot.WarrantSnapshotExData.maturityTime)
  return maturitytime_.GetNoArena();
}
inline void WarrantSnapshotExData::set_maturitytime(const ::std::string& value) {
  set_has_maturitytime();
  maturitytime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Qot_GetSecuritySnapshot.WarrantSnapshotExData.maturityTime)
}
#if LANG_CXX11
inline void WarrantSnapshotExData::set_maturitytime(::std::string&& value) {
  set_has_maturitytime();
  maturitytime_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Qot_GetSecuritySnapshot.WarrantSnapshotExData.maturityTime)
}
#endif
inline void WarrantSnapshotExData::set_maturitytime(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_maturitytime();
  maturitytime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Qot_GetSecuritySnapshot.WarrantSnapshotExData.maturityTime)
}
inline void WarrantSnapshotExData::set_maturitytime(const char* value, size_t size) {
  set_has_maturitytime();
  maturitytime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Qot_GetSecuritySnapshot.WarrantSnapshotExData.maturityTime)
}
inline ::std::string* WarrantSnapshotExData::mutable_maturitytime() {
  set_has_maturitytime();
  // @@protoc_insertion_point(field_mutable:Qot_GetSecuritySnapshot.WarrantSnapshotExData.maturityTime)
  return maturitytime_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* WarrantSnapshotExData::release_maturitytime() {
  // @@protoc_insertion_point(field_release:Qot_GetSecuritySnapshot.WarrantSnapshotExData.maturityTime)
  clear_has_maturitytime();
  return maturitytime_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WarrantSnapshotExData::set_allocated_maturitytime(::std::string* maturitytime) {
  if (maturitytime != NULL) {
    set_has_maturitytime();
  } else {
    clear_has_maturitytime();
  }
  maturitytime_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), maturitytime);
  // @@protoc_insertion_point(field_set_allocated:Qot_GetSecuritySnapshot.WarrantSnapshotExData.maturityTime)
}

// required string endTradeTime = 5;
inline bool WarrantSnapshotExData::has_endtradetime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WarrantSnapshotExData::set_has_endtradetime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WarrantSnapshotExData::clear_has_endtradetime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WarrantSnapshotExData::clear_endtradetime() {
  endtradetime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_endtradetime();
}
inline const ::std::string& WarrantSnapshotExData::endtradetime() const {
  // @@protoc_insertion_point(field_get:Qot_GetSecuritySnapshot.WarrantSnapshotExData.endTradeTime)
  return endtradetime_.GetNoArena();
}
inline void WarrantSnapshotExData::set_endtradetime(const ::std::string& value) {
  set_has_endtradetime();
  endtradetime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Qot_GetSecuritySnapshot.WarrantSnapshotExData.endTradeTime)
}
#if LANG_CXX11
inline void WarrantSnapshotExData::set_endtradetime(::std::string&& value) {
  set_has_endtradetime();
  endtradetime_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Qot_GetSecuritySnapshot.WarrantSnapshotExData.endTradeTime)
}
#endif
inline void WarrantSnapshotExData::set_endtradetime(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_endtradetime();
  endtradetime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Qot_GetSecuritySnapshot.WarrantSnapshotExData.endTradeTime)
}
inline void WarrantSnapshotExData::set_endtradetime(const char* value, size_t size) {
  set_has_endtradetime();
  endtradetime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Qot_GetSecuritySnapshot.WarrantSnapshotExData.endTradeTime)
}
inline ::std::string* WarrantSnapshotExData::mutable_endtradetime() {
  set_has_endtradetime();
  // @@protoc_insertion_point(field_mutable:Qot_GetSecuritySnapshot.WarrantSnapshotExData.endTradeTime)
  return endtradetime_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* WarrantSnapshotExData::release_endtradetime() {
  // @@protoc_insertion_point(field_release:Qot_GetSecuritySnapshot.WarrantSnapshotExData.endTradeTime)
  clear_has_endtradetime();
  return endtradetime_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WarrantSnapshotExData::set_allocated_endtradetime(::std::string* endtradetime) {
  if (endtradetime != NULL) {
    set_has_endtradetime();
  } else {
    clear_has_endtradetime();
  }
  endtradetime_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), endtradetime);
  // @@protoc_insertion_point(field_set_allocated:Qot_GetSecuritySnapshot.WarrantSnapshotExData.endTradeTime)
}

// required .Qot_Common.Security owner = 6;
inline bool WarrantSnapshotExData::has_owner() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void WarrantSnapshotExData::set_has_owner() {
  _has_bits_[0] |= 0x00000004u;
}
inline void WarrantSnapshotExData::clear_has_owner() {
  _has_bits_[0] &= ~0x00000004u;
}
inline const ::Qot_Common::Security& WarrantSnapshotExData::owner() const {
  const ::Qot_Common::Security* p = owner_;
  // @@protoc_insertion_point(field_get:Qot_GetSecuritySnapshot.WarrantSnapshotExData.owner)
  return p != NULL ? *p : *reinterpret_cast<const ::Qot_Common::Security*>(
      &::Qot_Common::_Security_default_instance_);
}
inline ::Qot_Common::Security* WarrantSnapshotExData::release_owner() {
  // @@protoc_insertion_point(field_release:Qot_GetSecuritySnapshot.WarrantSnapshotExData.owner)
  clear_has_owner();
  ::Qot_Common::Security* temp = owner_;
  owner_ = NULL;
  return temp;
}
inline ::Qot_Common::Security* WarrantSnapshotExData::mutable_owner() {
  set_has_owner();
  if (owner_ == NULL) {
    owner_ = new ::Qot_Common::Security;
  }
  // @@protoc_insertion_point(field_mutable:Qot_GetSecuritySnapshot.WarrantSnapshotExData.owner)
  return owner_;
}
inline void WarrantSnapshotExData::set_allocated_owner(::Qot_Common::Security* owner) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(owner_);
  }
  if (owner) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      owner = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, owner, submessage_arena);
    }
    set_has_owner();
  } else {
    clear_has_owner();
  }
  owner_ = owner;
  // @@protoc_insertion_point(field_set_allocated:Qot_GetSecuritySnapshot.WarrantSnapshotExData.owner)
}

// required double recoveryPrice = 7;
inline bool WarrantSnapshotExData::has_recoveryprice() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void WarrantSnapshotExData::set_has_recoveryprice() {
  _has_bits_[0] |= 0x00000020u;
}
inline void WarrantSnapshotExData::clear_has_recoveryprice() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void WarrantSnapshotExData::clear_recoveryprice() {
  recoveryprice_ = 0;
  clear_has_recoveryprice();
}
inline double WarrantSnapshotExData::recoveryprice() const {
  // @@protoc_insertion_point(field_get:Qot_GetSecuritySnapshot.WarrantSnapshotExData.recoveryPrice)
  return recoveryprice_;
}
inline void WarrantSnapshotExData::set_recoveryprice(double value) {
  set_has_recoveryprice();
  recoveryprice_ = value;
  // @@protoc_insertion_point(field_set:Qot_GetSecuritySnapshot.WarrantSnapshotExData.recoveryPrice)
}

// required int64 streetVolumn = 8;
inline bool WarrantSnapshotExData::has_streetvolumn() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void WarrantSnapshotExData::set_has_streetvolumn() {
  _has_bits_[0] |= 0x00000040u;
}
inline void WarrantSnapshotExData::clear_has_streetvolumn() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void WarrantSnapshotExData::clear_streetvolumn() {
  streetvolumn_ = GOOGLE_LONGLONG(0);
  clear_has_streetvolumn();
}
inline ::google::protobuf::int64 WarrantSnapshotExData::streetvolumn() const {
  // @@protoc_insertion_point(field_get:Qot_GetSecuritySnapshot.WarrantSnapshotExData.streetVolumn)
  return streetvolumn_;
}
inline void WarrantSnapshotExData::set_streetvolumn(::google::protobuf::int64 value) {
  set_has_streetvolumn();
  streetvolumn_ = value;
  // @@protoc_insertion_point(field_set:Qot_GetSecuritySnapshot.WarrantSnapshotExData.streetVolumn)
}

// required int64 issueVolumn = 9;
inline bool WarrantSnapshotExData::has_issuevolumn() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void WarrantSnapshotExData::set_has_issuevolumn() {
  _has_bits_[0] |= 0x00000080u;
}
inline void WarrantSnapshotExData::clear_has_issuevolumn() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void WarrantSnapshotExData::clear_issuevolumn() {
  issuevolumn_ = GOOGLE_LONGLONG(0);
  clear_has_issuevolumn();
}
inline ::google::protobuf::int64 WarrantSnapshotExData::issuevolumn() const {
  // @@protoc_insertion_point(field_get:Qot_GetSecuritySnapshot.WarrantSnapshotExData.issueVolumn)
  return issuevolumn_;
}
inline void WarrantSnapshotExData::set_issuevolumn(::google::protobuf::int64 value) {
  set_has_issuevolumn();
  issuevolumn_ = value;
  // @@protoc_insertion_point(field_set:Qot_GetSecuritySnapshot.WarrantSnapshotExData.issueVolumn)
}

// required double streetRate = 10;
inline bool WarrantSnapshotExData::has_streetrate() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void WarrantSnapshotExData::set_has_streetrate() {
  _has_bits_[0] |= 0x00000100u;
}
inline void WarrantSnapshotExData::clear_has_streetrate() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void WarrantSnapshotExData::clear_streetrate() {
  streetrate_ = 0;
  clear_has_streetrate();
}
inline double WarrantSnapshotExData::streetrate() const {
  // @@protoc_insertion_point(field_get:Qot_GetSecuritySnapshot.WarrantSnapshotExData.streetRate)
  return streetrate_;
}
inline void WarrantSnapshotExData::set_streetrate(double value) {
  set_has_streetrate();
  streetrate_ = value;
  // @@protoc_insertion_point(field_set:Qot_GetSecuritySnapshot.WarrantSnapshotExData.streetRate)
}

// required double delta = 11;
inline bool WarrantSnapshotExData::has_delta() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void WarrantSnapshotExData::set_has_delta() {
  _has_bits_[0] |= 0x00000200u;
}
inline void WarrantSnapshotExData::clear_has_delta() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void WarrantSnapshotExData::clear_delta() {
  delta_ = 0;
  clear_has_delta();
}
inline double WarrantSnapshotExData::delta() const {
  // @@protoc_insertion_point(field_get:Qot_GetSecuritySnapshot.WarrantSnapshotExData.delta)
  return delta_;
}
inline void WarrantSnapshotExData::set_delta(double value) {
  set_has_delta();
  delta_ = value;
  // @@protoc_insertion_point(field_set:Qot_GetSecuritySnapshot.WarrantSnapshotExData.delta)
}

// required double impliedVolatility = 12;
inline bool WarrantSnapshotExData::has_impliedvolatility() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void WarrantSnapshotExData::set_has_impliedvolatility() {
  _has_bits_[0] |= 0x00000400u;
}
inline void WarrantSnapshotExData::clear_has_impliedvolatility() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void WarrantSnapshotExData::clear_impliedvolatility() {
  impliedvolatility_ = 0;
  clear_has_impliedvolatility();
}
inline double WarrantSnapshotExData::impliedvolatility() const {
  // @@protoc_insertion_point(field_get:Qot_GetSecuritySnapshot.WarrantSnapshotExData.impliedVolatility)
  return impliedvolatility_;
}
inline void WarrantSnapshotExData::set_impliedvolatility(double value) {
  set_has_impliedvolatility();
  impliedvolatility_ = value;
  // @@protoc_insertion_point(field_set:Qot_GetSecuritySnapshot.WarrantSnapshotExData.impliedVolatility)
}

// required double premium = 13;
inline bool WarrantSnapshotExData::has_premium() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void WarrantSnapshotExData::set_has_premium() {
  _has_bits_[0] |= 0x00000800u;
}
inline void WarrantSnapshotExData::clear_has_premium() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void WarrantSnapshotExData::clear_premium() {
  premium_ = 0;
  clear_has_premium();
}
inline double WarrantSnapshotExData::premium() const {
  // @@protoc_insertion_point(field_get:Qot_GetSecuritySnapshot.WarrantSnapshotExData.premium)
  return premium_;
}
inline void WarrantSnapshotExData::set_premium(double value) {
  set_has_premium();
  premium_ = value;
  // @@protoc_insertion_point(field_set:Qot_GetSecuritySnapshot.WarrantSnapshotExData.premium)
}

// optional double maturityTimestamp = 14;
inline bool WarrantSnapshotExData::has_maturitytimestamp() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void WarrantSnapshotExData::set_has_maturitytimestamp() {
  _has_bits_[0] |= 0x00004000u;
}
inline void WarrantSnapshotExData::clear_has_maturitytimestamp() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void WarrantSnapshotExData::clear_maturitytimestamp() {
  maturitytimestamp_ = 0;
  clear_has_maturitytimestamp();
}
inline double WarrantSnapshotExData::maturitytimestamp() const {
  // @@protoc_insertion_point(field_get:Qot_GetSecuritySnapshot.WarrantSnapshotExData.maturityTimestamp)
  return maturitytimestamp_;
}
inline void WarrantSnapshotExData::set_maturitytimestamp(double value) {
  set_has_maturitytimestamp();
  maturitytimestamp_ = value;
  // @@protoc_insertion_point(field_set:Qot_GetSecuritySnapshot.WarrantSnapshotExData.maturityTimestamp)
}

// optional double endTradeTimestamp = 15;
inline bool WarrantSnapshotExData::has_endtradetimestamp() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void WarrantSnapshotExData::set_has_endtradetimestamp() {
  _has_bits_[0] |= 0x00008000u;
}
inline void WarrantSnapshotExData::clear_has_endtradetimestamp() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void WarrantSnapshotExData::clear_endtradetimestamp() {
  endtradetimestamp_ = 0;
  clear_has_endtradetimestamp();
}
inline double WarrantSnapshotExData::endtradetimestamp() const {
  // @@protoc_insertion_point(field_get:Qot_GetSecuritySnapshot.WarrantSnapshotExData.endTradeTimestamp)
  return endtradetimestamp_;
}
inline void WarrantSnapshotExData::set_endtradetimestamp(double value) {
  set_has_endtradetimestamp();
  endtradetimestamp_ = value;
  // @@protoc_insertion_point(field_set:Qot_GetSecuritySnapshot.WarrantSnapshotExData.endTradeTimestamp)
}

// optional double leverage = 16;
inline bool WarrantSnapshotExData::has_leverage() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void WarrantSnapshotExData::set_has_leverage() {
  _has_bits_[0] |= 0x00010000u;
}
inline void WarrantSnapshotExData::clear_has_leverage() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void WarrantSnapshotExData::clear_leverage() {
  leverage_ = 0;
  clear_has_leverage();
}
inline double WarrantSnapshotExData::leverage() const {
  // @@protoc_insertion_point(field_get:Qot_GetSecuritySnapshot.WarrantSnapshotExData.leverage)
  return leverage_;
}
inline void WarrantSnapshotExData::set_leverage(double value) {
  set_has_leverage();
  leverage_ = value;
  // @@protoc_insertion_point(field_set:Qot_GetSecuritySnapshot.WarrantSnapshotExData.leverage)
}

// optional double ipop = 17;
inline bool WarrantSnapshotExData::has_ipop() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void WarrantSnapshotExData::set_has_ipop() {
  _has_bits_[0] |= 0x00020000u;
}
inline void WarrantSnapshotExData::clear_has_ipop() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void WarrantSnapshotExData::clear_ipop() {
  ipop_ = 0;
  clear_has_ipop();
}
inline double WarrantSnapshotExData::ipop() const {
  // @@protoc_insertion_point(field_get:Qot_GetSecuritySnapshot.WarrantSnapshotExData.ipop)
  return ipop_;
}
inline void WarrantSnapshotExData::set_ipop(double value) {
  set_has_ipop();
  ipop_ = value;
  // @@protoc_insertion_point(field_set:Qot_GetSecuritySnapshot.WarrantSnapshotExData.ipop)
}

// optional double breakEvenPoint = 18;
inline bool WarrantSnapshotExData::has_breakevenpoint() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void WarrantSnapshotExData::set_has_breakevenpoint() {
  _has_bits_[0] |= 0x00040000u;
}
inline void WarrantSnapshotExData::clear_has_breakevenpoint() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void WarrantSnapshotExData::clear_breakevenpoint() {
  breakevenpoint_ = 0;
  clear_has_breakevenpoint();
}
inline double WarrantSnapshotExData::breakevenpoint() const {
  // @@protoc_insertion_point(field_get:Qot_GetSecuritySnapshot.WarrantSnapshotExData.breakEvenPoint)
  return breakevenpoint_;
}
inline void WarrantSnapshotExData::set_breakevenpoint(double value) {
  set_has_breakevenpoint();
  breakevenpoint_ = value;
  // @@protoc_insertion_point(field_set:Qot_GetSecuritySnapshot.WarrantSnapshotExData.breakEvenPoint)
}

// optional double conversionPrice = 19;
inline bool WarrantSnapshotExData::has_conversionprice() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void WarrantSnapshotExData::set_has_conversionprice() {
  _has_bits_[0] |= 0x00080000u;
}
inline void WarrantSnapshotExData::clear_has_conversionprice() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void WarrantSnapshotExData::clear_conversionprice() {
  conversionprice_ = 0;
  clear_has_conversionprice();
}
inline double WarrantSnapshotExData::conversionprice() const {
  // @@protoc_insertion_point(field_get:Qot_GetSecuritySnapshot.WarrantSnapshotExData.conversionPrice)
  return conversionprice_;
}
inline void WarrantSnapshotExData::set_conversionprice(double value) {
  set_has_conversionprice();
  conversionprice_ = value;
  // @@protoc_insertion_point(field_set:Qot_GetSecuritySnapshot.WarrantSnapshotExData.conversionPrice)
}

// optional double priceRecoveryRatio = 20;
inline bool WarrantSnapshotExData::has_pricerecoveryratio() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void WarrantSnapshotExData::set_has_pricerecoveryratio() {
  _has_bits_[0] |= 0x00100000u;
}
inline void WarrantSnapshotExData::clear_has_pricerecoveryratio() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void WarrantSnapshotExData::clear_pricerecoveryratio() {
  pricerecoveryratio_ = 0;
  clear_has_pricerecoveryratio();
}
inline double WarrantSnapshotExData::pricerecoveryratio() const {
  // @@protoc_insertion_point(field_get:Qot_GetSecuritySnapshot.WarrantSnapshotExData.priceRecoveryRatio)
  return pricerecoveryratio_;
}
inline void WarrantSnapshotExData::set_pricerecoveryratio(double value) {
  set_has_pricerecoveryratio();
  pricerecoveryratio_ = value;
  // @@protoc_insertion_point(field_set:Qot_GetSecuritySnapshot.WarrantSnapshotExData.priceRecoveryRatio)
}

// optional double score = 21;
inline bool WarrantSnapshotExData::has_score() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void WarrantSnapshotExData::set_has_score() {
  _has_bits_[0] |= 0x00200000u;
}
inline void WarrantSnapshotExData::clear_has_score() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void WarrantSnapshotExData::clear_score() {
  score_ = 0;
  clear_has_score();
}
inline double WarrantSnapshotExData::score() const {
  // @@protoc_insertion_point(field_get:Qot_GetSecuritySnapshot.WarrantSnapshotExData.score)
  return score_;
}
inline void WarrantSnapshotExData::set_score(double value) {
  set_has_score();
  score_ = value;
  // @@protoc_insertion_point(field_set:Qot_GetSecuritySnapshot.WarrantSnapshotExData.score)
}

// optional double upperStrikePrice = 22;
inline bool WarrantSnapshotExData::has_upperstrikeprice() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void WarrantSnapshotExData::set_has_upperstrikeprice() {
  _has_bits_[0] |= 0x00400000u;
}
inline void WarrantSnapshotExData::clear_has_upperstrikeprice() {
  _has_bits_[0] &= ~0x00400000u;
}
inline void WarrantSnapshotExData::clear_upperstrikeprice() {
  upperstrikeprice_ = 0;
  clear_has_upperstrikeprice();
}
inline double WarrantSnapshotExData::upperstrikeprice() const {
  // @@protoc_insertion_point(field_get:Qot_GetSecuritySnapshot.WarrantSnapshotExData.upperStrikePrice)
  return upperstrikeprice_;
}
inline void WarrantSnapshotExData::set_upperstrikeprice(double value) {
  set_has_upperstrikeprice();
  upperstrikeprice_ = value;
  // @@protoc_insertion_point(field_set:Qot_GetSecuritySnapshot.WarrantSnapshotExData.upperStrikePrice)
}

// optional double lowerStrikePrice = 23;
inline bool WarrantSnapshotExData::has_lowerstrikeprice() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
inline void WarrantSnapshotExData::set_has_lowerstrikeprice() {
  _has_bits_[0] |= 0x00800000u;
}
inline void WarrantSnapshotExData::clear_has_lowerstrikeprice() {
  _has_bits_[0] &= ~0x00800000u;
}
inline void WarrantSnapshotExData::clear_lowerstrikeprice() {
  lowerstrikeprice_ = 0;
  clear_has_lowerstrikeprice();
}
inline double WarrantSnapshotExData::lowerstrikeprice() const {
  // @@protoc_insertion_point(field_get:Qot_GetSecuritySnapshot.WarrantSnapshotExData.lowerStrikePrice)
  return lowerstrikeprice_;
}
inline void WarrantSnapshotExData::set_lowerstrikeprice(double value) {
  set_has_lowerstrikeprice();
  lowerstrikeprice_ = value;
  // @@protoc_insertion_point(field_set:Qot_GetSecuritySnapshot.WarrantSnapshotExData.lowerStrikePrice)
}

// optional int32 inLinePriceStatus = 24;
inline bool WarrantSnapshotExData::has_inlinepricestatus() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void WarrantSnapshotExData::set_has_inlinepricestatus() {
  _has_bits_[0] |= 0x00002000u;
}
inline void WarrantSnapshotExData::clear_has_inlinepricestatus() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void WarrantSnapshotExData::clear_inlinepricestatus() {
  inlinepricestatus_ = 0;
  clear_has_inlinepricestatus();
}
inline ::google::protobuf::int32 WarrantSnapshotExData::inlinepricestatus() const {
  // @@protoc_insertion_point(field_get:Qot_GetSecuritySnapshot.WarrantSnapshotExData.inLinePriceStatus)
  return inlinepricestatus_;
}
inline void WarrantSnapshotExData::set_inlinepricestatus(::google::protobuf::int32 value) {
  set_has_inlinepricestatus();
  inlinepricestatus_ = value;
  // @@protoc_insertion_point(field_set:Qot_GetSecuritySnapshot.WarrantSnapshotExData.inLinePriceStatus)
}

// -------------------------------------------------------------------

// OptionSnapshotExData

// required int32 type = 1;
inline bool OptionSnapshotExData::has_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void OptionSnapshotExData::set_has_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void OptionSnapshotExData::clear_has_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void OptionSnapshotExData::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 OptionSnapshotExData::type() const {
  // @@protoc_insertion_point(field_get:Qot_GetSecuritySnapshot.OptionSnapshotExData.type)
  return type_;
}
inline void OptionSnapshotExData::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:Qot_GetSecuritySnapshot.OptionSnapshotExData.type)
}

// required .Qot_Common.Security owner = 2;
inline bool OptionSnapshotExData::has_owner() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OptionSnapshotExData::set_has_owner() {
  _has_bits_[0] |= 0x00000002u;
}
inline void OptionSnapshotExData::clear_has_owner() {
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::Qot_Common::Security& OptionSnapshotExData::owner() const {
  const ::Qot_Common::Security* p = owner_;
  // @@protoc_insertion_point(field_get:Qot_GetSecuritySnapshot.OptionSnapshotExData.owner)
  return p != NULL ? *p : *reinterpret_cast<const ::Qot_Common::Security*>(
      &::Qot_Common::_Security_default_instance_);
}
inline ::Qot_Common::Security* OptionSnapshotExData::release_owner() {
  // @@protoc_insertion_point(field_release:Qot_GetSecuritySnapshot.OptionSnapshotExData.owner)
  clear_has_owner();
  ::Qot_Common::Security* temp = owner_;
  owner_ = NULL;
  return temp;
}
inline ::Qot_Common::Security* OptionSnapshotExData::mutable_owner() {
  set_has_owner();
  if (owner_ == NULL) {
    owner_ = new ::Qot_Common::Security;
  }
  // @@protoc_insertion_point(field_mutable:Qot_GetSecuritySnapshot.OptionSnapshotExData.owner)
  return owner_;
}
inline void OptionSnapshotExData::set_allocated_owner(::Qot_Common::Security* owner) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(owner_);
  }
  if (owner) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      owner = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, owner, submessage_arena);
    }
    set_has_owner();
  } else {
    clear_has_owner();
  }
  owner_ = owner;
  // @@protoc_insertion_point(field_set_allocated:Qot_GetSecuritySnapshot.OptionSnapshotExData.owner)
}

// required string strikeTime = 3;
inline bool OptionSnapshotExData::has_striketime() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OptionSnapshotExData::set_has_striketime() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OptionSnapshotExData::clear_has_striketime() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OptionSnapshotExData::clear_striketime() {
  striketime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_striketime();
}
inline const ::std::string& OptionSnapshotExData::striketime() const {
  // @@protoc_insertion_point(field_get:Qot_GetSecuritySnapshot.OptionSnapshotExData.strikeTime)
  return striketime_.GetNoArena();
}
inline void OptionSnapshotExData::set_striketime(const ::std::string& value) {
  set_has_striketime();
  striketime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Qot_GetSecuritySnapshot.OptionSnapshotExData.strikeTime)
}
#if LANG_CXX11
inline void OptionSnapshotExData::set_striketime(::std::string&& value) {
  set_has_striketime();
  striketime_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Qot_GetSecuritySnapshot.OptionSnapshotExData.strikeTime)
}
#endif
inline void OptionSnapshotExData::set_striketime(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_striketime();
  striketime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Qot_GetSecuritySnapshot.OptionSnapshotExData.strikeTime)
}
inline void OptionSnapshotExData::set_striketime(const char* value, size_t size) {
  set_has_striketime();
  striketime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Qot_GetSecuritySnapshot.OptionSnapshotExData.strikeTime)
}
inline ::std::string* OptionSnapshotExData::mutable_striketime() {
  set_has_striketime();
  // @@protoc_insertion_point(field_mutable:Qot_GetSecuritySnapshot.OptionSnapshotExData.strikeTime)
  return striketime_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OptionSnapshotExData::release_striketime() {
  // @@protoc_insertion_point(field_release:Qot_GetSecuritySnapshot.OptionSnapshotExData.strikeTime)
  clear_has_striketime();
  return striketime_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OptionSnapshotExData::set_allocated_striketime(::std::string* striketime) {
  if (striketime != NULL) {
    set_has_striketime();
  } else {
    clear_has_striketime();
  }
  striketime_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), striketime);
  // @@protoc_insertion_point(field_set_allocated:Qot_GetSecuritySnapshot.OptionSnapshotExData.strikeTime)
}

// required double strikePrice = 4;
inline bool OptionSnapshotExData::has_strikeprice() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void OptionSnapshotExData::set_has_strikeprice() {
  _has_bits_[0] |= 0x00000010u;
}
inline void OptionSnapshotExData::clear_has_strikeprice() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void OptionSnapshotExData::clear_strikeprice() {
  strikeprice_ = 0;
  clear_has_strikeprice();
}
inline double OptionSnapshotExData::strikeprice() const {
  // @@protoc_insertion_point(field_get:Qot_GetSecuritySnapshot.OptionSnapshotExData.strikePrice)
  return strikeprice_;
}
inline void OptionSnapshotExData::set_strikeprice(double value) {
  set_has_strikeprice();
  strikeprice_ = value;
  // @@protoc_insertion_point(field_set:Qot_GetSecuritySnapshot.OptionSnapshotExData.strikePrice)
}

// required int32 contractSize = 5;
inline bool OptionSnapshotExData::has_contractsize() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void OptionSnapshotExData::set_has_contractsize() {
  _has_bits_[0] |= 0x00000008u;
}
inline void OptionSnapshotExData::clear_has_contractsize() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void OptionSnapshotExData::clear_contractsize() {
  contractsize_ = 0;
  clear_has_contractsize();
}
inline ::google::protobuf::int32 OptionSnapshotExData::contractsize() const {
  // @@protoc_insertion_point(field_get:Qot_GetSecuritySnapshot.OptionSnapshotExData.contractSize)
  return contractsize_;
}
inline void OptionSnapshotExData::set_contractsize(::google::protobuf::int32 value) {
  set_has_contractsize();
  contractsize_ = value;
  // @@protoc_insertion_point(field_set:Qot_GetSecuritySnapshot.OptionSnapshotExData.contractSize)
}

// required int32 openInterest = 6;
inline bool OptionSnapshotExData::has_openinterest() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void OptionSnapshotExData::set_has_openinterest() {
  _has_bits_[0] |= 0x00000200u;
}
inline void OptionSnapshotExData::clear_has_openinterest() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void OptionSnapshotExData::clear_openinterest() {
  openinterest_ = 0;
  clear_has_openinterest();
}
inline ::google::protobuf::int32 OptionSnapshotExData::openinterest() const {
  // @@protoc_insertion_point(field_get:Qot_GetSecuritySnapshot.OptionSnapshotExData.openInterest)
  return openinterest_;
}
inline void OptionSnapshotExData::set_openinterest(::google::protobuf::int32 value) {
  set_has_openinterest();
  openinterest_ = value;
  // @@protoc_insertion_point(field_set:Qot_GetSecuritySnapshot.OptionSnapshotExData.openInterest)
}

// required double impliedVolatility = 7;
inline bool OptionSnapshotExData::has_impliedvolatility() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void OptionSnapshotExData::set_has_impliedvolatility() {
  _has_bits_[0] |= 0x00000020u;
}
inline void OptionSnapshotExData::clear_has_impliedvolatility() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void OptionSnapshotExData::clear_impliedvolatility() {
  impliedvolatility_ = 0;
  clear_has_impliedvolatility();
}
inline double OptionSnapshotExData::impliedvolatility() const {
  // @@protoc_insertion_point(field_get:Qot_GetSecuritySnapshot.OptionSnapshotExData.impliedVolatility)
  return impliedvolatility_;
}
inline void OptionSnapshotExData::set_impliedvolatility(double value) {
  set_has_impliedvolatility();
  impliedvolatility_ = value;
  // @@protoc_insertion_point(field_set:Qot_GetSecuritySnapshot.OptionSnapshotExData.impliedVolatility)
}

// required double premium = 8;
inline bool OptionSnapshotExData::has_premium() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void OptionSnapshotExData::set_has_premium() {
  _has_bits_[0] |= 0x00000040u;
}
inline void OptionSnapshotExData::clear_has_premium() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void OptionSnapshotExData::clear_premium() {
  premium_ = 0;
  clear_has_premium();
}
inline double OptionSnapshotExData::premium() const {
  // @@protoc_insertion_point(field_get:Qot_GetSecuritySnapshot.OptionSnapshotExData.premium)
  return premium_;
}
inline void OptionSnapshotExData::set_premium(double value) {
  set_has_premium();
  premium_ = value;
  // @@protoc_insertion_point(field_set:Qot_GetSecuritySnapshot.OptionSnapshotExData.premium)
}

// required double delta = 9;
inline bool OptionSnapshotExData::has_delta() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void OptionSnapshotExData::set_has_delta() {
  _has_bits_[0] |= 0x00000080u;
}
inline void OptionSnapshotExData::clear_has_delta() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void OptionSnapshotExData::clear_delta() {
  delta_ = 0;
  clear_has_delta();
}
inline double OptionSnapshotExData::delta() const {
  // @@protoc_insertion_point(field_get:Qot_GetSecuritySnapshot.OptionSnapshotExData.delta)
  return delta_;
}
inline void OptionSnapshotExData::set_delta(double value) {
  set_has_delta();
  delta_ = value;
  // @@protoc_insertion_point(field_set:Qot_GetSecuritySnapshot.OptionSnapshotExData.delta)
}

// required double gamma = 10;
inline bool OptionSnapshotExData::has_gamma() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void OptionSnapshotExData::set_has_gamma() {
  _has_bits_[0] |= 0x00000100u;
}
inline void OptionSnapshotExData::clear_has_gamma() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void OptionSnapshotExData::clear_gamma() {
  gamma_ = 0;
  clear_has_gamma();
}
inline double OptionSnapshotExData::gamma() const {
  // @@protoc_insertion_point(field_get:Qot_GetSecuritySnapshot.OptionSnapshotExData.gamma)
  return gamma_;
}
inline void OptionSnapshotExData::set_gamma(double value) {
  set_has_gamma();
  gamma_ = value;
  // @@protoc_insertion_point(field_set:Qot_GetSecuritySnapshot.OptionSnapshotExData.gamma)
}

// required double vega = 11;
inline bool OptionSnapshotExData::has_vega() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void OptionSnapshotExData::set_has_vega() {
  _has_bits_[0] |= 0x00000800u;
}
inline void OptionSnapshotExData::clear_has_vega() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void OptionSnapshotExData::clear_vega() {
  vega_ = 0;
  clear_has_vega();
}
inline double OptionSnapshotExData::vega() const {
  // @@protoc_insertion_point(field_get:Qot_GetSecuritySnapshot.OptionSnapshotExData.vega)
  return vega_;
}
inline void OptionSnapshotExData::set_vega(double value) {
  set_has_vega();
  vega_ = value;
  // @@protoc_insertion_point(field_set:Qot_GetSecuritySnapshot.OptionSnapshotExData.vega)
}

// required double theta = 12;
inline bool OptionSnapshotExData::has_theta() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void OptionSnapshotExData::set_has_theta() {
  _has_bits_[0] |= 0x00001000u;
}
inline void OptionSnapshotExData::clear_has_theta() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void OptionSnapshotExData::clear_theta() {
  theta_ = 0;
  clear_has_theta();
}
inline double OptionSnapshotExData::theta() const {
  // @@protoc_insertion_point(field_get:Qot_GetSecuritySnapshot.OptionSnapshotExData.theta)
  return theta_;
}
inline void OptionSnapshotExData::set_theta(double value) {
  set_has_theta();
  theta_ = value;
  // @@protoc_insertion_point(field_set:Qot_GetSecuritySnapshot.OptionSnapshotExData.theta)
}

// required double rho = 13;
inline bool OptionSnapshotExData::has_rho() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void OptionSnapshotExData::set_has_rho() {
  _has_bits_[0] |= 0x00002000u;
}
inline void OptionSnapshotExData::clear_has_rho() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void OptionSnapshotExData::clear_rho() {
  rho_ = 0;
  clear_has_rho();
}
inline double OptionSnapshotExData::rho() const {
  // @@protoc_insertion_point(field_get:Qot_GetSecuritySnapshot.OptionSnapshotExData.rho)
  return rho_;
}
inline void OptionSnapshotExData::set_rho(double value) {
  set_has_rho();
  rho_ = value;
  // @@protoc_insertion_point(field_set:Qot_GetSecuritySnapshot.OptionSnapshotExData.rho)
}

// optional double strikeTimestamp = 14;
inline bool OptionSnapshotExData::has_striketimestamp() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void OptionSnapshotExData::set_has_striketimestamp() {
  _has_bits_[0] |= 0x00004000u;
}
inline void OptionSnapshotExData::clear_has_striketimestamp() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void OptionSnapshotExData::clear_striketimestamp() {
  striketimestamp_ = 0;
  clear_has_striketimestamp();
}
inline double OptionSnapshotExData::striketimestamp() const {
  // @@protoc_insertion_point(field_get:Qot_GetSecuritySnapshot.OptionSnapshotExData.strikeTimestamp)
  return striketimestamp_;
}
inline void OptionSnapshotExData::set_striketimestamp(double value) {
  set_has_striketimestamp();
  striketimestamp_ = value;
  // @@protoc_insertion_point(field_set:Qot_GetSecuritySnapshot.OptionSnapshotExData.strikeTimestamp)
}

// optional int32 indexOptionType = 15;
inline bool OptionSnapshotExData::has_indexoptiontype() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void OptionSnapshotExData::set_has_indexoptiontype() {
  _has_bits_[0] |= 0x00000400u;
}
inline void OptionSnapshotExData::clear_has_indexoptiontype() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void OptionSnapshotExData::clear_indexoptiontype() {
  indexoptiontype_ = 0;
  clear_has_indexoptiontype();
}
inline ::google::protobuf::int32 OptionSnapshotExData::indexoptiontype() const {
  // @@protoc_insertion_point(field_get:Qot_GetSecuritySnapshot.OptionSnapshotExData.indexOptionType)
  return indexoptiontype_;
}
inline void OptionSnapshotExData::set_indexoptiontype(::google::protobuf::int32 value) {
  set_has_indexoptiontype();
  indexoptiontype_ = value;
  // @@protoc_insertion_point(field_set:Qot_GetSecuritySnapshot.OptionSnapshotExData.indexOptionType)
}

// optional int32 netOpenInterest = 16;
inline bool OptionSnapshotExData::has_netopeninterest() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void OptionSnapshotExData::set_has_netopeninterest() {
  _has_bits_[0] |= 0x00008000u;
}
inline void OptionSnapshotExData::clear_has_netopeninterest() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void OptionSnapshotExData::clear_netopeninterest() {
  netopeninterest_ = 0;
  clear_has_netopeninterest();
}
inline ::google::protobuf::int32 OptionSnapshotExData::netopeninterest() const {
  // @@protoc_insertion_point(field_get:Qot_GetSecuritySnapshot.OptionSnapshotExData.netOpenInterest)
  return netopeninterest_;
}
inline void OptionSnapshotExData::set_netopeninterest(::google::protobuf::int32 value) {
  set_has_netopeninterest();
  netopeninterest_ = value;
  // @@protoc_insertion_point(field_set:Qot_GetSecuritySnapshot.OptionSnapshotExData.netOpenInterest)
}

// optional int32 expiryDateDistance = 17;
inline bool OptionSnapshotExData::has_expirydatedistance() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void OptionSnapshotExData::set_has_expirydatedistance() {
  _has_bits_[0] |= 0x00010000u;
}
inline void OptionSnapshotExData::clear_has_expirydatedistance() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void OptionSnapshotExData::clear_expirydatedistance() {
  expirydatedistance_ = 0;
  clear_has_expirydatedistance();
}
inline ::google::protobuf::int32 OptionSnapshotExData::expirydatedistance() const {
  // @@protoc_insertion_point(field_get:Qot_GetSecuritySnapshot.OptionSnapshotExData.expiryDateDistance)
  return expirydatedistance_;
}
inline void OptionSnapshotExData::set_expirydatedistance(::google::protobuf::int32 value) {
  set_has_expirydatedistance();
  expirydatedistance_ = value;
  // @@protoc_insertion_point(field_set:Qot_GetSecuritySnapshot.OptionSnapshotExData.expiryDateDistance)
}

// optional double contractNominalValue = 18;
inline bool OptionSnapshotExData::has_contractnominalvalue() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void OptionSnapshotExData::set_has_contractnominalvalue() {
  _has_bits_[0] |= 0x00020000u;
}
inline void OptionSnapshotExData::clear_has_contractnominalvalue() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void OptionSnapshotExData::clear_contractnominalvalue() {
  contractnominalvalue_ = 0;
  clear_has_contractnominalvalue();
}
inline double OptionSnapshotExData::contractnominalvalue() const {
  // @@protoc_insertion_point(field_get:Qot_GetSecuritySnapshot.OptionSnapshotExData.contractNominalValue)
  return contractnominalvalue_;
}
inline void OptionSnapshotExData::set_contractnominalvalue(double value) {
  set_has_contractnominalvalue();
  contractnominalvalue_ = value;
  // @@protoc_insertion_point(field_set:Qot_GetSecuritySnapshot.OptionSnapshotExData.contractNominalValue)
}

// optional double ownerLotMultiplier = 19;
inline bool OptionSnapshotExData::has_ownerlotmultiplier() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void OptionSnapshotExData::set_has_ownerlotmultiplier() {
  _has_bits_[0] |= 0x00040000u;
}
inline void OptionSnapshotExData::clear_has_ownerlotmultiplier() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void OptionSnapshotExData::clear_ownerlotmultiplier() {
  ownerlotmultiplier_ = 0;
  clear_has_ownerlotmultiplier();
}
inline double OptionSnapshotExData::ownerlotmultiplier() const {
  // @@protoc_insertion_point(field_get:Qot_GetSecuritySnapshot.OptionSnapshotExData.ownerLotMultiplier)
  return ownerlotmultiplier_;
}
inline void OptionSnapshotExData::set_ownerlotmultiplier(double value) {
  set_has_ownerlotmultiplier();
  ownerlotmultiplier_ = value;
  // @@protoc_insertion_point(field_set:Qot_GetSecuritySnapshot.OptionSnapshotExData.ownerLotMultiplier)
}

// optional int32 optionAreaType = 20;
inline bool OptionSnapshotExData::has_optionareatype() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void OptionSnapshotExData::set_has_optionareatype() {
  _has_bits_[0] |= 0x00100000u;
}
inline void OptionSnapshotExData::clear_has_optionareatype() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void OptionSnapshotExData::clear_optionareatype() {
  optionareatype_ = 0;
  clear_has_optionareatype();
}
inline ::google::protobuf::int32 OptionSnapshotExData::optionareatype() const {
  // @@protoc_insertion_point(field_get:Qot_GetSecuritySnapshot.OptionSnapshotExData.optionAreaType)
  return optionareatype_;
}
inline void OptionSnapshotExData::set_optionareatype(::google::protobuf::int32 value) {
  set_has_optionareatype();
  optionareatype_ = value;
  // @@protoc_insertion_point(field_set:Qot_GetSecuritySnapshot.OptionSnapshotExData.optionAreaType)
}

// optional double contractMultiplier = 21;
inline bool OptionSnapshotExData::has_contractmultiplier() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void OptionSnapshotExData::set_has_contractmultiplier() {
  _has_bits_[0] |= 0x00080000u;
}
inline void OptionSnapshotExData::clear_has_contractmultiplier() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void OptionSnapshotExData::clear_contractmultiplier() {
  contractmultiplier_ = 0;
  clear_has_contractmultiplier();
}
inline double OptionSnapshotExData::contractmultiplier() const {
  // @@protoc_insertion_point(field_get:Qot_GetSecuritySnapshot.OptionSnapshotExData.contractMultiplier)
  return contractmultiplier_;
}
inline void OptionSnapshotExData::set_contractmultiplier(double value) {
  set_has_contractmultiplier();
  contractmultiplier_ = value;
  // @@protoc_insertion_point(field_set:Qot_GetSecuritySnapshot.OptionSnapshotExData.contractMultiplier)
}

// -------------------------------------------------------------------

// IndexSnapshotExData

// required int32 raiseCount = 1;
inline bool IndexSnapshotExData::has_raisecount() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IndexSnapshotExData::set_has_raisecount() {
  _has_bits_[0] |= 0x00000001u;
}
inline void IndexSnapshotExData::clear_has_raisecount() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void IndexSnapshotExData::clear_raisecount() {
  raisecount_ = 0;
  clear_has_raisecount();
}
inline ::google::protobuf::int32 IndexSnapshotExData::raisecount() const {
  // @@protoc_insertion_point(field_get:Qot_GetSecuritySnapshot.IndexSnapshotExData.raiseCount)
  return raisecount_;
}
inline void IndexSnapshotExData::set_raisecount(::google::protobuf::int32 value) {
  set_has_raisecount();
  raisecount_ = value;
  // @@protoc_insertion_point(field_set:Qot_GetSecuritySnapshot.IndexSnapshotExData.raiseCount)
}

// required int32 fallCount = 2;
inline bool IndexSnapshotExData::has_fallcount() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void IndexSnapshotExData::set_has_fallcount() {
  _has_bits_[0] |= 0x00000002u;
}
inline void IndexSnapshotExData::clear_has_fallcount() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void IndexSnapshotExData::clear_fallcount() {
  fallcount_ = 0;
  clear_has_fallcount();
}
inline ::google::protobuf::int32 IndexSnapshotExData::fallcount() const {
  // @@protoc_insertion_point(field_get:Qot_GetSecuritySnapshot.IndexSnapshotExData.fallCount)
  return fallcount_;
}
inline void IndexSnapshotExData::set_fallcount(::google::protobuf::int32 value) {
  set_has_fallcount();
  fallcount_ = value;
  // @@protoc_insertion_point(field_set:Qot_GetSecuritySnapshot.IndexSnapshotExData.fallCount)
}

// required int32 equalCount = 3;
inline bool IndexSnapshotExData::has_equalcount() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void IndexSnapshotExData::set_has_equalcount() {
  _has_bits_[0] |= 0x00000004u;
}
inline void IndexSnapshotExData::clear_has_equalcount() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void IndexSnapshotExData::clear_equalcount() {
  equalcount_ = 0;
  clear_has_equalcount();
}
inline ::google::protobuf::int32 IndexSnapshotExData::equalcount() const {
  // @@protoc_insertion_point(field_get:Qot_GetSecuritySnapshot.IndexSnapshotExData.equalCount)
  return equalcount_;
}
inline void IndexSnapshotExData::set_equalcount(::google::protobuf::int32 value) {
  set_has_equalcount();
  equalcount_ = value;
  // @@protoc_insertion_point(field_set:Qot_GetSecuritySnapshot.IndexSnapshotExData.equalCount)
}

// -------------------------------------------------------------------

// PlateSnapshotExData

// required int32 raiseCount = 1;
inline bool PlateSnapshotExData::has_raisecount() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PlateSnapshotExData::set_has_raisecount() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PlateSnapshotExData::clear_has_raisecount() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PlateSnapshotExData::clear_raisecount() {
  raisecount_ = 0;
  clear_has_raisecount();
}
inline ::google::protobuf::int32 PlateSnapshotExData::raisecount() const {
  // @@protoc_insertion_point(field_get:Qot_GetSecuritySnapshot.PlateSnapshotExData.raiseCount)
  return raisecount_;
}
inline void PlateSnapshotExData::set_raisecount(::google::protobuf::int32 value) {
  set_has_raisecount();
  raisecount_ = value;
  // @@protoc_insertion_point(field_set:Qot_GetSecuritySnapshot.PlateSnapshotExData.raiseCount)
}

// required int32 fallCount = 2;
inline bool PlateSnapshotExData::has_fallcount() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PlateSnapshotExData::set_has_fallcount() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PlateSnapshotExData::clear_has_fallcount() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PlateSnapshotExData::clear_fallcount() {
  fallcount_ = 0;
  clear_has_fallcount();
}
inline ::google::protobuf::int32 PlateSnapshotExData::fallcount() const {
  // @@protoc_insertion_point(field_get:Qot_GetSecuritySnapshot.PlateSnapshotExData.fallCount)
  return fallcount_;
}
inline void PlateSnapshotExData::set_fallcount(::google::protobuf::int32 value) {
  set_has_fallcount();
  fallcount_ = value;
  // @@protoc_insertion_point(field_set:Qot_GetSecuritySnapshot.PlateSnapshotExData.fallCount)
}

// required int32 equalCount = 3;
inline bool PlateSnapshotExData::has_equalcount() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PlateSnapshotExData::set_has_equalcount() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PlateSnapshotExData::clear_has_equalcount() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PlateSnapshotExData::clear_equalcount() {
  equalcount_ = 0;
  clear_has_equalcount();
}
inline ::google::protobuf::int32 PlateSnapshotExData::equalcount() const {
  // @@protoc_insertion_point(field_get:Qot_GetSecuritySnapshot.PlateSnapshotExData.equalCount)
  return equalcount_;
}
inline void PlateSnapshotExData::set_equalcount(::google::protobuf::int32 value) {
  set_has_equalcount();
  equalcount_ = value;
  // @@protoc_insertion_point(field_set:Qot_GetSecuritySnapshot.PlateSnapshotExData.equalCount)
}

// -------------------------------------------------------------------

// FutureSnapshotExData

// required double lastSettlePrice = 1;
inline bool FutureSnapshotExData::has_lastsettleprice() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FutureSnapshotExData::set_has_lastsettleprice() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FutureSnapshotExData::clear_has_lastsettleprice() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FutureSnapshotExData::clear_lastsettleprice() {
  lastsettleprice_ = 0;
  clear_has_lastsettleprice();
}
inline double FutureSnapshotExData::lastsettleprice() const {
  // @@protoc_insertion_point(field_get:Qot_GetSecuritySnapshot.FutureSnapshotExData.lastSettlePrice)
  return lastsettleprice_;
}
inline void FutureSnapshotExData::set_lastsettleprice(double value) {
  set_has_lastsettleprice();
  lastsettleprice_ = value;
  // @@protoc_insertion_point(field_set:Qot_GetSecuritySnapshot.FutureSnapshotExData.lastSettlePrice)
}

// required int32 position = 2;
inline bool FutureSnapshotExData::has_position() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FutureSnapshotExData::set_has_position() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FutureSnapshotExData::clear_has_position() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FutureSnapshotExData::clear_position() {
  position_ = 0;
  clear_has_position();
}
inline ::google::protobuf::int32 FutureSnapshotExData::position() const {
  // @@protoc_insertion_point(field_get:Qot_GetSecuritySnapshot.FutureSnapshotExData.position)
  return position_;
}
inline void FutureSnapshotExData::set_position(::google::protobuf::int32 value) {
  set_has_position();
  position_ = value;
  // @@protoc_insertion_point(field_set:Qot_GetSecuritySnapshot.FutureSnapshotExData.position)
}

// required int32 positionChange = 3;
inline bool FutureSnapshotExData::has_positionchange() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void FutureSnapshotExData::set_has_positionchange() {
  _has_bits_[0] |= 0x00000008u;
}
inline void FutureSnapshotExData::clear_has_positionchange() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void FutureSnapshotExData::clear_positionchange() {
  positionchange_ = 0;
  clear_has_positionchange();
}
inline ::google::protobuf::int32 FutureSnapshotExData::positionchange() const {
  // @@protoc_insertion_point(field_get:Qot_GetSecuritySnapshot.FutureSnapshotExData.positionChange)
  return positionchange_;
}
inline void FutureSnapshotExData::set_positionchange(::google::protobuf::int32 value) {
  set_has_positionchange();
  positionchange_ = value;
  // @@protoc_insertion_point(field_set:Qot_GetSecuritySnapshot.FutureSnapshotExData.positionChange)
}

// required string lastTradeTime = 4;
inline bool FutureSnapshotExData::has_lasttradetime() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FutureSnapshotExData::set_has_lasttradetime() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FutureSnapshotExData::clear_has_lasttradetime() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FutureSnapshotExData::clear_lasttradetime() {
  lasttradetime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_lasttradetime();
}
inline const ::std::string& FutureSnapshotExData::lasttradetime() const {
  // @@protoc_insertion_point(field_get:Qot_GetSecuritySnapshot.FutureSnapshotExData.lastTradeTime)
  return lasttradetime_.GetNoArena();
}
inline void FutureSnapshotExData::set_lasttradetime(const ::std::string& value) {
  set_has_lasttradetime();
  lasttradetime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Qot_GetSecuritySnapshot.FutureSnapshotExData.lastTradeTime)
}
#if LANG_CXX11
inline void FutureSnapshotExData::set_lasttradetime(::std::string&& value) {
  set_has_lasttradetime();
  lasttradetime_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Qot_GetSecuritySnapshot.FutureSnapshotExData.lastTradeTime)
}
#endif
inline void FutureSnapshotExData::set_lasttradetime(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_lasttradetime();
  lasttradetime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Qot_GetSecuritySnapshot.FutureSnapshotExData.lastTradeTime)
}
inline void FutureSnapshotExData::set_lasttradetime(const char* value, size_t size) {
  set_has_lasttradetime();
  lasttradetime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Qot_GetSecuritySnapshot.FutureSnapshotExData.lastTradeTime)
}
inline ::std::string* FutureSnapshotExData::mutable_lasttradetime() {
  set_has_lasttradetime();
  // @@protoc_insertion_point(field_mutable:Qot_GetSecuritySnapshot.FutureSnapshotExData.lastTradeTime)
  return lasttradetime_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FutureSnapshotExData::release_lasttradetime() {
  // @@protoc_insertion_point(field_release:Qot_GetSecuritySnapshot.FutureSnapshotExData.lastTradeTime)
  clear_has_lasttradetime();
  return lasttradetime_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FutureSnapshotExData::set_allocated_lasttradetime(::std::string* lasttradetime) {
  if (lasttradetime != NULL) {
    set_has_lasttradetime();
  } else {
    clear_has_lasttradetime();
  }
  lasttradetime_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), lasttradetime);
  // @@protoc_insertion_point(field_set_allocated:Qot_GetSecuritySnapshot.FutureSnapshotExData.lastTradeTime)
}

// optional double lastTradeTimestamp = 5;
inline bool FutureSnapshotExData::has_lasttradetimestamp() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void FutureSnapshotExData::set_has_lasttradetimestamp() {
  _has_bits_[0] |= 0x00000010u;
}
inline void FutureSnapshotExData::clear_has_lasttradetimestamp() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void FutureSnapshotExData::clear_lasttradetimestamp() {
  lasttradetimestamp_ = 0;
  clear_has_lasttradetimestamp();
}
inline double FutureSnapshotExData::lasttradetimestamp() const {
  // @@protoc_insertion_point(field_get:Qot_GetSecuritySnapshot.FutureSnapshotExData.lastTradeTimestamp)
  return lasttradetimestamp_;
}
inline void FutureSnapshotExData::set_lasttradetimestamp(double value) {
  set_has_lasttradetimestamp();
  lasttradetimestamp_ = value;
  // @@protoc_insertion_point(field_set:Qot_GetSecuritySnapshot.FutureSnapshotExData.lastTradeTimestamp)
}

// required bool isMainContract = 6;
inline bool FutureSnapshotExData::has_ismaincontract() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void FutureSnapshotExData::set_has_ismaincontract() {
  _has_bits_[0] |= 0x00000020u;
}
inline void FutureSnapshotExData::clear_has_ismaincontract() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void FutureSnapshotExData::clear_ismaincontract() {
  ismaincontract_ = false;
  clear_has_ismaincontract();
}
inline bool FutureSnapshotExData::ismaincontract() const {
  // @@protoc_insertion_point(field_get:Qot_GetSecuritySnapshot.FutureSnapshotExData.isMainContract)
  return ismaincontract_;
}
inline void FutureSnapshotExData::set_ismaincontract(bool value) {
  set_has_ismaincontract();
  ismaincontract_ = value;
  // @@protoc_insertion_point(field_set:Qot_GetSecuritySnapshot.FutureSnapshotExData.isMainContract)
}

// -------------------------------------------------------------------

// SnapshotBasicData

// required .Qot_Common.Security security = 1;
inline bool SnapshotBasicData::has_security() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SnapshotBasicData::set_has_security() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SnapshotBasicData::clear_has_security() {
  _has_bits_[0] &= ~0x00000004u;
}
inline const ::Qot_Common::Security& SnapshotBasicData::security() const {
  const ::Qot_Common::Security* p = security_;
  // @@protoc_insertion_point(field_get:Qot_GetSecuritySnapshot.SnapshotBasicData.security)
  return p != NULL ? *p : *reinterpret_cast<const ::Qot_Common::Security*>(
      &::Qot_Common::_Security_default_instance_);
}
inline ::Qot_Common::Security* SnapshotBasicData::release_security() {
  // @@protoc_insertion_point(field_release:Qot_GetSecuritySnapshot.SnapshotBasicData.security)
  clear_has_security();
  ::Qot_Common::Security* temp = security_;
  security_ = NULL;
  return temp;
}
inline ::Qot_Common::Security* SnapshotBasicData::mutable_security() {
  set_has_security();
  if (security_ == NULL) {
    security_ = new ::Qot_Common::Security;
  }
  // @@protoc_insertion_point(field_mutable:Qot_GetSecuritySnapshot.SnapshotBasicData.security)
  return security_;
}
inline void SnapshotBasicData::set_allocated_security(::Qot_Common::Security* security) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(security_);
  }
  if (security) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      security = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, security, submessage_arena);
    }
    set_has_security();
  } else {
    clear_has_security();
  }
  security_ = security;
  // @@protoc_insertion_point(field_set_allocated:Qot_GetSecuritySnapshot.SnapshotBasicData.security)
}

// required int32 type = 2;
inline bool SnapshotBasicData::has_type() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void SnapshotBasicData::set_has_type() {
  _has_bits_[0] |= 0x00000020u;
}
inline void SnapshotBasicData::clear_has_type() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void SnapshotBasicData::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 SnapshotBasicData::type() const {
  // @@protoc_insertion_point(field_get:Qot_GetSecuritySnapshot.SnapshotBasicData.type)
  return type_;
}
inline void SnapshotBasicData::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:Qot_GetSecuritySnapshot.SnapshotBasicData.type)
}

// required bool isSuspend = 3;
inline bool SnapshotBasicData::has_issuspend() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void SnapshotBasicData::set_has_issuspend() {
  _has_bits_[0] |= 0x00400000u;
}
inline void SnapshotBasicData::clear_has_issuspend() {
  _has_bits_[0] &= ~0x00400000u;
}
inline void SnapshotBasicData::clear_issuspend() {
  issuspend_ = false;
  clear_has_issuspend();
}
inline bool SnapshotBasicData::issuspend() const {
  // @@protoc_insertion_point(field_get:Qot_GetSecuritySnapshot.SnapshotBasicData.isSuspend)
  return issuspend_;
}
inline void SnapshotBasicData::set_issuspend(bool value) {
  set_has_issuspend();
  issuspend_ = value;
  // @@protoc_insertion_point(field_set:Qot_GetSecuritySnapshot.SnapshotBasicData.isSuspend)
}

// required string listTime = 4;
inline bool SnapshotBasicData::has_listtime() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SnapshotBasicData::set_has_listtime() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SnapshotBasicData::clear_has_listtime() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SnapshotBasicData::clear_listtime() {
  listtime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_listtime();
}
inline const ::std::string& SnapshotBasicData::listtime() const {
  // @@protoc_insertion_point(field_get:Qot_GetSecuritySnapshot.SnapshotBasicData.listTime)
  return listtime_.GetNoArena();
}
inline void SnapshotBasicData::set_listtime(const ::std::string& value) {
  set_has_listtime();
  listtime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Qot_GetSecuritySnapshot.SnapshotBasicData.listTime)
}
#if LANG_CXX11
inline void SnapshotBasicData::set_listtime(::std::string&& value) {
  set_has_listtime();
  listtime_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Qot_GetSecuritySnapshot.SnapshotBasicData.listTime)
}
#endif
inline void SnapshotBasicData::set_listtime(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_listtime();
  listtime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Qot_GetSecuritySnapshot.SnapshotBasicData.listTime)
}
inline void SnapshotBasicData::set_listtime(const char* value, size_t size) {
  set_has_listtime();
  listtime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Qot_GetSecuritySnapshot.SnapshotBasicData.listTime)
}
inline ::std::string* SnapshotBasicData::mutable_listtime() {
  set_has_listtime();
  // @@protoc_insertion_point(field_mutable:Qot_GetSecuritySnapshot.SnapshotBasicData.listTime)
  return listtime_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SnapshotBasicData::release_listtime() {
  // @@protoc_insertion_point(field_release:Qot_GetSecuritySnapshot.SnapshotBasicData.listTime)
  clear_has_listtime();
  return listtime_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SnapshotBasicData::set_allocated_listtime(::std::string* listtime) {
  if (listtime != NULL) {
    set_has_listtime();
  } else {
    clear_has_listtime();
  }
  listtime_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), listtime);
  // @@protoc_insertion_point(field_set_allocated:Qot_GetSecuritySnapshot.SnapshotBasicData.listTime)
}

// required int32 lotSize = 5;
inline bool SnapshotBasicData::has_lotsize() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void SnapshotBasicData::set_has_lotsize() {
  _has_bits_[0] |= 0x00000040u;
}
inline void SnapshotBasicData::clear_has_lotsize() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void SnapshotBasicData::clear_lotsize() {
  lotsize_ = 0;
  clear_has_lotsize();
}
inline ::google::protobuf::int32 SnapshotBasicData::lotsize() const {
  // @@protoc_insertion_point(field_get:Qot_GetSecuritySnapshot.SnapshotBasicData.lotSize)
  return lotsize_;
}
inline void SnapshotBasicData::set_lotsize(::google::protobuf::int32 value) {
  set_has_lotsize();
  lotsize_ = value;
  // @@protoc_insertion_point(field_set:Qot_GetSecuritySnapshot.SnapshotBasicData.lotSize)
}

// required double priceSpread = 6;
inline bool SnapshotBasicData::has_pricespread() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void SnapshotBasicData::set_has_pricespread() {
  _has_bits_[0] |= 0x00000080u;
}
inline void SnapshotBasicData::clear_has_pricespread() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void SnapshotBasicData::clear_pricespread() {
  pricespread_ = 0;
  clear_has_pricespread();
}
inline double SnapshotBasicData::pricespread() const {
  // @@protoc_insertion_point(field_get:Qot_GetSecuritySnapshot.SnapshotBasicData.priceSpread)
  return pricespread_;
}
inline void SnapshotBasicData::set_pricespread(double value) {
  set_has_pricespread();
  pricespread_ = value;
  // @@protoc_insertion_point(field_set:Qot_GetSecuritySnapshot.SnapshotBasicData.priceSpread)
}

// required string updateTime = 7;
inline bool SnapshotBasicData::has_updatetime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SnapshotBasicData::set_has_updatetime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SnapshotBasicData::clear_has_updatetime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SnapshotBasicData::clear_updatetime() {
  updatetime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_updatetime();
}
inline const ::std::string& SnapshotBasicData::updatetime() const {
  // @@protoc_insertion_point(field_get:Qot_GetSecuritySnapshot.SnapshotBasicData.updateTime)
  return updatetime_.GetNoArena();
}
inline void SnapshotBasicData::set_updatetime(const ::std::string& value) {
  set_has_updatetime();
  updatetime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Qot_GetSecuritySnapshot.SnapshotBasicData.updateTime)
}
#if LANG_CXX11
inline void SnapshotBasicData::set_updatetime(::std::string&& value) {
  set_has_updatetime();
  updatetime_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Qot_GetSecuritySnapshot.SnapshotBasicData.updateTime)
}
#endif
inline void SnapshotBasicData::set_updatetime(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_updatetime();
  updatetime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Qot_GetSecuritySnapshot.SnapshotBasicData.updateTime)
}
inline void SnapshotBasicData::set_updatetime(const char* value, size_t size) {
  set_has_updatetime();
  updatetime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Qot_GetSecuritySnapshot.SnapshotBasicData.updateTime)
}
inline ::std::string* SnapshotBasicData::mutable_updatetime() {
  set_has_updatetime();
  // @@protoc_insertion_point(field_mutable:Qot_GetSecuritySnapshot.SnapshotBasicData.updateTime)
  return updatetime_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SnapshotBasicData::release_updatetime() {
  // @@protoc_insertion_point(field_release:Qot_GetSecuritySnapshot.SnapshotBasicData.updateTime)
  clear_has_updatetime();
  return updatetime_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SnapshotBasicData::set_allocated_updatetime(::std::string* updatetime) {
  if (updatetime != NULL) {
    set_has_updatetime();
  } else {
    clear_has_updatetime();
  }
  updatetime_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), updatetime);
  // @@protoc_insertion_point(field_set_allocated:Qot_GetSecuritySnapshot.SnapshotBasicData.updateTime)
}

// required double highPrice = 8;
inline bool SnapshotBasicData::has_highprice() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void SnapshotBasicData::set_has_highprice() {
  _has_bits_[0] |= 0x00000100u;
}
inline void SnapshotBasicData::clear_has_highprice() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void SnapshotBasicData::clear_highprice() {
  highprice_ = 0;
  clear_has_highprice();
}
inline double SnapshotBasicData::highprice() const {
  // @@protoc_insertion_point(field_get:Qot_GetSecuritySnapshot.SnapshotBasicData.highPrice)
  return highprice_;
}
inline void SnapshotBasicData::set_highprice(double value) {
  set_has_highprice();
  highprice_ = value;
  // @@protoc_insertion_point(field_set:Qot_GetSecuritySnapshot.SnapshotBasicData.highPrice)
}

// required double openPrice = 9;
inline bool SnapshotBasicData::has_openprice() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void SnapshotBasicData::set_has_openprice() {
  _has_bits_[0] |= 0x00000200u;
}
inline void SnapshotBasicData::clear_has_openprice() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void SnapshotBasicData::clear_openprice() {
  openprice_ = 0;
  clear_has_openprice();
}
inline double SnapshotBasicData::openprice() const {
  // @@protoc_insertion_point(field_get:Qot_GetSecuritySnapshot.SnapshotBasicData.openPrice)
  return openprice_;
}
inline void SnapshotBasicData::set_openprice(double value) {
  set_has_openprice();
  openprice_ = value;
  // @@protoc_insertion_point(field_set:Qot_GetSecuritySnapshot.SnapshotBasicData.openPrice)
}

// required double lowPrice = 10;
inline bool SnapshotBasicData::has_lowprice() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void SnapshotBasicData::set_has_lowprice() {
  _has_bits_[0] |= 0x00000400u;
}
inline void SnapshotBasicData::clear_has_lowprice() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void SnapshotBasicData::clear_lowprice() {
  lowprice_ = 0;
  clear_has_lowprice();
}
inline double SnapshotBasicData::lowprice() const {
  // @@protoc_insertion_point(field_get:Qot_GetSecuritySnapshot.SnapshotBasicData.lowPrice)
  return lowprice_;
}
inline void SnapshotBasicData::set_lowprice(double value) {
  set_has_lowprice();
  lowprice_ = value;
  // @@protoc_insertion_point(field_set:Qot_GetSecuritySnapshot.SnapshotBasicData.lowPrice)
}

// required double lastClosePrice = 11;
inline bool SnapshotBasicData::has_lastcloseprice() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void SnapshotBasicData::set_has_lastcloseprice() {
  _has_bits_[0] |= 0x00000800u;
}
inline void SnapshotBasicData::clear_has_lastcloseprice() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void SnapshotBasicData::clear_lastcloseprice() {
  lastcloseprice_ = 0;
  clear_has_lastcloseprice();
}
inline double SnapshotBasicData::lastcloseprice() const {
  // @@protoc_insertion_point(field_get:Qot_GetSecuritySnapshot.SnapshotBasicData.lastClosePrice)
  return lastcloseprice_;
}
inline void SnapshotBasicData::set_lastcloseprice(double value) {
  set_has_lastcloseprice();
  lastcloseprice_ = value;
  // @@protoc_insertion_point(field_set:Qot_GetSecuritySnapshot.SnapshotBasicData.lastClosePrice)
}

// required double curPrice = 12;
inline bool SnapshotBasicData::has_curprice() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void SnapshotBasicData::set_has_curprice() {
  _has_bits_[0] |= 0x00001000u;
}
inline void SnapshotBasicData::clear_has_curprice() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void SnapshotBasicData::clear_curprice() {
  curprice_ = 0;
  clear_has_curprice();
}
inline double SnapshotBasicData::curprice() const {
  // @@protoc_insertion_point(field_get:Qot_GetSecuritySnapshot.SnapshotBasicData.curPrice)
  return curprice_;
}
inline void SnapshotBasicData::set_curprice(double value) {
  set_has_curprice();
  curprice_ = value;
  // @@protoc_insertion_point(field_set:Qot_GetSecuritySnapshot.SnapshotBasicData.curPrice)
}

// required int64 volume = 13;
inline bool SnapshotBasicData::has_volume() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void SnapshotBasicData::set_has_volume() {
  _has_bits_[0] |= 0x00002000u;
}
inline void SnapshotBasicData::clear_has_volume() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void SnapshotBasicData::clear_volume() {
  volume_ = GOOGLE_LONGLONG(0);
  clear_has_volume();
}
inline ::google::protobuf::int64 SnapshotBasicData::volume() const {
  // @@protoc_insertion_point(field_get:Qot_GetSecuritySnapshot.SnapshotBasicData.volume)
  return volume_;
}
inline void SnapshotBasicData::set_volume(::google::protobuf::int64 value) {
  set_has_volume();
  volume_ = value;
  // @@protoc_insertion_point(field_set:Qot_GetSecuritySnapshot.SnapshotBasicData.volume)
}

// required double turnover = 14;
inline bool SnapshotBasicData::has_turnover() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void SnapshotBasicData::set_has_turnover() {
  _has_bits_[0] |= 0x00004000u;
}
inline void SnapshotBasicData::clear_has_turnover() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void SnapshotBasicData::clear_turnover() {
  turnover_ = 0;
  clear_has_turnover();
}
inline double SnapshotBasicData::turnover() const {
  // @@protoc_insertion_point(field_get:Qot_GetSecuritySnapshot.SnapshotBasicData.turnover)
  return turnover_;
}
inline void SnapshotBasicData::set_turnover(double value) {
  set_has_turnover();
  turnover_ = value;
  // @@protoc_insertion_point(field_set:Qot_GetSecuritySnapshot.SnapshotBasicData.turnover)
}

// required double turnoverRate = 15;
inline bool SnapshotBasicData::has_turnoverrate() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void SnapshotBasicData::set_has_turnoverrate() {
  _has_bits_[0] |= 0x00008000u;
}
inline void SnapshotBasicData::clear_has_turnoverrate() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void SnapshotBasicData::clear_turnoverrate() {
  turnoverrate_ = 0;
  clear_has_turnoverrate();
}
inline double SnapshotBasicData::turnoverrate() const {
  // @@protoc_insertion_point(field_get:Qot_GetSecuritySnapshot.SnapshotBasicData.turnoverRate)
  return turnoverrate_;
}
inline void SnapshotBasicData::set_turnoverrate(double value) {
  set_has_turnoverrate();
  turnoverrate_ = value;
  // @@protoc_insertion_point(field_set:Qot_GetSecuritySnapshot.SnapshotBasicData.turnoverRate)
}

// optional double listTimestamp = 16;
inline bool SnapshotBasicData::has_listtimestamp() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void SnapshotBasicData::set_has_listtimestamp() {
  _has_bits_[0] |= 0x00010000u;
}
inline void SnapshotBasicData::clear_has_listtimestamp() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void SnapshotBasicData::clear_listtimestamp() {
  listtimestamp_ = 0;
  clear_has_listtimestamp();
}
inline double SnapshotBasicData::listtimestamp() const {
  // @@protoc_insertion_point(field_get:Qot_GetSecuritySnapshot.SnapshotBasicData.listTimestamp)
  return listtimestamp_;
}
inline void SnapshotBasicData::set_listtimestamp(double value) {
  set_has_listtimestamp();
  listtimestamp_ = value;
  // @@protoc_insertion_point(field_set:Qot_GetSecuritySnapshot.SnapshotBasicData.listTimestamp)
}

// optional double updateTimestamp = 17;
inline bool SnapshotBasicData::has_updatetimestamp() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void SnapshotBasicData::set_has_updatetimestamp() {
  _has_bits_[0] |= 0x00020000u;
}
inline void SnapshotBasicData::clear_has_updatetimestamp() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void SnapshotBasicData::clear_updatetimestamp() {
  updatetimestamp_ = 0;
  clear_has_updatetimestamp();
}
inline double SnapshotBasicData::updatetimestamp() const {
  // @@protoc_insertion_point(field_get:Qot_GetSecuritySnapshot.SnapshotBasicData.updateTimestamp)
  return updatetimestamp_;
}
inline void SnapshotBasicData::set_updatetimestamp(double value) {
  set_has_updatetimestamp();
  updatetimestamp_ = value;
  // @@protoc_insertion_point(field_set:Qot_GetSecuritySnapshot.SnapshotBasicData.updateTimestamp)
}

// optional double askPrice = 18;
inline bool SnapshotBasicData::has_askprice() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void SnapshotBasicData::set_has_askprice() {
  _has_bits_[0] |= 0x00040000u;
}
inline void SnapshotBasicData::clear_has_askprice() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void SnapshotBasicData::clear_askprice() {
  askprice_ = 0;
  clear_has_askprice();
}
inline double SnapshotBasicData::askprice() const {
  // @@protoc_insertion_point(field_get:Qot_GetSecuritySnapshot.SnapshotBasicData.askPrice)
  return askprice_;
}
inline void SnapshotBasicData::set_askprice(double value) {
  set_has_askprice();
  askprice_ = value;
  // @@protoc_insertion_point(field_set:Qot_GetSecuritySnapshot.SnapshotBasicData.askPrice)
}

// optional double bidPrice = 19;
inline bool SnapshotBasicData::has_bidprice() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void SnapshotBasicData::set_has_bidprice() {
  _has_bits_[0] |= 0x00080000u;
}
inline void SnapshotBasicData::clear_has_bidprice() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void SnapshotBasicData::clear_bidprice() {
  bidprice_ = 0;
  clear_has_bidprice();
}
inline double SnapshotBasicData::bidprice() const {
  // @@protoc_insertion_point(field_get:Qot_GetSecuritySnapshot.SnapshotBasicData.bidPrice)
  return bidprice_;
}
inline void SnapshotBasicData::set_bidprice(double value) {
  set_has_bidprice();
  bidprice_ = value;
  // @@protoc_insertion_point(field_set:Qot_GetSecuritySnapshot.SnapshotBasicData.bidPrice)
}

// optional int64 askVol = 20;
inline bool SnapshotBasicData::has_askvol() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void SnapshotBasicData::set_has_askvol() {
  _has_bits_[0] |= 0x00100000u;
}
inline void SnapshotBasicData::clear_has_askvol() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void SnapshotBasicData::clear_askvol() {
  askvol_ = GOOGLE_LONGLONG(0);
  clear_has_askvol();
}
inline ::google::protobuf::int64 SnapshotBasicData::askvol() const {
  // @@protoc_insertion_point(field_get:Qot_GetSecuritySnapshot.SnapshotBasicData.askVol)
  return askvol_;
}
inline void SnapshotBasicData::set_askvol(::google::protobuf::int64 value) {
  set_has_askvol();
  askvol_ = value;
  // @@protoc_insertion_point(field_set:Qot_GetSecuritySnapshot.SnapshotBasicData.askVol)
}

// optional int64 bidVol = 21;
inline bool SnapshotBasicData::has_bidvol() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void SnapshotBasicData::set_has_bidvol() {
  _has_bits_[0] |= 0x00200000u;
}
inline void SnapshotBasicData::clear_has_bidvol() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void SnapshotBasicData::clear_bidvol() {
  bidvol_ = GOOGLE_LONGLONG(0);
  clear_has_bidvol();
}
inline ::google::protobuf::int64 SnapshotBasicData::bidvol() const {
  // @@protoc_insertion_point(field_get:Qot_GetSecuritySnapshot.SnapshotBasicData.bidVol)
  return bidvol_;
}
inline void SnapshotBasicData::set_bidvol(::google::protobuf::int64 value) {
  set_has_bidvol();
  bidvol_ = value;
  // @@protoc_insertion_point(field_set:Qot_GetSecuritySnapshot.SnapshotBasicData.bidVol)
}

// optional bool enableMargin = 22;
inline bool SnapshotBasicData::has_enablemargin() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
inline void SnapshotBasicData::set_has_enablemargin() {
  _has_bits_[0] |= 0x00800000u;
}
inline void SnapshotBasicData::clear_has_enablemargin() {
  _has_bits_[0] &= ~0x00800000u;
}
inline void SnapshotBasicData::clear_enablemargin() {
  enablemargin_ = false;
  clear_has_enablemargin();
}
inline bool SnapshotBasicData::enablemargin() const {
  // @@protoc_insertion_point(field_get:Qot_GetSecuritySnapshot.SnapshotBasicData.enableMargin)
  return enablemargin_;
}
inline void SnapshotBasicData::set_enablemargin(bool value) {
  set_has_enablemargin();
  enablemargin_ = value;
  // @@protoc_insertion_point(field_set:Qot_GetSecuritySnapshot.SnapshotBasicData.enableMargin)
}

// optional double mortgageRatio = 23;
inline bool SnapshotBasicData::has_mortgageratio() const {
  return (_has_bits_[0] & 0x04000000u) != 0;
}
inline void SnapshotBasicData::set_has_mortgageratio() {
  _has_bits_[0] |= 0x04000000u;
}
inline void SnapshotBasicData::clear_has_mortgageratio() {
  _has_bits_[0] &= ~0x04000000u;
}
inline void SnapshotBasicData::clear_mortgageratio() {
  mortgageratio_ = 0;
  clear_has_mortgageratio();
}
inline double SnapshotBasicData::mortgageratio() const {
  // @@protoc_insertion_point(field_get:Qot_GetSecuritySnapshot.SnapshotBasicData.mortgageRatio)
  return mortgageratio_;
}
inline void SnapshotBasicData::set_mortgageratio(double value) {
  set_has_mortgageratio();
  mortgageratio_ = value;
  // @@protoc_insertion_point(field_set:Qot_GetSecuritySnapshot.SnapshotBasicData.mortgageRatio)
}

// optional double longMarginInitialRatio = 24;
inline bool SnapshotBasicData::has_longmargininitialratio() const {
  return (_has_bits_[0] & 0x08000000u) != 0;
}
inline void SnapshotBasicData::set_has_longmargininitialratio() {
  _has_bits_[0] |= 0x08000000u;
}
inline void SnapshotBasicData::clear_has_longmargininitialratio() {
  _has_bits_[0] &= ~0x08000000u;
}
inline void SnapshotBasicData::clear_longmargininitialratio() {
  longmargininitialratio_ = 0;
  clear_has_longmargininitialratio();
}
inline double SnapshotBasicData::longmargininitialratio() const {
  // @@protoc_insertion_point(field_get:Qot_GetSecuritySnapshot.SnapshotBasicData.longMarginInitialRatio)
  return longmargininitialratio_;
}
inline void SnapshotBasicData::set_longmargininitialratio(double value) {
  set_has_longmargininitialratio();
  longmargininitialratio_ = value;
  // @@protoc_insertion_point(field_set:Qot_GetSecuritySnapshot.SnapshotBasicData.longMarginInitialRatio)
}

// optional bool enableShortSell = 25;
inline bool SnapshotBasicData::has_enableshortsell() const {
  return (_has_bits_[0] & 0x01000000u) != 0;
}
inline void SnapshotBasicData::set_has_enableshortsell() {
  _has_bits_[0] |= 0x01000000u;
}
inline void SnapshotBasicData::clear_has_enableshortsell() {
  _has_bits_[0] &= ~0x01000000u;
}
inline void SnapshotBasicData::clear_enableshortsell() {
  enableshortsell_ = false;
  clear_has_enableshortsell();
}
inline bool SnapshotBasicData::enableshortsell() const {
  // @@protoc_insertion_point(field_get:Qot_GetSecuritySnapshot.SnapshotBasicData.enableShortSell)
  return enableshortsell_;
}
inline void SnapshotBasicData::set_enableshortsell(bool value) {
  set_has_enableshortsell();
  enableshortsell_ = value;
  // @@protoc_insertion_point(field_set:Qot_GetSecuritySnapshot.SnapshotBasicData.enableShortSell)
}

// optional double shortSellRate = 26;
inline bool SnapshotBasicData::has_shortsellrate() const {
  return (_has_bits_[0] & 0x10000000u) != 0;
}
inline void SnapshotBasicData::set_has_shortsellrate() {
  _has_bits_[0] |= 0x10000000u;
}
inline void SnapshotBasicData::clear_has_shortsellrate() {
  _has_bits_[0] &= ~0x10000000u;
}
inline void SnapshotBasicData::clear_shortsellrate() {
  shortsellrate_ = 0;
  clear_has_shortsellrate();
}
inline double SnapshotBasicData::shortsellrate() const {
  // @@protoc_insertion_point(field_get:Qot_GetSecuritySnapshot.SnapshotBasicData.shortSellRate)
  return shortsellrate_;
}
inline void SnapshotBasicData::set_shortsellrate(double value) {
  set_has_shortsellrate();
  shortsellrate_ = value;
  // @@protoc_insertion_point(field_set:Qot_GetSecuritySnapshot.SnapshotBasicData.shortSellRate)
}

// optional int64 shortAvailableVolume = 27;
inline bool SnapshotBasicData::has_shortavailablevolume() const {
  return (_has_bits_[0] & 0x20000000u) != 0;
}
inline void SnapshotBasicData::set_has_shortavailablevolume() {
  _has_bits_[0] |= 0x20000000u;
}
inline void SnapshotBasicData::clear_has_shortavailablevolume() {
  _has_bits_[0] &= ~0x20000000u;
}
inline void SnapshotBasicData::clear_shortavailablevolume() {
  shortavailablevolume_ = GOOGLE_LONGLONG(0);
  clear_has_shortavailablevolume();
}
inline ::google::protobuf::int64 SnapshotBasicData::shortavailablevolume() const {
  // @@protoc_insertion_point(field_get:Qot_GetSecuritySnapshot.SnapshotBasicData.shortAvailableVolume)
  return shortavailablevolume_;
}
inline void SnapshotBasicData::set_shortavailablevolume(::google::protobuf::int64 value) {
  set_has_shortavailablevolume();
  shortavailablevolume_ = value;
  // @@protoc_insertion_point(field_set:Qot_GetSecuritySnapshot.SnapshotBasicData.shortAvailableVolume)
}

// optional double shortMarginInitialRatio = 28;
inline bool SnapshotBasicData::has_shortmargininitialratio() const {
  return (_has_bits_[0] & 0x40000000u) != 0;
}
inline void SnapshotBasicData::set_has_shortmargininitialratio() {
  _has_bits_[0] |= 0x40000000u;
}
inline void SnapshotBasicData::clear_has_shortmargininitialratio() {
  _has_bits_[0] &= ~0x40000000u;
}
inline void SnapshotBasicData::clear_shortmargininitialratio() {
  shortmargininitialratio_ = 0;
  clear_has_shortmargininitialratio();
}
inline double SnapshotBasicData::shortmargininitialratio() const {
  // @@protoc_insertion_point(field_get:Qot_GetSecuritySnapshot.SnapshotBasicData.shortMarginInitialRatio)
  return shortmargininitialratio_;
}
inline void SnapshotBasicData::set_shortmargininitialratio(double value) {
  set_has_shortmargininitialratio();
  shortmargininitialratio_ = value;
  // @@protoc_insertion_point(field_set:Qot_GetSecuritySnapshot.SnapshotBasicData.shortMarginInitialRatio)
}

// optional double amplitude = 29;
inline bool SnapshotBasicData::has_amplitude() const {
  return (_has_bits_[0] & 0x80000000u) != 0;
}
inline void SnapshotBasicData::set_has_amplitude() {
  _has_bits_[0] |= 0x80000000u;
}
inline void SnapshotBasicData::clear_has_amplitude() {
  _has_bits_[0] &= ~0x80000000u;
}
inline void SnapshotBasicData::clear_amplitude() {
  amplitude_ = 0;
  clear_has_amplitude();
}
inline double SnapshotBasicData::amplitude() const {
  // @@protoc_insertion_point(field_get:Qot_GetSecuritySnapshot.SnapshotBasicData.amplitude)
  return amplitude_;
}
inline void SnapshotBasicData::set_amplitude(double value) {
  set_has_amplitude();
  amplitude_ = value;
  // @@protoc_insertion_point(field_set:Qot_GetSecuritySnapshot.SnapshotBasicData.amplitude)
}

// optional double avgPrice = 30;
inline bool SnapshotBasicData::has_avgprice() const {
  return (_has_bits_[1] & 0x00000001u) != 0;
}
inline void SnapshotBasicData::set_has_avgprice() {
  _has_bits_[1] |= 0x00000001u;
}
inline void SnapshotBasicData::clear_has_avgprice() {
  _has_bits_[1] &= ~0x00000001u;
}
inline void SnapshotBasicData::clear_avgprice() {
  avgprice_ = 0;
  clear_has_avgprice();
}
inline double SnapshotBasicData::avgprice() const {
  // @@protoc_insertion_point(field_get:Qot_GetSecuritySnapshot.SnapshotBasicData.avgPrice)
  return avgprice_;
}
inline void SnapshotBasicData::set_avgprice(double value) {
  set_has_avgprice();
  avgprice_ = value;
  // @@protoc_insertion_point(field_set:Qot_GetSecuritySnapshot.SnapshotBasicData.avgPrice)
}

// optional double bidAskRatio = 31;
inline bool SnapshotBasicData::has_bidaskratio() const {
  return (_has_bits_[1] & 0x00000002u) != 0;
}
inline void SnapshotBasicData::set_has_bidaskratio() {
  _has_bits_[1] |= 0x00000002u;
}
inline void SnapshotBasicData::clear_has_bidaskratio() {
  _has_bits_[1] &= ~0x00000002u;
}
inline void SnapshotBasicData::clear_bidaskratio() {
  bidaskratio_ = 0;
  clear_has_bidaskratio();
}
inline double SnapshotBasicData::bidaskratio() const {
  // @@protoc_insertion_point(field_get:Qot_GetSecuritySnapshot.SnapshotBasicData.bidAskRatio)
  return bidaskratio_;
}
inline void SnapshotBasicData::set_bidaskratio(double value) {
  set_has_bidaskratio();
  bidaskratio_ = value;
  // @@protoc_insertion_point(field_set:Qot_GetSecuritySnapshot.SnapshotBasicData.bidAskRatio)
}

// optional double volumeRatio = 32;
inline bool SnapshotBasicData::has_volumeratio() const {
  return (_has_bits_[1] & 0x00000004u) != 0;
}
inline void SnapshotBasicData::set_has_volumeratio() {
  _has_bits_[1] |= 0x00000004u;
}
inline void SnapshotBasicData::clear_has_volumeratio() {
  _has_bits_[1] &= ~0x00000004u;
}
inline void SnapshotBasicData::clear_volumeratio() {
  volumeratio_ = 0;
  clear_has_volumeratio();
}
inline double SnapshotBasicData::volumeratio() const {
  // @@protoc_insertion_point(field_get:Qot_GetSecuritySnapshot.SnapshotBasicData.volumeRatio)
  return volumeratio_;
}
inline void SnapshotBasicData::set_volumeratio(double value) {
  set_has_volumeratio();
  volumeratio_ = value;
  // @@protoc_insertion_point(field_set:Qot_GetSecuritySnapshot.SnapshotBasicData.volumeRatio)
}

// optional double highest52WeeksPrice = 33;
inline bool SnapshotBasicData::has_highest52weeksprice() const {
  return (_has_bits_[1] & 0x00000008u) != 0;
}
inline void SnapshotBasicData::set_has_highest52weeksprice() {
  _has_bits_[1] |= 0x00000008u;
}
inline void SnapshotBasicData::clear_has_highest52weeksprice() {
  _has_bits_[1] &= ~0x00000008u;
}
inline void SnapshotBasicData::clear_highest52weeksprice() {
  highest52weeksprice_ = 0;
  clear_has_highest52weeksprice();
}
inline double SnapshotBasicData::highest52weeksprice() const {
  // @@protoc_insertion_point(field_get:Qot_GetSecuritySnapshot.SnapshotBasicData.highest52WeeksPrice)
  return highest52weeksprice_;
}
inline void SnapshotBasicData::set_highest52weeksprice(double value) {
  set_has_highest52weeksprice();
  highest52weeksprice_ = value;
  // @@protoc_insertion_point(field_set:Qot_GetSecuritySnapshot.SnapshotBasicData.highest52WeeksPrice)
}

// optional double lowest52WeeksPrice = 34;
inline bool SnapshotBasicData::has_lowest52weeksprice() const {
  return (_has_bits_[1] & 0x00000010u) != 0;
}
inline void SnapshotBasicData::set_has_lowest52weeksprice() {
  _has_bits_[1] |= 0x00000010u;
}
inline void SnapshotBasicData::clear_has_lowest52weeksprice() {
  _has_bits_[1] &= ~0x00000010u;
}
inline void SnapshotBasicData::clear_lowest52weeksprice() {
  lowest52weeksprice_ = 0;
  clear_has_lowest52weeksprice();
}
inline double SnapshotBasicData::lowest52weeksprice() const {
  // @@protoc_insertion_point(field_get:Qot_GetSecuritySnapshot.SnapshotBasicData.lowest52WeeksPrice)
  return lowest52weeksprice_;
}
inline void SnapshotBasicData::set_lowest52weeksprice(double value) {
  set_has_lowest52weeksprice();
  lowest52weeksprice_ = value;
  // @@protoc_insertion_point(field_set:Qot_GetSecuritySnapshot.SnapshotBasicData.lowest52WeeksPrice)
}

// optional double highestHistoryPrice = 35;
inline bool SnapshotBasicData::has_highesthistoryprice() const {
  return (_has_bits_[1] & 0x00000020u) != 0;
}
inline void SnapshotBasicData::set_has_highesthistoryprice() {
  _has_bits_[1] |= 0x00000020u;
}
inline void SnapshotBasicData::clear_has_highesthistoryprice() {
  _has_bits_[1] &= ~0x00000020u;
}
inline void SnapshotBasicData::clear_highesthistoryprice() {
  highesthistoryprice_ = 0;
  clear_has_highesthistoryprice();
}
inline double SnapshotBasicData::highesthistoryprice() const {
  // @@protoc_insertion_point(field_get:Qot_GetSecuritySnapshot.SnapshotBasicData.highestHistoryPrice)
  return highesthistoryprice_;
}
inline void SnapshotBasicData::set_highesthistoryprice(double value) {
  set_has_highesthistoryprice();
  highesthistoryprice_ = value;
  // @@protoc_insertion_point(field_set:Qot_GetSecuritySnapshot.SnapshotBasicData.highestHistoryPrice)
}

// optional double lowestHistoryPrice = 36;
inline bool SnapshotBasicData::has_lowesthistoryprice() const {
  return (_has_bits_[1] & 0x00000040u) != 0;
}
inline void SnapshotBasicData::set_has_lowesthistoryprice() {
  _has_bits_[1] |= 0x00000040u;
}
inline void SnapshotBasicData::clear_has_lowesthistoryprice() {
  _has_bits_[1] &= ~0x00000040u;
}
inline void SnapshotBasicData::clear_lowesthistoryprice() {
  lowesthistoryprice_ = 0;
  clear_has_lowesthistoryprice();
}
inline double SnapshotBasicData::lowesthistoryprice() const {
  // @@protoc_insertion_point(field_get:Qot_GetSecuritySnapshot.SnapshotBasicData.lowestHistoryPrice)
  return lowesthistoryprice_;
}
inline void SnapshotBasicData::set_lowesthistoryprice(double value) {
  set_has_lowesthistoryprice();
  lowesthistoryprice_ = value;
  // @@protoc_insertion_point(field_set:Qot_GetSecuritySnapshot.SnapshotBasicData.lowestHistoryPrice)
}

// optional .Qot_Common.PreAfterMarketData preMarket = 37;
inline bool SnapshotBasicData::has_premarket() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SnapshotBasicData::set_has_premarket() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SnapshotBasicData::clear_has_premarket() {
  _has_bits_[0] &= ~0x00000008u;
}
inline const ::Qot_Common::PreAfterMarketData& SnapshotBasicData::premarket() const {
  const ::Qot_Common::PreAfterMarketData* p = premarket_;
  // @@protoc_insertion_point(field_get:Qot_GetSecuritySnapshot.SnapshotBasicData.preMarket)
  return p != NULL ? *p : *reinterpret_cast<const ::Qot_Common::PreAfterMarketData*>(
      &::Qot_Common::_PreAfterMarketData_default_instance_);
}
inline ::Qot_Common::PreAfterMarketData* SnapshotBasicData::release_premarket() {
  // @@protoc_insertion_point(field_release:Qot_GetSecuritySnapshot.SnapshotBasicData.preMarket)
  clear_has_premarket();
  ::Qot_Common::PreAfterMarketData* temp = premarket_;
  premarket_ = NULL;
  return temp;
}
inline ::Qot_Common::PreAfterMarketData* SnapshotBasicData::mutable_premarket() {
  set_has_premarket();
  if (premarket_ == NULL) {
    premarket_ = new ::Qot_Common::PreAfterMarketData;
  }
  // @@protoc_insertion_point(field_mutable:Qot_GetSecuritySnapshot.SnapshotBasicData.preMarket)
  return premarket_;
}
inline void SnapshotBasicData::set_allocated_premarket(::Qot_Common::PreAfterMarketData* premarket) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(premarket_);
  }
  if (premarket) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      premarket = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, premarket, submessage_arena);
    }
    set_has_premarket();
  } else {
    clear_has_premarket();
  }
  premarket_ = premarket;
  // @@protoc_insertion_point(field_set_allocated:Qot_GetSecuritySnapshot.SnapshotBasicData.preMarket)
}

// optional .Qot_Common.PreAfterMarketData afterMarket = 38;
inline bool SnapshotBasicData::has_aftermarket() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SnapshotBasicData::set_has_aftermarket() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SnapshotBasicData::clear_has_aftermarket() {
  _has_bits_[0] &= ~0x00000010u;
}
inline const ::Qot_Common::PreAfterMarketData& SnapshotBasicData::aftermarket() const {
  const ::Qot_Common::PreAfterMarketData* p = aftermarket_;
  // @@protoc_insertion_point(field_get:Qot_GetSecuritySnapshot.SnapshotBasicData.afterMarket)
  return p != NULL ? *p : *reinterpret_cast<const ::Qot_Common::PreAfterMarketData*>(
      &::Qot_Common::_PreAfterMarketData_default_instance_);
}
inline ::Qot_Common::PreAfterMarketData* SnapshotBasicData::release_aftermarket() {
  // @@protoc_insertion_point(field_release:Qot_GetSecuritySnapshot.SnapshotBasicData.afterMarket)
  clear_has_aftermarket();
  ::Qot_Common::PreAfterMarketData* temp = aftermarket_;
  aftermarket_ = NULL;
  return temp;
}
inline ::Qot_Common::PreAfterMarketData* SnapshotBasicData::mutable_aftermarket() {
  set_has_aftermarket();
  if (aftermarket_ == NULL) {
    aftermarket_ = new ::Qot_Common::PreAfterMarketData;
  }
  // @@protoc_insertion_point(field_mutable:Qot_GetSecuritySnapshot.SnapshotBasicData.afterMarket)
  return aftermarket_;
}
inline void SnapshotBasicData::set_allocated_aftermarket(::Qot_Common::PreAfterMarketData* aftermarket) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(aftermarket_);
  }
  if (aftermarket) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      aftermarket = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, aftermarket, submessage_arena);
    }
    set_has_aftermarket();
  } else {
    clear_has_aftermarket();
  }
  aftermarket_ = aftermarket;
  // @@protoc_insertion_point(field_set_allocated:Qot_GetSecuritySnapshot.SnapshotBasicData.afterMarket)
}

// optional int32 secStatus = 39;
inline bool SnapshotBasicData::has_secstatus() const {
  return (_has_bits_[0] & 0x02000000u) != 0;
}
inline void SnapshotBasicData::set_has_secstatus() {
  _has_bits_[0] |= 0x02000000u;
}
inline void SnapshotBasicData::clear_has_secstatus() {
  _has_bits_[0] &= ~0x02000000u;
}
inline void SnapshotBasicData::clear_secstatus() {
  secstatus_ = 0;
  clear_has_secstatus();
}
inline ::google::protobuf::int32 SnapshotBasicData::secstatus() const {
  // @@protoc_insertion_point(field_get:Qot_GetSecuritySnapshot.SnapshotBasicData.secStatus)
  return secstatus_;
}
inline void SnapshotBasicData::set_secstatus(::google::protobuf::int32 value) {
  set_has_secstatus();
  secstatus_ = value;
  // @@protoc_insertion_point(field_set:Qot_GetSecuritySnapshot.SnapshotBasicData.secStatus)
}

// -------------------------------------------------------------------

// Snapshot

// required .Qot_GetSecuritySnapshot.SnapshotBasicData basic = 1;
inline bool Snapshot::has_basic() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Snapshot::set_has_basic() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Snapshot::clear_has_basic() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Snapshot::clear_basic() {
  if (basic_ != NULL) basic_->Clear();
  clear_has_basic();
}
inline const ::Qot_GetSecuritySnapshot::SnapshotBasicData& Snapshot::basic() const {
  const ::Qot_GetSecuritySnapshot::SnapshotBasicData* p = basic_;
  // @@protoc_insertion_point(field_get:Qot_GetSecuritySnapshot.Snapshot.basic)
  return p != NULL ? *p : *reinterpret_cast<const ::Qot_GetSecuritySnapshot::SnapshotBasicData*>(
      &::Qot_GetSecuritySnapshot::_SnapshotBasicData_default_instance_);
}
inline ::Qot_GetSecuritySnapshot::SnapshotBasicData* Snapshot::release_basic() {
  // @@protoc_insertion_point(field_release:Qot_GetSecuritySnapshot.Snapshot.basic)
  clear_has_basic();
  ::Qot_GetSecuritySnapshot::SnapshotBasicData* temp = basic_;
  basic_ = NULL;
  return temp;
}
inline ::Qot_GetSecuritySnapshot::SnapshotBasicData* Snapshot::mutable_basic() {
  set_has_basic();
  if (basic_ == NULL) {
    basic_ = new ::Qot_GetSecuritySnapshot::SnapshotBasicData;
  }
  // @@protoc_insertion_point(field_mutable:Qot_GetSecuritySnapshot.Snapshot.basic)
  return basic_;
}
inline void Snapshot::set_allocated_basic(::Qot_GetSecuritySnapshot::SnapshotBasicData* basic) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete basic_;
  }
  if (basic) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      basic = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, basic, submessage_arena);
    }
    set_has_basic();
  } else {
    clear_has_basic();
  }
  basic_ = basic;
  // @@protoc_insertion_point(field_set_allocated:Qot_GetSecuritySnapshot.Snapshot.basic)
}

// optional .Qot_GetSecuritySnapshot.EquitySnapshotExData equityExData = 2;
inline bool Snapshot::has_equityexdata() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Snapshot::set_has_equityexdata() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Snapshot::clear_has_equityexdata() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Snapshot::clear_equityexdata() {
  if (equityexdata_ != NULL) equityexdata_->Clear();
  clear_has_equityexdata();
}
inline const ::Qot_GetSecuritySnapshot::EquitySnapshotExData& Snapshot::equityexdata() const {
  const ::Qot_GetSecuritySnapshot::EquitySnapshotExData* p = equityexdata_;
  // @@protoc_insertion_point(field_get:Qot_GetSecuritySnapshot.Snapshot.equityExData)
  return p != NULL ? *p : *reinterpret_cast<const ::Qot_GetSecuritySnapshot::EquitySnapshotExData*>(
      &::Qot_GetSecuritySnapshot::_EquitySnapshotExData_default_instance_);
}
inline ::Qot_GetSecuritySnapshot::EquitySnapshotExData* Snapshot::release_equityexdata() {
  // @@protoc_insertion_point(field_release:Qot_GetSecuritySnapshot.Snapshot.equityExData)
  clear_has_equityexdata();
  ::Qot_GetSecuritySnapshot::EquitySnapshotExData* temp = equityexdata_;
  equityexdata_ = NULL;
  return temp;
}
inline ::Qot_GetSecuritySnapshot::EquitySnapshotExData* Snapshot::mutable_equityexdata() {
  set_has_equityexdata();
  if (equityexdata_ == NULL) {
    equityexdata_ = new ::Qot_GetSecuritySnapshot::EquitySnapshotExData;
  }
  // @@protoc_insertion_point(field_mutable:Qot_GetSecuritySnapshot.Snapshot.equityExData)
  return equityexdata_;
}
inline void Snapshot::set_allocated_equityexdata(::Qot_GetSecuritySnapshot::EquitySnapshotExData* equityexdata) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete equityexdata_;
  }
  if (equityexdata) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      equityexdata = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, equityexdata, submessage_arena);
    }
    set_has_equityexdata();
  } else {
    clear_has_equityexdata();
  }
  equityexdata_ = equityexdata;
  // @@protoc_insertion_point(field_set_allocated:Qot_GetSecuritySnapshot.Snapshot.equityExData)
}

// optional .Qot_GetSecuritySnapshot.WarrantSnapshotExData warrantExData = 3;
inline bool Snapshot::has_warrantexdata() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Snapshot::set_has_warrantexdata() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Snapshot::clear_has_warrantexdata() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Snapshot::clear_warrantexdata() {
  if (warrantexdata_ != NULL) warrantexdata_->Clear();
  clear_has_warrantexdata();
}
inline const ::Qot_GetSecuritySnapshot::WarrantSnapshotExData& Snapshot::warrantexdata() const {
  const ::Qot_GetSecuritySnapshot::WarrantSnapshotExData* p = warrantexdata_;
  // @@protoc_insertion_point(field_get:Qot_GetSecuritySnapshot.Snapshot.warrantExData)
  return p != NULL ? *p : *reinterpret_cast<const ::Qot_GetSecuritySnapshot::WarrantSnapshotExData*>(
      &::Qot_GetSecuritySnapshot::_WarrantSnapshotExData_default_instance_);
}
inline ::Qot_GetSecuritySnapshot::WarrantSnapshotExData* Snapshot::release_warrantexdata() {
  // @@protoc_insertion_point(field_release:Qot_GetSecuritySnapshot.Snapshot.warrantExData)
  clear_has_warrantexdata();
  ::Qot_GetSecuritySnapshot::WarrantSnapshotExData* temp = warrantexdata_;
  warrantexdata_ = NULL;
  return temp;
}
inline ::Qot_GetSecuritySnapshot::WarrantSnapshotExData* Snapshot::mutable_warrantexdata() {
  set_has_warrantexdata();
  if (warrantexdata_ == NULL) {
    warrantexdata_ = new ::Qot_GetSecuritySnapshot::WarrantSnapshotExData;
  }
  // @@protoc_insertion_point(field_mutable:Qot_GetSecuritySnapshot.Snapshot.warrantExData)
  return warrantexdata_;
}
inline void Snapshot::set_allocated_warrantexdata(::Qot_GetSecuritySnapshot::WarrantSnapshotExData* warrantexdata) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete warrantexdata_;
  }
  if (warrantexdata) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      warrantexdata = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, warrantexdata, submessage_arena);
    }
    set_has_warrantexdata();
  } else {
    clear_has_warrantexdata();
  }
  warrantexdata_ = warrantexdata;
  // @@protoc_insertion_point(field_set_allocated:Qot_GetSecuritySnapshot.Snapshot.warrantExData)
}

// optional .Qot_GetSecuritySnapshot.OptionSnapshotExData optionExData = 4;
inline bool Snapshot::has_optionexdata() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Snapshot::set_has_optionexdata() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Snapshot::clear_has_optionexdata() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Snapshot::clear_optionexdata() {
  if (optionexdata_ != NULL) optionexdata_->Clear();
  clear_has_optionexdata();
}
inline const ::Qot_GetSecuritySnapshot::OptionSnapshotExData& Snapshot::optionexdata() const {
  const ::Qot_GetSecuritySnapshot::OptionSnapshotExData* p = optionexdata_;
  // @@protoc_insertion_point(field_get:Qot_GetSecuritySnapshot.Snapshot.optionExData)
  return p != NULL ? *p : *reinterpret_cast<const ::Qot_GetSecuritySnapshot::OptionSnapshotExData*>(
      &::Qot_GetSecuritySnapshot::_OptionSnapshotExData_default_instance_);
}
inline ::Qot_GetSecuritySnapshot::OptionSnapshotExData* Snapshot::release_optionexdata() {
  // @@protoc_insertion_point(field_release:Qot_GetSecuritySnapshot.Snapshot.optionExData)
  clear_has_optionexdata();
  ::Qot_GetSecuritySnapshot::OptionSnapshotExData* temp = optionexdata_;
  optionexdata_ = NULL;
  return temp;
}
inline ::Qot_GetSecuritySnapshot::OptionSnapshotExData* Snapshot::mutable_optionexdata() {
  set_has_optionexdata();
  if (optionexdata_ == NULL) {
    optionexdata_ = new ::Qot_GetSecuritySnapshot::OptionSnapshotExData;
  }
  // @@protoc_insertion_point(field_mutable:Qot_GetSecuritySnapshot.Snapshot.optionExData)
  return optionexdata_;
}
inline void Snapshot::set_allocated_optionexdata(::Qot_GetSecuritySnapshot::OptionSnapshotExData* optionexdata) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete optionexdata_;
  }
  if (optionexdata) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      optionexdata = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, optionexdata, submessage_arena);
    }
    set_has_optionexdata();
  } else {
    clear_has_optionexdata();
  }
  optionexdata_ = optionexdata;
  // @@protoc_insertion_point(field_set_allocated:Qot_GetSecuritySnapshot.Snapshot.optionExData)
}

// optional .Qot_GetSecuritySnapshot.IndexSnapshotExData indexExData = 5;
inline bool Snapshot::has_indexexdata() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Snapshot::set_has_indexexdata() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Snapshot::clear_has_indexexdata() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Snapshot::clear_indexexdata() {
  if (indexexdata_ != NULL) indexexdata_->Clear();
  clear_has_indexexdata();
}
inline const ::Qot_GetSecuritySnapshot::IndexSnapshotExData& Snapshot::indexexdata() const {
  const ::Qot_GetSecuritySnapshot::IndexSnapshotExData* p = indexexdata_;
  // @@protoc_insertion_point(field_get:Qot_GetSecuritySnapshot.Snapshot.indexExData)
  return p != NULL ? *p : *reinterpret_cast<const ::Qot_GetSecuritySnapshot::IndexSnapshotExData*>(
      &::Qot_GetSecuritySnapshot::_IndexSnapshotExData_default_instance_);
}
inline ::Qot_GetSecuritySnapshot::IndexSnapshotExData* Snapshot::release_indexexdata() {
  // @@protoc_insertion_point(field_release:Qot_GetSecuritySnapshot.Snapshot.indexExData)
  clear_has_indexexdata();
  ::Qot_GetSecuritySnapshot::IndexSnapshotExData* temp = indexexdata_;
  indexexdata_ = NULL;
  return temp;
}
inline ::Qot_GetSecuritySnapshot::IndexSnapshotExData* Snapshot::mutable_indexexdata() {
  set_has_indexexdata();
  if (indexexdata_ == NULL) {
    indexexdata_ = new ::Qot_GetSecuritySnapshot::IndexSnapshotExData;
  }
  // @@protoc_insertion_point(field_mutable:Qot_GetSecuritySnapshot.Snapshot.indexExData)
  return indexexdata_;
}
inline void Snapshot::set_allocated_indexexdata(::Qot_GetSecuritySnapshot::IndexSnapshotExData* indexexdata) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete indexexdata_;
  }
  if (indexexdata) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      indexexdata = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, indexexdata, submessage_arena);
    }
    set_has_indexexdata();
  } else {
    clear_has_indexexdata();
  }
  indexexdata_ = indexexdata;
  // @@protoc_insertion_point(field_set_allocated:Qot_GetSecuritySnapshot.Snapshot.indexExData)
}

// optional .Qot_GetSecuritySnapshot.PlateSnapshotExData plateExData = 6;
inline bool Snapshot::has_plateexdata() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Snapshot::set_has_plateexdata() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Snapshot::clear_has_plateexdata() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Snapshot::clear_plateexdata() {
  if (plateexdata_ != NULL) plateexdata_->Clear();
  clear_has_plateexdata();
}
inline const ::Qot_GetSecuritySnapshot::PlateSnapshotExData& Snapshot::plateexdata() const {
  const ::Qot_GetSecuritySnapshot::PlateSnapshotExData* p = plateexdata_;
  // @@protoc_insertion_point(field_get:Qot_GetSecuritySnapshot.Snapshot.plateExData)
  return p != NULL ? *p : *reinterpret_cast<const ::Qot_GetSecuritySnapshot::PlateSnapshotExData*>(
      &::Qot_GetSecuritySnapshot::_PlateSnapshotExData_default_instance_);
}
inline ::Qot_GetSecuritySnapshot::PlateSnapshotExData* Snapshot::release_plateexdata() {
  // @@protoc_insertion_point(field_release:Qot_GetSecuritySnapshot.Snapshot.plateExData)
  clear_has_plateexdata();
  ::Qot_GetSecuritySnapshot::PlateSnapshotExData* temp = plateexdata_;
  plateexdata_ = NULL;
  return temp;
}
inline ::Qot_GetSecuritySnapshot::PlateSnapshotExData* Snapshot::mutable_plateexdata() {
  set_has_plateexdata();
  if (plateexdata_ == NULL) {
    plateexdata_ = new ::Qot_GetSecuritySnapshot::PlateSnapshotExData;
  }
  // @@protoc_insertion_point(field_mutable:Qot_GetSecuritySnapshot.Snapshot.plateExData)
  return plateexdata_;
}
inline void Snapshot::set_allocated_plateexdata(::Qot_GetSecuritySnapshot::PlateSnapshotExData* plateexdata) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete plateexdata_;
  }
  if (plateexdata) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      plateexdata = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, plateexdata, submessage_arena);
    }
    set_has_plateexdata();
  } else {
    clear_has_plateexdata();
  }
  plateexdata_ = plateexdata;
  // @@protoc_insertion_point(field_set_allocated:Qot_GetSecuritySnapshot.Snapshot.plateExData)
}

// optional .Qot_GetSecuritySnapshot.FutureSnapshotExData futureExData = 7;
inline bool Snapshot::has_futureexdata() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Snapshot::set_has_futureexdata() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Snapshot::clear_has_futureexdata() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Snapshot::clear_futureexdata() {
  if (futureexdata_ != NULL) futureexdata_->Clear();
  clear_has_futureexdata();
}
inline const ::Qot_GetSecuritySnapshot::FutureSnapshotExData& Snapshot::futureexdata() const {
  const ::Qot_GetSecuritySnapshot::FutureSnapshotExData* p = futureexdata_;
  // @@protoc_insertion_point(field_get:Qot_GetSecuritySnapshot.Snapshot.futureExData)
  return p != NULL ? *p : *reinterpret_cast<const ::Qot_GetSecuritySnapshot::FutureSnapshotExData*>(
      &::Qot_GetSecuritySnapshot::_FutureSnapshotExData_default_instance_);
}
inline ::Qot_GetSecuritySnapshot::FutureSnapshotExData* Snapshot::release_futureexdata() {
  // @@protoc_insertion_point(field_release:Qot_GetSecuritySnapshot.Snapshot.futureExData)
  clear_has_futureexdata();
  ::Qot_GetSecuritySnapshot::FutureSnapshotExData* temp = futureexdata_;
  futureexdata_ = NULL;
  return temp;
}
inline ::Qot_GetSecuritySnapshot::FutureSnapshotExData* Snapshot::mutable_futureexdata() {
  set_has_futureexdata();
  if (futureexdata_ == NULL) {
    futureexdata_ = new ::Qot_GetSecuritySnapshot::FutureSnapshotExData;
  }
  // @@protoc_insertion_point(field_mutable:Qot_GetSecuritySnapshot.Snapshot.futureExData)
  return futureexdata_;
}
inline void Snapshot::set_allocated_futureexdata(::Qot_GetSecuritySnapshot::FutureSnapshotExData* futureexdata) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete futureexdata_;
  }
  if (futureexdata) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      futureexdata = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, futureexdata, submessage_arena);
    }
    set_has_futureexdata();
  } else {
    clear_has_futureexdata();
  }
  futureexdata_ = futureexdata;
  // @@protoc_insertion_point(field_set_allocated:Qot_GetSecuritySnapshot.Snapshot.futureExData)
}

// -------------------------------------------------------------------

// S2C

// repeated .Qot_GetSecuritySnapshot.Snapshot snapshotList = 1;
inline int S2C::snapshotlist_size() const {
  return snapshotlist_.size();
}
inline void S2C::clear_snapshotlist() {
  snapshotlist_.Clear();
}
inline const ::Qot_GetSecuritySnapshot::Snapshot& S2C::snapshotlist(int index) const {
  // @@protoc_insertion_point(field_get:Qot_GetSecuritySnapshot.S2C.snapshotList)
  return snapshotlist_.Get(index);
}
inline ::Qot_GetSecuritySnapshot::Snapshot* S2C::mutable_snapshotlist(int index) {
  // @@protoc_insertion_point(field_mutable:Qot_GetSecuritySnapshot.S2C.snapshotList)
  return snapshotlist_.Mutable(index);
}
inline ::Qot_GetSecuritySnapshot::Snapshot* S2C::add_snapshotlist() {
  // @@protoc_insertion_point(field_add:Qot_GetSecuritySnapshot.S2C.snapshotList)
  return snapshotlist_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::Qot_GetSecuritySnapshot::Snapshot >*
S2C::mutable_snapshotlist() {
  // @@protoc_insertion_point(field_mutable_list:Qot_GetSecuritySnapshot.S2C.snapshotList)
  return &snapshotlist_;
}
inline const ::google::protobuf::RepeatedPtrField< ::Qot_GetSecuritySnapshot::Snapshot >&
S2C::snapshotlist() const {
  // @@protoc_insertion_point(field_list:Qot_GetSecuritySnapshot.S2C.snapshotList)
  return snapshotlist_;
}

// -------------------------------------------------------------------

// Request

// required .Qot_GetSecuritySnapshot.C2S c2s = 1;
inline bool Request::has_c2s() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Request::set_has_c2s() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Request::clear_has_c2s() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Request::clear_c2s() {
  if (c2s_ != NULL) c2s_->Clear();
  clear_has_c2s();
}
inline const ::Qot_GetSecuritySnapshot::C2S& Request::c2s() const {
  const ::Qot_GetSecuritySnapshot::C2S* p = c2s_;
  // @@protoc_insertion_point(field_get:Qot_GetSecuritySnapshot.Request.c2s)
  return p != NULL ? *p : *reinterpret_cast<const ::Qot_GetSecuritySnapshot::C2S*>(
      &::Qot_GetSecuritySnapshot::_C2S_default_instance_);
}
inline ::Qot_GetSecuritySnapshot::C2S* Request::release_c2s() {
  // @@protoc_insertion_point(field_release:Qot_GetSecuritySnapshot.Request.c2s)
  clear_has_c2s();
  ::Qot_GetSecuritySnapshot::C2S* temp = c2s_;
  c2s_ = NULL;
  return temp;
}
inline ::Qot_GetSecuritySnapshot::C2S* Request::mutable_c2s() {
  set_has_c2s();
  if (c2s_ == NULL) {
    c2s_ = new ::Qot_GetSecuritySnapshot::C2S;
  }
  // @@protoc_insertion_point(field_mutable:Qot_GetSecuritySnapshot.Request.c2s)
  return c2s_;
}
inline void Request::set_allocated_c2s(::Qot_GetSecuritySnapshot::C2S* c2s) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete c2s_;
  }
  if (c2s) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      c2s = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, c2s, submessage_arena);
    }
    set_has_c2s();
  } else {
    clear_has_c2s();
  }
  c2s_ = c2s;
  // @@protoc_insertion_point(field_set_allocated:Qot_GetSecuritySnapshot.Request.c2s)
}

// -------------------------------------------------------------------

// Response

// required int32 retType = 1 [default = -400];
inline bool Response::has_rettype() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Response::set_has_rettype() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Response::clear_has_rettype() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Response::clear_rettype() {
  rettype_ = -400;
  clear_has_rettype();
}
inline ::google::protobuf::int32 Response::rettype() const {
  // @@protoc_insertion_point(field_get:Qot_GetSecuritySnapshot.Response.retType)
  return rettype_;
}
inline void Response::set_rettype(::google::protobuf::int32 value) {
  set_has_rettype();
  rettype_ = value;
  // @@protoc_insertion_point(field_set:Qot_GetSecuritySnapshot.Response.retType)
}

// optional string retMsg = 2;
inline bool Response::has_retmsg() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Response::set_has_retmsg() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Response::clear_has_retmsg() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Response::clear_retmsg() {
  retmsg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_retmsg();
}
inline const ::std::string& Response::retmsg() const {
  // @@protoc_insertion_point(field_get:Qot_GetSecuritySnapshot.Response.retMsg)
  return retmsg_.GetNoArena();
}
inline void Response::set_retmsg(const ::std::string& value) {
  set_has_retmsg();
  retmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Qot_GetSecuritySnapshot.Response.retMsg)
}
#if LANG_CXX11
inline void Response::set_retmsg(::std::string&& value) {
  set_has_retmsg();
  retmsg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Qot_GetSecuritySnapshot.Response.retMsg)
}
#endif
inline void Response::set_retmsg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_retmsg();
  retmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Qot_GetSecuritySnapshot.Response.retMsg)
}
inline void Response::set_retmsg(const char* value, size_t size) {
  set_has_retmsg();
  retmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Qot_GetSecuritySnapshot.Response.retMsg)
}
inline ::std::string* Response::mutable_retmsg() {
  set_has_retmsg();
  // @@protoc_insertion_point(field_mutable:Qot_GetSecuritySnapshot.Response.retMsg)
  return retmsg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Response::release_retmsg() {
  // @@protoc_insertion_point(field_release:Qot_GetSecuritySnapshot.Response.retMsg)
  clear_has_retmsg();
  return retmsg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Response::set_allocated_retmsg(::std::string* retmsg) {
  if (retmsg != NULL) {
    set_has_retmsg();
  } else {
    clear_has_retmsg();
  }
  retmsg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), retmsg);
  // @@protoc_insertion_point(field_set_allocated:Qot_GetSecuritySnapshot.Response.retMsg)
}

// optional int32 errCode = 3;
inline bool Response::has_errcode() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Response::set_has_errcode() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Response::clear_has_errcode() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Response::clear_errcode() {
  errcode_ = 0;
  clear_has_errcode();
}
inline ::google::protobuf::int32 Response::errcode() const {
  // @@protoc_insertion_point(field_get:Qot_GetSecuritySnapshot.Response.errCode)
  return errcode_;
}
inline void Response::set_errcode(::google::protobuf::int32 value) {
  set_has_errcode();
  errcode_ = value;
  // @@protoc_insertion_point(field_set:Qot_GetSecuritySnapshot.Response.errCode)
}

// optional .Qot_GetSecuritySnapshot.S2C s2c = 4;
inline bool Response::has_s2c() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Response::set_has_s2c() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Response::clear_has_s2c() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Response::clear_s2c() {
  if (s2c_ != NULL) s2c_->Clear();
  clear_has_s2c();
}
inline const ::Qot_GetSecuritySnapshot::S2C& Response::s2c() const {
  const ::Qot_GetSecuritySnapshot::S2C* p = s2c_;
  // @@protoc_insertion_point(field_get:Qot_GetSecuritySnapshot.Response.s2c)
  return p != NULL ? *p : *reinterpret_cast<const ::Qot_GetSecuritySnapshot::S2C*>(
      &::Qot_GetSecuritySnapshot::_S2C_default_instance_);
}
inline ::Qot_GetSecuritySnapshot::S2C* Response::release_s2c() {
  // @@protoc_insertion_point(field_release:Qot_GetSecuritySnapshot.Response.s2c)
  clear_has_s2c();
  ::Qot_GetSecuritySnapshot::S2C* temp = s2c_;
  s2c_ = NULL;
  return temp;
}
inline ::Qot_GetSecuritySnapshot::S2C* Response::mutable_s2c() {
  set_has_s2c();
  if (s2c_ == NULL) {
    s2c_ = new ::Qot_GetSecuritySnapshot::S2C;
  }
  // @@protoc_insertion_point(field_mutable:Qot_GetSecuritySnapshot.Response.s2c)
  return s2c_;
}
inline void Response::set_allocated_s2c(::Qot_GetSecuritySnapshot::S2C* s2c) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete s2c_;
  }
  if (s2c) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      s2c = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, s2c, submessage_arena);
    }
    set_has_s2c();
  } else {
    clear_has_s2c();
  }
  s2c_ = s2c;
  // @@protoc_insertion_point(field_set_allocated:Qot_GetSecuritySnapshot.Response.s2c)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace Qot_GetSecuritySnapshot

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_Qot_5fGetSecuritySnapshot_2eproto__INCLUDED
