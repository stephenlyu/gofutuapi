// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Qot_GetIpoList.proto

#include "Qot_GetIpoList.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace Qot_GetIpoList {
class BasicIpoDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BasicIpoData>
      _instance;
} _BasicIpoData_default_instance_;
class CNIpoExDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CNIpoExData>
      _instance;
} _CNIpoExData_default_instance_;
class WinningNumDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<WinningNumData>
      _instance;
} _WinningNumData_default_instance_;
class HKIpoExDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HKIpoExData>
      _instance;
} _HKIpoExData_default_instance_;
class USIpoExDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<USIpoExData>
      _instance;
} _USIpoExData_default_instance_;
class IpoDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<IpoData>
      _instance;
} _IpoData_default_instance_;
class C2SDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<C2S>
      _instance;
} _C2S_default_instance_;
class S2CDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2C>
      _instance;
} _S2C_default_instance_;
class RequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Request>
      _instance;
} _Request_default_instance_;
class ResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Response>
      _instance;
} _Response_default_instance_;
}  // namespace Qot_GetIpoList
namespace protobuf_Qot_5fGetIpoList_2eproto {
void InitDefaultsBasicIpoDataImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_Qot_5fCommon_2eproto::InitDefaultsSecurity();
  {
    void* ptr = &::Qot_GetIpoList::_BasicIpoData_default_instance_;
    new (ptr) ::Qot_GetIpoList::BasicIpoData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Qot_GetIpoList::BasicIpoData::InitAsDefaultInstance();
}

void InitDefaultsBasicIpoData() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsBasicIpoDataImpl);
}

void InitDefaultsCNIpoExDataImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_Qot_5fGetIpoList_2eproto::InitDefaultsWinningNumData();
  {
    void* ptr = &::Qot_GetIpoList::_CNIpoExData_default_instance_;
    new (ptr) ::Qot_GetIpoList::CNIpoExData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Qot_GetIpoList::CNIpoExData::InitAsDefaultInstance();
}

void InitDefaultsCNIpoExData() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCNIpoExDataImpl);
}

void InitDefaultsWinningNumDataImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::Qot_GetIpoList::_WinningNumData_default_instance_;
    new (ptr) ::Qot_GetIpoList::WinningNumData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Qot_GetIpoList::WinningNumData::InitAsDefaultInstance();
}

void InitDefaultsWinningNumData() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsWinningNumDataImpl);
}

void InitDefaultsHKIpoExDataImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::Qot_GetIpoList::_HKIpoExData_default_instance_;
    new (ptr) ::Qot_GetIpoList::HKIpoExData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Qot_GetIpoList::HKIpoExData::InitAsDefaultInstance();
}

void InitDefaultsHKIpoExData() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsHKIpoExDataImpl);
}

void InitDefaultsUSIpoExDataImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::Qot_GetIpoList::_USIpoExData_default_instance_;
    new (ptr) ::Qot_GetIpoList::USIpoExData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Qot_GetIpoList::USIpoExData::InitAsDefaultInstance();
}

void InitDefaultsUSIpoExData() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsUSIpoExDataImpl);
}

void InitDefaultsIpoDataImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_Qot_5fGetIpoList_2eproto::InitDefaultsBasicIpoData();
  protobuf_Qot_5fGetIpoList_2eproto::InitDefaultsCNIpoExData();
  protobuf_Qot_5fGetIpoList_2eproto::InitDefaultsHKIpoExData();
  protobuf_Qot_5fGetIpoList_2eproto::InitDefaultsUSIpoExData();
  {
    void* ptr = &::Qot_GetIpoList::_IpoData_default_instance_;
    new (ptr) ::Qot_GetIpoList::IpoData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Qot_GetIpoList::IpoData::InitAsDefaultInstance();
}

void InitDefaultsIpoData() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsIpoDataImpl);
}

void InitDefaultsC2SImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::Qot_GetIpoList::_C2S_default_instance_;
    new (ptr) ::Qot_GetIpoList::C2S();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Qot_GetIpoList::C2S::InitAsDefaultInstance();
}

void InitDefaultsC2S() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsC2SImpl);
}

void InitDefaultsS2CImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_Qot_5fGetIpoList_2eproto::InitDefaultsIpoData();
  {
    void* ptr = &::Qot_GetIpoList::_S2C_default_instance_;
    new (ptr) ::Qot_GetIpoList::S2C();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Qot_GetIpoList::S2C::InitAsDefaultInstance();
}

void InitDefaultsS2C() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsS2CImpl);
}

void InitDefaultsRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_Qot_5fGetIpoList_2eproto::InitDefaultsC2S();
  {
    void* ptr = &::Qot_GetIpoList::_Request_default_instance_;
    new (ptr) ::Qot_GetIpoList::Request();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Qot_GetIpoList::Request::InitAsDefaultInstance();
}

void InitDefaultsRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsRequestImpl);
}

void InitDefaultsResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_Qot_5fGetIpoList_2eproto::InitDefaultsS2C();
  {
    void* ptr = &::Qot_GetIpoList::_Response_default_instance_;
    new (ptr) ::Qot_GetIpoList::Response();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Qot_GetIpoList::Response::InitAsDefaultInstance();
}

void InitDefaultsResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsResponseImpl);
}

::google::protobuf::Metadata file_level_metadata[10];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_GetIpoList::BasicIpoData, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_GetIpoList::BasicIpoData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_GetIpoList::BasicIpoData, security_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_GetIpoList::BasicIpoData, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_GetIpoList::BasicIpoData, listtime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_GetIpoList::BasicIpoData, listtimestamp_),
  2,
  0,
  1,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_GetIpoList::CNIpoExData, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_GetIpoList::CNIpoExData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_GetIpoList::CNIpoExData, applycode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_GetIpoList::CNIpoExData, issuesize_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_GetIpoList::CNIpoExData, onlineissuesize_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_GetIpoList::CNIpoExData, applyupperlimit_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_GetIpoList::CNIpoExData, applylimitmarketvalue_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_GetIpoList::CNIpoExData, isestimateipoprice_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_GetIpoList::CNIpoExData, ipoprice_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_GetIpoList::CNIpoExData, industryperate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_GetIpoList::CNIpoExData, isestimatewinningratio_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_GetIpoList::CNIpoExData, winningratio_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_GetIpoList::CNIpoExData, issueperate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_GetIpoList::CNIpoExData, applytime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_GetIpoList::CNIpoExData, applytimestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_GetIpoList::CNIpoExData, winningtime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_GetIpoList::CNIpoExData, winningtimestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_GetIpoList::CNIpoExData, ishaswon_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_GetIpoList::CNIpoExData, winningnumdata_),
  0,
  3,
  4,
  5,
  6,
  13,
  7,
  8,
  14,
  9,
  10,
  1,
  11,
  2,
  12,
  15,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_GetIpoList::WinningNumData, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_GetIpoList::WinningNumData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_GetIpoList::WinningNumData, winningname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_GetIpoList::WinningNumData, winninginfo_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_GetIpoList::HKIpoExData, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_GetIpoList::HKIpoExData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_GetIpoList::HKIpoExData, ipopricemin_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_GetIpoList::HKIpoExData, ipopricemax_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_GetIpoList::HKIpoExData, listprice_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_GetIpoList::HKIpoExData, lotsize_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_GetIpoList::HKIpoExData, entranceprice_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_GetIpoList::HKIpoExData, issubscribestatus_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_GetIpoList::HKIpoExData, applyendtime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_GetIpoList::HKIpoExData, applyendtimestamp_),
  1,
  2,
  3,
  5,
  4,
  6,
  0,
  7,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_GetIpoList::USIpoExData, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_GetIpoList::USIpoExData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_GetIpoList::USIpoExData, ipopricemin_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_GetIpoList::USIpoExData, ipopricemax_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_GetIpoList::USIpoExData, issuesize_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_GetIpoList::IpoData, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_GetIpoList::IpoData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_GetIpoList::IpoData, basic_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_GetIpoList::IpoData, cnexdata_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_GetIpoList::IpoData, hkexdata_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_GetIpoList::IpoData, usexdata_),
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_GetIpoList::C2S, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_GetIpoList::C2S, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_GetIpoList::C2S, market_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_GetIpoList::S2C, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_GetIpoList::S2C, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_GetIpoList::S2C, ipolist_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_GetIpoList::Request, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_GetIpoList::Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_GetIpoList::Request, c2s_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_GetIpoList::Response, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_GetIpoList::Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_GetIpoList::Response, rettype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_GetIpoList::Response, retmsg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_GetIpoList::Response, errcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_GetIpoList::Response, s2c_),
  3,
  0,
  2,
  1,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 9, sizeof(::Qot_GetIpoList::BasicIpoData)},
  { 13, 35, sizeof(::Qot_GetIpoList::CNIpoExData)},
  { 52, 59, sizeof(::Qot_GetIpoList::WinningNumData)},
  { 61, 74, sizeof(::Qot_GetIpoList::HKIpoExData)},
  { 82, 90, sizeof(::Qot_GetIpoList::USIpoExData)},
  { 93, 102, sizeof(::Qot_GetIpoList::IpoData)},
  { 106, 112, sizeof(::Qot_GetIpoList::C2S)},
  { 113, 119, sizeof(::Qot_GetIpoList::S2C)},
  { 120, 126, sizeof(::Qot_GetIpoList::Request)},
  { 127, 136, sizeof(::Qot_GetIpoList::Response)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::Qot_GetIpoList::_BasicIpoData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Qot_GetIpoList::_CNIpoExData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Qot_GetIpoList::_WinningNumData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Qot_GetIpoList::_HKIpoExData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Qot_GetIpoList::_USIpoExData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Qot_GetIpoList::_IpoData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Qot_GetIpoList::_C2S_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Qot_GetIpoList::_S2C_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Qot_GetIpoList::_Request_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Qot_GetIpoList::_Response_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "Qot_GetIpoList.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 10);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\024Qot_GetIpoList.proto\022\016Qot_GetIpoList\032\014"
      "Common.proto\032\020Qot_Common.proto\"m\n\014BasicI"
      "poData\022&\n\010security\030\001 \002(\0132\024.Qot_Common.Se"
      "curity\022\014\n\004name\030\002 \002(\t\022\020\n\010listTime\030\003 \001(\t\022\025"
      "\n\rlistTimestamp\030\004 \001(\001\"\271\003\n\013CNIpoExData\022\021\n"
      "\tapplyCode\030\001 \002(\t\022\021\n\tissueSize\030\002 \002(\003\022\027\n\017o"
      "nlineIssueSize\030\003 \002(\003\022\027\n\017applyUpperLimit\030"
      "\004 \002(\003\022\035\n\025applyLimitMarketValue\030\005 \002(\003\022\032\n\022"
      "isEstimateIpoPrice\030\006 \002(\010\022\020\n\010ipoPrice\030\007 \002"
      "(\001\022\026\n\016industryPeRate\030\010 \002(\001\022\036\n\026isEstimate"
      "WinningRatio\030\t \002(\010\022\024\n\014winningRatio\030\n \002(\001"
      "\022\023\n\013issuePeRate\030\013 \002(\001\022\021\n\tapplyTime\030\014 \001(\t"
      "\022\026\n\016applyTimestamp\030\r \001(\001\022\023\n\013winningTime\030"
      "\016 \001(\t\022\030\n\020winningTimestamp\030\017 \001(\001\022\020\n\010isHas"
      "Won\030\020 \002(\010\0226\n\016winningNumData\030\021 \003(\0132\036.Qot_"
      "GetIpoList.WinningNumData\":\n\016WinningNumD"
      "ata\022\023\n\013winningName\030\001 \002(\t\022\023\n\013winningInfo\030"
      "\002 \002(\t\"\276\001\n\013HKIpoExData\022\023\n\013ipoPriceMin\030\001 \002"
      "(\001\022\023\n\013ipoPriceMax\030\002 \002(\001\022\021\n\tlistPrice\030\003 \002"
      "(\001\022\017\n\007lotSize\030\004 \002(\005\022\025\n\rentrancePrice\030\005 \002"
      "(\001\022\031\n\021isSubscribeStatus\030\006 \002(\010\022\024\n\014applyEn"
      "dTime\030\007 \001(\t\022\031\n\021applyEndTimestamp\030\010 \001(\001\"J"
      "\n\013USIpoExData\022\023\n\013ipoPriceMin\030\001 \002(\001\022\023\n\013ip"
      "oPriceMax\030\002 \002(\001\022\021\n\tissueSize\030\003 \002(\003\"\303\001\n\007I"
      "poData\022+\n\005basic\030\001 \002(\0132\034.Qot_GetIpoList.B"
      "asicIpoData\022-\n\010cnExData\030\002 \001(\0132\033.Qot_GetI"
      "poList.CNIpoExData\022-\n\010hkExData\030\003 \001(\0132\033.Q"
      "ot_GetIpoList.HKIpoExData\022-\n\010usExData\030\004 "
      "\001(\0132\033.Qot_GetIpoList.USIpoExData\"\025\n\003C2S\022"
      "\016\n\006market\030\001 \002(\005\"/\n\003S2C\022(\n\007ipoList\030\001 \003(\0132"
      "\027.Qot_GetIpoList.IpoData\"+\n\007Request\022 \n\003c"
      "2s\030\001 \002(\0132\023.Qot_GetIpoList.C2S\"d\n\010Respons"
      "e\022\025\n\007retType\030\001 \002(\005:\004-400\022\016\n\006retMsg\030\002 \001(\t"
      "\022\017\n\007errCode\030\003 \001(\005\022 \n\003s2c\030\004 \001(\0132\023.Qot_Get"
      "IpoList.S2CB\025\n\023com.futu.openapi.pb"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1394);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "Qot_GetIpoList.proto", &protobuf_RegisterTypes);
  ::protobuf_Common_2eproto::AddDescriptors();
  ::protobuf_Qot_5fCommon_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_Qot_5fGetIpoList_2eproto
namespace Qot_GetIpoList {

// ===================================================================

void BasicIpoData::InitAsDefaultInstance() {
  ::Qot_GetIpoList::_BasicIpoData_default_instance_._instance.get_mutable()->security_ = const_cast< ::Qot_Common::Security*>(
      ::Qot_Common::Security::internal_default_instance());
}
void BasicIpoData::clear_security() {
  if (security_ != NULL) security_->Clear();
  clear_has_security();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BasicIpoData::kSecurityFieldNumber;
const int BasicIpoData::kNameFieldNumber;
const int BasicIpoData::kListTimeFieldNumber;
const int BasicIpoData::kListTimestampFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BasicIpoData::BasicIpoData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Qot_5fGetIpoList_2eproto::InitDefaultsBasicIpoData();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Qot_GetIpoList.BasicIpoData)
}
BasicIpoData::BasicIpoData(const BasicIpoData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  listtime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_listtime()) {
    listtime_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.listtime_);
  }
  if (from.has_security()) {
    security_ = new ::Qot_Common::Security(*from.security_);
  } else {
    security_ = NULL;
  }
  listtimestamp_ = from.listtimestamp_;
  // @@protoc_insertion_point(copy_constructor:Qot_GetIpoList.BasicIpoData)
}

void BasicIpoData::SharedCtor() {
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  listtime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&security_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&listtimestamp_) -
      reinterpret_cast<char*>(&security_)) + sizeof(listtimestamp_));
}

BasicIpoData::~BasicIpoData() {
  // @@protoc_insertion_point(destructor:Qot_GetIpoList.BasicIpoData)
  SharedDtor();
}

void BasicIpoData::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  listtime_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete security_;
}

void BasicIpoData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BasicIpoData::descriptor() {
  ::protobuf_Qot_5fGetIpoList_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Qot_5fGetIpoList_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BasicIpoData& BasicIpoData::default_instance() {
  ::protobuf_Qot_5fGetIpoList_2eproto::InitDefaultsBasicIpoData();
  return *internal_default_instance();
}

BasicIpoData* BasicIpoData::New(::google::protobuf::Arena* arena) const {
  BasicIpoData* n = new BasicIpoData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BasicIpoData::Clear() {
// @@protoc_insertion_point(message_clear_start:Qot_GetIpoList.BasicIpoData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*name_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!listtime_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*listtime_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(security_ != NULL);
      security_->Clear();
    }
  }
  listtimestamp_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BasicIpoData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Qot_GetIpoList.BasicIpoData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .Qot_Common.Security security = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_security()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "Qot_GetIpoList.BasicIpoData.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string listTime = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_listtime()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->listtime().data(), static_cast<int>(this->listtime().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "Qot_GetIpoList.BasicIpoData.listTime");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double listTimestamp = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u /* 33 & 0xFF */)) {
          set_has_listtimestamp();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &listtimestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Qot_GetIpoList.BasicIpoData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Qot_GetIpoList.BasicIpoData)
  return false;
#undef DO_
}

void BasicIpoData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Qot_GetIpoList.BasicIpoData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .Qot_Common.Security security = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->security_, output);
  }

  // required string name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Qot_GetIpoList.BasicIpoData.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // optional string listTime = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->listtime().data(), static_cast<int>(this->listtime().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Qot_GetIpoList.BasicIpoData.listTime");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->listtime(), output);
  }

  // optional double listTimestamp = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->listtimestamp(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Qot_GetIpoList.BasicIpoData)
}

::google::protobuf::uint8* BasicIpoData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Qot_GetIpoList.BasicIpoData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .Qot_Common.Security security = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->security_, deterministic, target);
  }

  // required string name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Qot_GetIpoList.BasicIpoData.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // optional string listTime = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->listtime().data(), static_cast<int>(this->listtime().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Qot_GetIpoList.BasicIpoData.listTime");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->listtime(), target);
  }

  // optional double listTimestamp = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->listtimestamp(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Qot_GetIpoList.BasicIpoData)
  return target;
}

size_t BasicIpoData::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:Qot_GetIpoList.BasicIpoData)
  size_t total_size = 0;

  if (has_name()) {
    // required string name = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  if (has_security()) {
    // required .Qot_Common.Security security = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->security_);
  }

  return total_size;
}
size_t BasicIpoData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Qot_GetIpoList.BasicIpoData)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000005) ^ 0x00000005) == 0) {  // All required fields are present.
    // required string name = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());

    // required .Qot_Common.Security security = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->security_);

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional string listTime = 3;
  if (has_listtime()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->listtime());
  }

  // optional double listTimestamp = 4;
  if (has_listtimestamp()) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BasicIpoData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Qot_GetIpoList.BasicIpoData)
  GOOGLE_DCHECK_NE(&from, this);
  const BasicIpoData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BasicIpoData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Qot_GetIpoList.BasicIpoData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Qot_GetIpoList.BasicIpoData)
    MergeFrom(*source);
  }
}

void BasicIpoData::MergeFrom(const BasicIpoData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Qot_GetIpoList.BasicIpoData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_listtime();
      listtime_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.listtime_);
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_security()->::Qot_Common::Security::MergeFrom(from.security());
    }
    if (cached_has_bits & 0x00000008u) {
      listtimestamp_ = from.listtimestamp_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void BasicIpoData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Qot_GetIpoList.BasicIpoData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BasicIpoData::CopyFrom(const BasicIpoData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Qot_GetIpoList.BasicIpoData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BasicIpoData::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000005) != 0x00000005) return false;
  if (has_security()) {
    if (!this->security_->IsInitialized()) return false;
  }
  return true;
}

void BasicIpoData::Swap(BasicIpoData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BasicIpoData::InternalSwap(BasicIpoData* other) {
  using std::swap;
  name_.Swap(&other->name_);
  listtime_.Swap(&other->listtime_);
  swap(security_, other->security_);
  swap(listtimestamp_, other->listtimestamp_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BasicIpoData::GetMetadata() const {
  protobuf_Qot_5fGetIpoList_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Qot_5fGetIpoList_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CNIpoExData::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CNIpoExData::kApplyCodeFieldNumber;
const int CNIpoExData::kIssueSizeFieldNumber;
const int CNIpoExData::kOnlineIssueSizeFieldNumber;
const int CNIpoExData::kApplyUpperLimitFieldNumber;
const int CNIpoExData::kApplyLimitMarketValueFieldNumber;
const int CNIpoExData::kIsEstimateIpoPriceFieldNumber;
const int CNIpoExData::kIpoPriceFieldNumber;
const int CNIpoExData::kIndustryPeRateFieldNumber;
const int CNIpoExData::kIsEstimateWinningRatioFieldNumber;
const int CNIpoExData::kWinningRatioFieldNumber;
const int CNIpoExData::kIssuePeRateFieldNumber;
const int CNIpoExData::kApplyTimeFieldNumber;
const int CNIpoExData::kApplyTimestampFieldNumber;
const int CNIpoExData::kWinningTimeFieldNumber;
const int CNIpoExData::kWinningTimestampFieldNumber;
const int CNIpoExData::kIsHasWonFieldNumber;
const int CNIpoExData::kWinningNumDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CNIpoExData::CNIpoExData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Qot_5fGetIpoList_2eproto::InitDefaultsCNIpoExData();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Qot_GetIpoList.CNIpoExData)
}
CNIpoExData::CNIpoExData(const CNIpoExData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      winningnumdata_(from.winningnumdata_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  applycode_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_applycode()) {
    applycode_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.applycode_);
  }
  applytime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_applytime()) {
    applytime_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.applytime_);
  }
  winningtime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_winningtime()) {
    winningtime_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.winningtime_);
  }
  ::memcpy(&issuesize_, &from.issuesize_,
    static_cast<size_t>(reinterpret_cast<char*>(&ishaswon_) -
    reinterpret_cast<char*>(&issuesize_)) + sizeof(ishaswon_));
  // @@protoc_insertion_point(copy_constructor:Qot_GetIpoList.CNIpoExData)
}

void CNIpoExData::SharedCtor() {
  _cached_size_ = 0;
  applycode_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  applytime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  winningtime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&issuesize_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ishaswon_) -
      reinterpret_cast<char*>(&issuesize_)) + sizeof(ishaswon_));
}

CNIpoExData::~CNIpoExData() {
  // @@protoc_insertion_point(destructor:Qot_GetIpoList.CNIpoExData)
  SharedDtor();
}

void CNIpoExData::SharedDtor() {
  applycode_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  applytime_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  winningtime_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CNIpoExData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CNIpoExData::descriptor() {
  ::protobuf_Qot_5fGetIpoList_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Qot_5fGetIpoList_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CNIpoExData& CNIpoExData::default_instance() {
  ::protobuf_Qot_5fGetIpoList_2eproto::InitDefaultsCNIpoExData();
  return *internal_default_instance();
}

CNIpoExData* CNIpoExData::New(::google::protobuf::Arena* arena) const {
  CNIpoExData* n = new CNIpoExData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CNIpoExData::Clear() {
// @@protoc_insertion_point(message_clear_start:Qot_GetIpoList.CNIpoExData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  winningnumdata_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!applycode_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*applycode_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!applytime_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*applytime_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(!winningtime_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*winningtime_.UnsafeRawStringPointer())->clear();
    }
  }
  if (cached_has_bits & 248u) {
    ::memset(&issuesize_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&ipoprice_) -
        reinterpret_cast<char*>(&issuesize_)) + sizeof(ipoprice_));
  }
  if (cached_has_bits & 65280u) {
    ::memset(&industryperate_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&ishaswon_) -
        reinterpret_cast<char*>(&industryperate_)) + sizeof(ishaswon_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CNIpoExData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Qot_GetIpoList.CNIpoExData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string applyCode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_applycode()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->applycode().data(), static_cast<int>(this->applycode().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "Qot_GetIpoList.CNIpoExData.applyCode");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int64 issueSize = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_issuesize();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &issuesize_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int64 onlineIssueSize = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_onlineissuesize();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &onlineissuesize_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int64 applyUpperLimit = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_applyupperlimit();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &applyupperlimit_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int64 applyLimitMarketValue = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_applylimitmarketvalue();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &applylimitmarketvalue_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bool isEstimateIpoPrice = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_isestimateipoprice();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isestimateipoprice_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double ipoPrice = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(57u /* 57 & 0xFF */)) {
          set_has_ipoprice();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &ipoprice_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double industryPeRate = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(65u /* 65 & 0xFF */)) {
          set_has_industryperate();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &industryperate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bool isEstimateWinningRatio = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          set_has_isestimatewinningratio();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isestimatewinningratio_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double winningRatio = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(81u /* 81 & 0xFF */)) {
          set_has_winningratio();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &winningratio_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double issuePeRate = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(89u /* 89 & 0xFF */)) {
          set_has_issueperate();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &issueperate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string applyTime = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_applytime()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->applytime().data(), static_cast<int>(this->applytime().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "Qot_GetIpoList.CNIpoExData.applyTime");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double applyTimestamp = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(105u /* 105 & 0xFF */)) {
          set_has_applytimestamp();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &applytimestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string winningTime = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_winningtime()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->winningtime().data(), static_cast<int>(this->winningtime().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "Qot_GetIpoList.CNIpoExData.winningTime");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double winningTimestamp = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(121u /* 121 & 0xFF */)) {
          set_has_winningtimestamp();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &winningtimestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bool isHasWon = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u /* 128 & 0xFF */)) {
          set_has_ishaswon();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &ishaswon_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .Qot_GetIpoList.WinningNumData winningNumData = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 138 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_winningnumdata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Qot_GetIpoList.CNIpoExData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Qot_GetIpoList.CNIpoExData)
  return false;
#undef DO_
}

void CNIpoExData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Qot_GetIpoList.CNIpoExData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string applyCode = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->applycode().data(), static_cast<int>(this->applycode().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Qot_GetIpoList.CNIpoExData.applyCode");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->applycode(), output);
  }

  // required int64 issueSize = 2;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->issuesize(), output);
  }

  // required int64 onlineIssueSize = 3;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->onlineissuesize(), output);
  }

  // required int64 applyUpperLimit = 4;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->applyupperlimit(), output);
  }

  // required int64 applyLimitMarketValue = 5;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->applylimitmarketvalue(), output);
  }

  // required bool isEstimateIpoPrice = 6;
  if (cached_has_bits & 0x00002000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->isestimateipoprice(), output);
  }

  // required double ipoPrice = 7;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(7, this->ipoprice(), output);
  }

  // required double industryPeRate = 8;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(8, this->industryperate(), output);
  }

  // required bool isEstimateWinningRatio = 9;
  if (cached_has_bits & 0x00004000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(9, this->isestimatewinningratio(), output);
  }

  // required double winningRatio = 10;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(10, this->winningratio(), output);
  }

  // required double issuePeRate = 11;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(11, this->issueperate(), output);
  }

  // optional string applyTime = 12;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->applytime().data(), static_cast<int>(this->applytime().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Qot_GetIpoList.CNIpoExData.applyTime");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->applytime(), output);
  }

  // optional double applyTimestamp = 13;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(13, this->applytimestamp(), output);
  }

  // optional string winningTime = 14;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->winningtime().data(), static_cast<int>(this->winningtime().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Qot_GetIpoList.CNIpoExData.winningTime");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      14, this->winningtime(), output);
  }

  // optional double winningTimestamp = 15;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(15, this->winningtimestamp(), output);
  }

  // required bool isHasWon = 16;
  if (cached_has_bits & 0x00008000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(16, this->ishaswon(), output);
  }

  // repeated .Qot_GetIpoList.WinningNumData winningNumData = 17;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->winningnumdata_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      17, this->winningnumdata(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Qot_GetIpoList.CNIpoExData)
}

::google::protobuf::uint8* CNIpoExData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Qot_GetIpoList.CNIpoExData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string applyCode = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->applycode().data(), static_cast<int>(this->applycode().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Qot_GetIpoList.CNIpoExData.applyCode");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->applycode(), target);
  }

  // required int64 issueSize = 2;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->issuesize(), target);
  }

  // required int64 onlineIssueSize = 3;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->onlineissuesize(), target);
  }

  // required int64 applyUpperLimit = 4;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->applyupperlimit(), target);
  }

  // required int64 applyLimitMarketValue = 5;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->applylimitmarketvalue(), target);
  }

  // required bool isEstimateIpoPrice = 6;
  if (cached_has_bits & 0x00002000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->isestimateipoprice(), target);
  }

  // required double ipoPrice = 7;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(7, this->ipoprice(), target);
  }

  // required double industryPeRate = 8;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(8, this->industryperate(), target);
  }

  // required bool isEstimateWinningRatio = 9;
  if (cached_has_bits & 0x00004000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(9, this->isestimatewinningratio(), target);
  }

  // required double winningRatio = 10;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(10, this->winningratio(), target);
  }

  // required double issuePeRate = 11;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(11, this->issueperate(), target);
  }

  // optional string applyTime = 12;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->applytime().data(), static_cast<int>(this->applytime().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Qot_GetIpoList.CNIpoExData.applyTime");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->applytime(), target);
  }

  // optional double applyTimestamp = 13;
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(13, this->applytimestamp(), target);
  }

  // optional string winningTime = 14;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->winningtime().data(), static_cast<int>(this->winningtime().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Qot_GetIpoList.CNIpoExData.winningTime");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        14, this->winningtime(), target);
  }

  // optional double winningTimestamp = 15;
  if (cached_has_bits & 0x00001000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(15, this->winningtimestamp(), target);
  }

  // required bool isHasWon = 16;
  if (cached_has_bits & 0x00008000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(16, this->ishaswon(), target);
  }

  // repeated .Qot_GetIpoList.WinningNumData winningNumData = 17;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->winningnumdata_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        17, this->winningnumdata(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Qot_GetIpoList.CNIpoExData)
  return target;
}

size_t CNIpoExData::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:Qot_GetIpoList.CNIpoExData)
  size_t total_size = 0;

  if (has_applycode()) {
    // required string applyCode = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->applycode());
  }

  if (has_issuesize()) {
    // required int64 issueSize = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->issuesize());
  }

  if (has_onlineissuesize()) {
    // required int64 onlineIssueSize = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->onlineissuesize());
  }

  if (has_applyupperlimit()) {
    // required int64 applyUpperLimit = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->applyupperlimit());
  }

  if (has_applylimitmarketvalue()) {
    // required int64 applyLimitMarketValue = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->applylimitmarketvalue());
  }

  if (has_ipoprice()) {
    // required double ipoPrice = 7;
    total_size += 1 + 8;
  }

  if (has_industryperate()) {
    // required double industryPeRate = 8;
    total_size += 1 + 8;
  }

  if (has_winningratio()) {
    // required double winningRatio = 10;
    total_size += 1 + 8;
  }

  if (has_issueperate()) {
    // required double issuePeRate = 11;
    total_size += 1 + 8;
  }

  if (has_isestimateipoprice()) {
    // required bool isEstimateIpoPrice = 6;
    total_size += 1 + 1;
  }

  if (has_isestimatewinningratio()) {
    // required bool isEstimateWinningRatio = 9;
    total_size += 1 + 1;
  }

  if (has_ishaswon()) {
    // required bool isHasWon = 16;
    total_size += 2 + 1;
  }

  return total_size;
}
size_t CNIpoExData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Qot_GetIpoList.CNIpoExData)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000e7f9) ^ 0x0000e7f9) == 0) {  // All required fields are present.
    // required string applyCode = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->applycode());

    // required int64 issueSize = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->issuesize());

    // required int64 onlineIssueSize = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->onlineissuesize());

    // required int64 applyUpperLimit = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->applyupperlimit());

    // required int64 applyLimitMarketValue = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->applylimitmarketvalue());

    // required double ipoPrice = 7;
    total_size += 1 + 8;

    // required double industryPeRate = 8;
    total_size += 1 + 8;

    // required double winningRatio = 10;
    total_size += 1 + 8;

    // required double issuePeRate = 11;
    total_size += 1 + 8;

    // required bool isEstimateIpoPrice = 6;
    total_size += 1 + 1;

    // required bool isEstimateWinningRatio = 9;
    total_size += 1 + 1;

    // required bool isHasWon = 16;
    total_size += 2 + 1;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated .Qot_GetIpoList.WinningNumData winningNumData = 17;
  {
    unsigned int count = static_cast<unsigned int>(this->winningnumdata_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->winningnumdata(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 6u) {
    // optional string applyTime = 12;
    if (has_applytime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->applytime());
    }

    // optional string winningTime = 14;
    if (has_winningtime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->winningtime());
    }

  }
  if (_has_bits_[8 / 32] & 6144u) {
    // optional double applyTimestamp = 13;
    if (has_applytimestamp()) {
      total_size += 1 + 8;
    }

    // optional double winningTimestamp = 15;
    if (has_winningtimestamp()) {
      total_size += 1 + 8;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CNIpoExData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Qot_GetIpoList.CNIpoExData)
  GOOGLE_DCHECK_NE(&from, this);
  const CNIpoExData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CNIpoExData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Qot_GetIpoList.CNIpoExData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Qot_GetIpoList.CNIpoExData)
    MergeFrom(*source);
  }
}

void CNIpoExData::MergeFrom(const CNIpoExData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Qot_GetIpoList.CNIpoExData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  winningnumdata_.MergeFrom(from.winningnumdata_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_applycode();
      applycode_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.applycode_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_applytime();
      applytime_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.applytime_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_winningtime();
      winningtime_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.winningtime_);
    }
    if (cached_has_bits & 0x00000008u) {
      issuesize_ = from.issuesize_;
    }
    if (cached_has_bits & 0x00000010u) {
      onlineissuesize_ = from.onlineissuesize_;
    }
    if (cached_has_bits & 0x00000020u) {
      applyupperlimit_ = from.applyupperlimit_;
    }
    if (cached_has_bits & 0x00000040u) {
      applylimitmarketvalue_ = from.applylimitmarketvalue_;
    }
    if (cached_has_bits & 0x00000080u) {
      ipoprice_ = from.ipoprice_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 65280u) {
    if (cached_has_bits & 0x00000100u) {
      industryperate_ = from.industryperate_;
    }
    if (cached_has_bits & 0x00000200u) {
      winningratio_ = from.winningratio_;
    }
    if (cached_has_bits & 0x00000400u) {
      issueperate_ = from.issueperate_;
    }
    if (cached_has_bits & 0x00000800u) {
      applytimestamp_ = from.applytimestamp_;
    }
    if (cached_has_bits & 0x00001000u) {
      winningtimestamp_ = from.winningtimestamp_;
    }
    if (cached_has_bits & 0x00002000u) {
      isestimateipoprice_ = from.isestimateipoprice_;
    }
    if (cached_has_bits & 0x00004000u) {
      isestimatewinningratio_ = from.isestimatewinningratio_;
    }
    if (cached_has_bits & 0x00008000u) {
      ishaswon_ = from.ishaswon_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CNIpoExData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Qot_GetIpoList.CNIpoExData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CNIpoExData::CopyFrom(const CNIpoExData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Qot_GetIpoList.CNIpoExData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CNIpoExData::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000e7f9) != 0x0000e7f9) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->winningnumdata())) return false;
  return true;
}

void CNIpoExData::Swap(CNIpoExData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CNIpoExData::InternalSwap(CNIpoExData* other) {
  using std::swap;
  winningnumdata_.InternalSwap(&other->winningnumdata_);
  applycode_.Swap(&other->applycode_);
  applytime_.Swap(&other->applytime_);
  winningtime_.Swap(&other->winningtime_);
  swap(issuesize_, other->issuesize_);
  swap(onlineissuesize_, other->onlineissuesize_);
  swap(applyupperlimit_, other->applyupperlimit_);
  swap(applylimitmarketvalue_, other->applylimitmarketvalue_);
  swap(ipoprice_, other->ipoprice_);
  swap(industryperate_, other->industryperate_);
  swap(winningratio_, other->winningratio_);
  swap(issueperate_, other->issueperate_);
  swap(applytimestamp_, other->applytimestamp_);
  swap(winningtimestamp_, other->winningtimestamp_);
  swap(isestimateipoprice_, other->isestimateipoprice_);
  swap(isestimatewinningratio_, other->isestimatewinningratio_);
  swap(ishaswon_, other->ishaswon_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CNIpoExData::GetMetadata() const {
  protobuf_Qot_5fGetIpoList_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Qot_5fGetIpoList_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void WinningNumData::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WinningNumData::kWinningNameFieldNumber;
const int WinningNumData::kWinningInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WinningNumData::WinningNumData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Qot_5fGetIpoList_2eproto::InitDefaultsWinningNumData();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Qot_GetIpoList.WinningNumData)
}
WinningNumData::WinningNumData(const WinningNumData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  winningname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_winningname()) {
    winningname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.winningname_);
  }
  winninginfo_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_winninginfo()) {
    winninginfo_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.winninginfo_);
  }
  // @@protoc_insertion_point(copy_constructor:Qot_GetIpoList.WinningNumData)
}

void WinningNumData::SharedCtor() {
  _cached_size_ = 0;
  winningname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  winninginfo_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

WinningNumData::~WinningNumData() {
  // @@protoc_insertion_point(destructor:Qot_GetIpoList.WinningNumData)
  SharedDtor();
}

void WinningNumData::SharedDtor() {
  winningname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  winninginfo_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void WinningNumData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WinningNumData::descriptor() {
  ::protobuf_Qot_5fGetIpoList_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Qot_5fGetIpoList_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const WinningNumData& WinningNumData::default_instance() {
  ::protobuf_Qot_5fGetIpoList_2eproto::InitDefaultsWinningNumData();
  return *internal_default_instance();
}

WinningNumData* WinningNumData::New(::google::protobuf::Arena* arena) const {
  WinningNumData* n = new WinningNumData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void WinningNumData::Clear() {
// @@protoc_insertion_point(message_clear_start:Qot_GetIpoList.WinningNumData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!winningname_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*winningname_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!winninginfo_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*winninginfo_.UnsafeRawStringPointer())->clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool WinningNumData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Qot_GetIpoList.WinningNumData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string winningName = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_winningname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->winningname().data(), static_cast<int>(this->winningname().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "Qot_GetIpoList.WinningNumData.winningName");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string winningInfo = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_winninginfo()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->winninginfo().data(), static_cast<int>(this->winninginfo().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "Qot_GetIpoList.WinningNumData.winningInfo");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Qot_GetIpoList.WinningNumData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Qot_GetIpoList.WinningNumData)
  return false;
#undef DO_
}

void WinningNumData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Qot_GetIpoList.WinningNumData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string winningName = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->winningname().data(), static_cast<int>(this->winningname().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Qot_GetIpoList.WinningNumData.winningName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->winningname(), output);
  }

  // required string winningInfo = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->winninginfo().data(), static_cast<int>(this->winninginfo().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Qot_GetIpoList.WinningNumData.winningInfo");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->winninginfo(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Qot_GetIpoList.WinningNumData)
}

::google::protobuf::uint8* WinningNumData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Qot_GetIpoList.WinningNumData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string winningName = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->winningname().data(), static_cast<int>(this->winningname().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Qot_GetIpoList.WinningNumData.winningName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->winningname(), target);
  }

  // required string winningInfo = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->winninginfo().data(), static_cast<int>(this->winninginfo().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Qot_GetIpoList.WinningNumData.winningInfo");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->winninginfo(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Qot_GetIpoList.WinningNumData)
  return target;
}

size_t WinningNumData::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:Qot_GetIpoList.WinningNumData)
  size_t total_size = 0;

  if (has_winningname()) {
    // required string winningName = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->winningname());
  }

  if (has_winninginfo()) {
    // required string winningInfo = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->winninginfo());
  }

  return total_size;
}
size_t WinningNumData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Qot_GetIpoList.WinningNumData)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string winningName = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->winningname());

    // required string winningInfo = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->winninginfo());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WinningNumData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Qot_GetIpoList.WinningNumData)
  GOOGLE_DCHECK_NE(&from, this);
  const WinningNumData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WinningNumData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Qot_GetIpoList.WinningNumData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Qot_GetIpoList.WinningNumData)
    MergeFrom(*source);
  }
}

void WinningNumData::MergeFrom(const WinningNumData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Qot_GetIpoList.WinningNumData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_winningname();
      winningname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.winningname_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_winninginfo();
      winninginfo_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.winninginfo_);
    }
  }
}

void WinningNumData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Qot_GetIpoList.WinningNumData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WinningNumData::CopyFrom(const WinningNumData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Qot_GetIpoList.WinningNumData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WinningNumData::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void WinningNumData::Swap(WinningNumData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WinningNumData::InternalSwap(WinningNumData* other) {
  using std::swap;
  winningname_.Swap(&other->winningname_);
  winninginfo_.Swap(&other->winninginfo_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata WinningNumData::GetMetadata() const {
  protobuf_Qot_5fGetIpoList_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Qot_5fGetIpoList_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void HKIpoExData::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HKIpoExData::kIpoPriceMinFieldNumber;
const int HKIpoExData::kIpoPriceMaxFieldNumber;
const int HKIpoExData::kListPriceFieldNumber;
const int HKIpoExData::kLotSizeFieldNumber;
const int HKIpoExData::kEntrancePriceFieldNumber;
const int HKIpoExData::kIsSubscribeStatusFieldNumber;
const int HKIpoExData::kApplyEndTimeFieldNumber;
const int HKIpoExData::kApplyEndTimestampFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HKIpoExData::HKIpoExData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Qot_5fGetIpoList_2eproto::InitDefaultsHKIpoExData();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Qot_GetIpoList.HKIpoExData)
}
HKIpoExData::HKIpoExData(const HKIpoExData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  applyendtime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_applyendtime()) {
    applyendtime_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.applyendtime_);
  }
  ::memcpy(&ipopricemin_, &from.ipopricemin_,
    static_cast<size_t>(reinterpret_cast<char*>(&applyendtimestamp_) -
    reinterpret_cast<char*>(&ipopricemin_)) + sizeof(applyendtimestamp_));
  // @@protoc_insertion_point(copy_constructor:Qot_GetIpoList.HKIpoExData)
}

void HKIpoExData::SharedCtor() {
  _cached_size_ = 0;
  applyendtime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&ipopricemin_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&applyendtimestamp_) -
      reinterpret_cast<char*>(&ipopricemin_)) + sizeof(applyendtimestamp_));
}

HKIpoExData::~HKIpoExData() {
  // @@protoc_insertion_point(destructor:Qot_GetIpoList.HKIpoExData)
  SharedDtor();
}

void HKIpoExData::SharedDtor() {
  applyendtime_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void HKIpoExData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HKIpoExData::descriptor() {
  ::protobuf_Qot_5fGetIpoList_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Qot_5fGetIpoList_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HKIpoExData& HKIpoExData::default_instance() {
  ::protobuf_Qot_5fGetIpoList_2eproto::InitDefaultsHKIpoExData();
  return *internal_default_instance();
}

HKIpoExData* HKIpoExData::New(::google::protobuf::Arena* arena) const {
  HKIpoExData* n = new HKIpoExData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HKIpoExData::Clear() {
// @@protoc_insertion_point(message_clear_start:Qot_GetIpoList.HKIpoExData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!applyendtime_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*applyendtime_.UnsafeRawStringPointer())->clear();
  }
  if (cached_has_bits & 254u) {
    ::memset(&ipopricemin_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&applyendtimestamp_) -
        reinterpret_cast<char*>(&ipopricemin_)) + sizeof(applyendtimestamp_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool HKIpoExData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Qot_GetIpoList.HKIpoExData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required double ipoPriceMin = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_ipopricemin();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &ipopricemin_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double ipoPriceMax = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          set_has_ipopricemax();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &ipopricemax_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double listPrice = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {
          set_has_listprice();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &listprice_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 lotSize = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_lotsize();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &lotsize_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double entrancePrice = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(41u /* 41 & 0xFF */)) {
          set_has_entranceprice();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &entranceprice_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bool isSubscribeStatus = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_issubscribestatus();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &issubscribestatus_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string applyEndTime = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_applyendtime()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->applyendtime().data(), static_cast<int>(this->applyendtime().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "Qot_GetIpoList.HKIpoExData.applyEndTime");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double applyEndTimestamp = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(65u /* 65 & 0xFF */)) {
          set_has_applyendtimestamp();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &applyendtimestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Qot_GetIpoList.HKIpoExData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Qot_GetIpoList.HKIpoExData)
  return false;
#undef DO_
}

void HKIpoExData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Qot_GetIpoList.HKIpoExData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required double ipoPriceMin = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->ipopricemin(), output);
  }

  // required double ipoPriceMax = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->ipopricemax(), output);
  }

  // required double listPrice = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->listprice(), output);
  }

  // required int32 lotSize = 4;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->lotsize(), output);
  }

  // required double entrancePrice = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->entranceprice(), output);
  }

  // required bool isSubscribeStatus = 6;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->issubscribestatus(), output);
  }

  // optional string applyEndTime = 7;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->applyendtime().data(), static_cast<int>(this->applyendtime().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Qot_GetIpoList.HKIpoExData.applyEndTime");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->applyendtime(), output);
  }

  // optional double applyEndTimestamp = 8;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(8, this->applyendtimestamp(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Qot_GetIpoList.HKIpoExData)
}

::google::protobuf::uint8* HKIpoExData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Qot_GetIpoList.HKIpoExData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required double ipoPriceMin = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->ipopricemin(), target);
  }

  // required double ipoPriceMax = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->ipopricemax(), target);
  }

  // required double listPrice = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->listprice(), target);
  }

  // required int32 lotSize = 4;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->lotsize(), target);
  }

  // required double entrancePrice = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->entranceprice(), target);
  }

  // required bool isSubscribeStatus = 6;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->issubscribestatus(), target);
  }

  // optional string applyEndTime = 7;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->applyendtime().data(), static_cast<int>(this->applyendtime().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Qot_GetIpoList.HKIpoExData.applyEndTime");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->applyendtime(), target);
  }

  // optional double applyEndTimestamp = 8;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(8, this->applyendtimestamp(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Qot_GetIpoList.HKIpoExData)
  return target;
}

size_t HKIpoExData::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:Qot_GetIpoList.HKIpoExData)
  size_t total_size = 0;

  if (has_ipopricemin()) {
    // required double ipoPriceMin = 1;
    total_size += 1 + 8;
  }

  if (has_ipopricemax()) {
    // required double ipoPriceMax = 2;
    total_size += 1 + 8;
  }

  if (has_listprice()) {
    // required double listPrice = 3;
    total_size += 1 + 8;
  }

  if (has_entranceprice()) {
    // required double entrancePrice = 5;
    total_size += 1 + 8;
  }

  if (has_lotsize()) {
    // required int32 lotSize = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->lotsize());
  }

  if (has_issubscribestatus()) {
    // required bool isSubscribeStatus = 6;
    total_size += 1 + 1;
  }

  return total_size;
}
size_t HKIpoExData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Qot_GetIpoList.HKIpoExData)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000007e) ^ 0x0000007e) == 0) {  // All required fields are present.
    // required double ipoPriceMin = 1;
    total_size += 1 + 8;

    // required double ipoPriceMax = 2;
    total_size += 1 + 8;

    // required double listPrice = 3;
    total_size += 1 + 8;

    // required double entrancePrice = 5;
    total_size += 1 + 8;

    // required int32 lotSize = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->lotsize());

    // required bool isSubscribeStatus = 6;
    total_size += 1 + 1;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional string applyEndTime = 7;
  if (has_applyendtime()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->applyendtime());
  }

  // optional double applyEndTimestamp = 8;
  if (has_applyendtimestamp()) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HKIpoExData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Qot_GetIpoList.HKIpoExData)
  GOOGLE_DCHECK_NE(&from, this);
  const HKIpoExData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HKIpoExData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Qot_GetIpoList.HKIpoExData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Qot_GetIpoList.HKIpoExData)
    MergeFrom(*source);
  }
}

void HKIpoExData::MergeFrom(const HKIpoExData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Qot_GetIpoList.HKIpoExData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_applyendtime();
      applyendtime_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.applyendtime_);
    }
    if (cached_has_bits & 0x00000002u) {
      ipopricemin_ = from.ipopricemin_;
    }
    if (cached_has_bits & 0x00000004u) {
      ipopricemax_ = from.ipopricemax_;
    }
    if (cached_has_bits & 0x00000008u) {
      listprice_ = from.listprice_;
    }
    if (cached_has_bits & 0x00000010u) {
      entranceprice_ = from.entranceprice_;
    }
    if (cached_has_bits & 0x00000020u) {
      lotsize_ = from.lotsize_;
    }
    if (cached_has_bits & 0x00000040u) {
      issubscribestatus_ = from.issubscribestatus_;
    }
    if (cached_has_bits & 0x00000080u) {
      applyendtimestamp_ = from.applyendtimestamp_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void HKIpoExData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Qot_GetIpoList.HKIpoExData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HKIpoExData::CopyFrom(const HKIpoExData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Qot_GetIpoList.HKIpoExData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HKIpoExData::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000007e) != 0x0000007e) return false;
  return true;
}

void HKIpoExData::Swap(HKIpoExData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HKIpoExData::InternalSwap(HKIpoExData* other) {
  using std::swap;
  applyendtime_.Swap(&other->applyendtime_);
  swap(ipopricemin_, other->ipopricemin_);
  swap(ipopricemax_, other->ipopricemax_);
  swap(listprice_, other->listprice_);
  swap(entranceprice_, other->entranceprice_);
  swap(lotsize_, other->lotsize_);
  swap(issubscribestatus_, other->issubscribestatus_);
  swap(applyendtimestamp_, other->applyendtimestamp_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HKIpoExData::GetMetadata() const {
  protobuf_Qot_5fGetIpoList_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Qot_5fGetIpoList_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void USIpoExData::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int USIpoExData::kIpoPriceMinFieldNumber;
const int USIpoExData::kIpoPriceMaxFieldNumber;
const int USIpoExData::kIssueSizeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

USIpoExData::USIpoExData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Qot_5fGetIpoList_2eproto::InitDefaultsUSIpoExData();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Qot_GetIpoList.USIpoExData)
}
USIpoExData::USIpoExData(const USIpoExData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&ipopricemin_, &from.ipopricemin_,
    static_cast<size_t>(reinterpret_cast<char*>(&issuesize_) -
    reinterpret_cast<char*>(&ipopricemin_)) + sizeof(issuesize_));
  // @@protoc_insertion_point(copy_constructor:Qot_GetIpoList.USIpoExData)
}

void USIpoExData::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&ipopricemin_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&issuesize_) -
      reinterpret_cast<char*>(&ipopricemin_)) + sizeof(issuesize_));
}

USIpoExData::~USIpoExData() {
  // @@protoc_insertion_point(destructor:Qot_GetIpoList.USIpoExData)
  SharedDtor();
}

void USIpoExData::SharedDtor() {
}

void USIpoExData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* USIpoExData::descriptor() {
  ::protobuf_Qot_5fGetIpoList_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Qot_5fGetIpoList_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const USIpoExData& USIpoExData::default_instance() {
  ::protobuf_Qot_5fGetIpoList_2eproto::InitDefaultsUSIpoExData();
  return *internal_default_instance();
}

USIpoExData* USIpoExData::New(::google::protobuf::Arena* arena) const {
  USIpoExData* n = new USIpoExData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void USIpoExData::Clear() {
// @@protoc_insertion_point(message_clear_start:Qot_GetIpoList.USIpoExData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&ipopricemin_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&issuesize_) -
        reinterpret_cast<char*>(&ipopricemin_)) + sizeof(issuesize_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool USIpoExData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Qot_GetIpoList.USIpoExData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required double ipoPriceMin = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_ipopricemin();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &ipopricemin_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double ipoPriceMax = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          set_has_ipopricemax();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &ipopricemax_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int64 issueSize = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_issuesize();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &issuesize_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Qot_GetIpoList.USIpoExData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Qot_GetIpoList.USIpoExData)
  return false;
#undef DO_
}

void USIpoExData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Qot_GetIpoList.USIpoExData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required double ipoPriceMin = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->ipopricemin(), output);
  }

  // required double ipoPriceMax = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->ipopricemax(), output);
  }

  // required int64 issueSize = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->issuesize(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Qot_GetIpoList.USIpoExData)
}

::google::protobuf::uint8* USIpoExData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Qot_GetIpoList.USIpoExData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required double ipoPriceMin = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->ipopricemin(), target);
  }

  // required double ipoPriceMax = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->ipopricemax(), target);
  }

  // required int64 issueSize = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->issuesize(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Qot_GetIpoList.USIpoExData)
  return target;
}

size_t USIpoExData::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:Qot_GetIpoList.USIpoExData)
  size_t total_size = 0;

  if (has_ipopricemin()) {
    // required double ipoPriceMin = 1;
    total_size += 1 + 8;
  }

  if (has_ipopricemax()) {
    // required double ipoPriceMax = 2;
    total_size += 1 + 8;
  }

  if (has_issuesize()) {
    // required int64 issueSize = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->issuesize());
  }

  return total_size;
}
size_t USIpoExData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Qot_GetIpoList.USIpoExData)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required double ipoPriceMin = 1;
    total_size += 1 + 8;

    // required double ipoPriceMax = 2;
    total_size += 1 + 8;

    // required int64 issueSize = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->issuesize());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void USIpoExData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Qot_GetIpoList.USIpoExData)
  GOOGLE_DCHECK_NE(&from, this);
  const USIpoExData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const USIpoExData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Qot_GetIpoList.USIpoExData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Qot_GetIpoList.USIpoExData)
    MergeFrom(*source);
  }
}

void USIpoExData::MergeFrom(const USIpoExData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Qot_GetIpoList.USIpoExData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      ipopricemin_ = from.ipopricemin_;
    }
    if (cached_has_bits & 0x00000002u) {
      ipopricemax_ = from.ipopricemax_;
    }
    if (cached_has_bits & 0x00000004u) {
      issuesize_ = from.issuesize_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void USIpoExData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Qot_GetIpoList.USIpoExData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void USIpoExData::CopyFrom(const USIpoExData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Qot_GetIpoList.USIpoExData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool USIpoExData::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  return true;
}

void USIpoExData::Swap(USIpoExData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void USIpoExData::InternalSwap(USIpoExData* other) {
  using std::swap;
  swap(ipopricemin_, other->ipopricemin_);
  swap(ipopricemax_, other->ipopricemax_);
  swap(issuesize_, other->issuesize_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata USIpoExData::GetMetadata() const {
  protobuf_Qot_5fGetIpoList_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Qot_5fGetIpoList_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void IpoData::InitAsDefaultInstance() {
  ::Qot_GetIpoList::_IpoData_default_instance_._instance.get_mutable()->basic_ = const_cast< ::Qot_GetIpoList::BasicIpoData*>(
      ::Qot_GetIpoList::BasicIpoData::internal_default_instance());
  ::Qot_GetIpoList::_IpoData_default_instance_._instance.get_mutable()->cnexdata_ = const_cast< ::Qot_GetIpoList::CNIpoExData*>(
      ::Qot_GetIpoList::CNIpoExData::internal_default_instance());
  ::Qot_GetIpoList::_IpoData_default_instance_._instance.get_mutable()->hkexdata_ = const_cast< ::Qot_GetIpoList::HKIpoExData*>(
      ::Qot_GetIpoList::HKIpoExData::internal_default_instance());
  ::Qot_GetIpoList::_IpoData_default_instance_._instance.get_mutable()->usexdata_ = const_cast< ::Qot_GetIpoList::USIpoExData*>(
      ::Qot_GetIpoList::USIpoExData::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int IpoData::kBasicFieldNumber;
const int IpoData::kCnExDataFieldNumber;
const int IpoData::kHkExDataFieldNumber;
const int IpoData::kUsExDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

IpoData::IpoData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Qot_5fGetIpoList_2eproto::InitDefaultsIpoData();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Qot_GetIpoList.IpoData)
}
IpoData::IpoData(const IpoData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_basic()) {
    basic_ = new ::Qot_GetIpoList::BasicIpoData(*from.basic_);
  } else {
    basic_ = NULL;
  }
  if (from.has_cnexdata()) {
    cnexdata_ = new ::Qot_GetIpoList::CNIpoExData(*from.cnexdata_);
  } else {
    cnexdata_ = NULL;
  }
  if (from.has_hkexdata()) {
    hkexdata_ = new ::Qot_GetIpoList::HKIpoExData(*from.hkexdata_);
  } else {
    hkexdata_ = NULL;
  }
  if (from.has_usexdata()) {
    usexdata_ = new ::Qot_GetIpoList::USIpoExData(*from.usexdata_);
  } else {
    usexdata_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:Qot_GetIpoList.IpoData)
}

void IpoData::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&basic_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&usexdata_) -
      reinterpret_cast<char*>(&basic_)) + sizeof(usexdata_));
}

IpoData::~IpoData() {
  // @@protoc_insertion_point(destructor:Qot_GetIpoList.IpoData)
  SharedDtor();
}

void IpoData::SharedDtor() {
  if (this != internal_default_instance()) delete basic_;
  if (this != internal_default_instance()) delete cnexdata_;
  if (this != internal_default_instance()) delete hkexdata_;
  if (this != internal_default_instance()) delete usexdata_;
}

void IpoData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* IpoData::descriptor() {
  ::protobuf_Qot_5fGetIpoList_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Qot_5fGetIpoList_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const IpoData& IpoData::default_instance() {
  ::protobuf_Qot_5fGetIpoList_2eproto::InitDefaultsIpoData();
  return *internal_default_instance();
}

IpoData* IpoData::New(::google::protobuf::Arena* arena) const {
  IpoData* n = new IpoData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void IpoData::Clear() {
// @@protoc_insertion_point(message_clear_start:Qot_GetIpoList.IpoData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(basic_ != NULL);
      basic_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(cnexdata_ != NULL);
      cnexdata_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(hkexdata_ != NULL);
      hkexdata_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(usexdata_ != NULL);
      usexdata_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool IpoData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Qot_GetIpoList.IpoData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .Qot_GetIpoList.BasicIpoData basic = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_basic()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .Qot_GetIpoList.CNIpoExData cnExData = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_cnexdata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .Qot_GetIpoList.HKIpoExData hkExData = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_hkexdata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .Qot_GetIpoList.USIpoExData usExData = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_usexdata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Qot_GetIpoList.IpoData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Qot_GetIpoList.IpoData)
  return false;
#undef DO_
}

void IpoData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Qot_GetIpoList.IpoData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .Qot_GetIpoList.BasicIpoData basic = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->basic_, output);
  }

  // optional .Qot_GetIpoList.CNIpoExData cnExData = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->cnexdata_, output);
  }

  // optional .Qot_GetIpoList.HKIpoExData hkExData = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->hkexdata_, output);
  }

  // optional .Qot_GetIpoList.USIpoExData usExData = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->usexdata_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Qot_GetIpoList.IpoData)
}

::google::protobuf::uint8* IpoData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Qot_GetIpoList.IpoData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .Qot_GetIpoList.BasicIpoData basic = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->basic_, deterministic, target);
  }

  // optional .Qot_GetIpoList.CNIpoExData cnExData = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->cnexdata_, deterministic, target);
  }

  // optional .Qot_GetIpoList.HKIpoExData hkExData = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *this->hkexdata_, deterministic, target);
  }

  // optional .Qot_GetIpoList.USIpoExData usExData = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, *this->usexdata_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Qot_GetIpoList.IpoData)
  return target;
}

size_t IpoData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Qot_GetIpoList.IpoData)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required .Qot_GetIpoList.BasicIpoData basic = 1;
  if (has_basic()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->basic_);
  }
  if (_has_bits_[0 / 32] & 14u) {
    // optional .Qot_GetIpoList.CNIpoExData cnExData = 2;
    if (has_cnexdata()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *this->cnexdata_);
    }

    // optional .Qot_GetIpoList.HKIpoExData hkExData = 3;
    if (has_hkexdata()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *this->hkexdata_);
    }

    // optional .Qot_GetIpoList.USIpoExData usExData = 4;
    if (has_usexdata()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *this->usexdata_);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void IpoData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Qot_GetIpoList.IpoData)
  GOOGLE_DCHECK_NE(&from, this);
  const IpoData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const IpoData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Qot_GetIpoList.IpoData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Qot_GetIpoList.IpoData)
    MergeFrom(*source);
  }
}

void IpoData::MergeFrom(const IpoData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Qot_GetIpoList.IpoData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_basic()->::Qot_GetIpoList::BasicIpoData::MergeFrom(from.basic());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_cnexdata()->::Qot_GetIpoList::CNIpoExData::MergeFrom(from.cnexdata());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_hkexdata()->::Qot_GetIpoList::HKIpoExData::MergeFrom(from.hkexdata());
    }
    if (cached_has_bits & 0x00000008u) {
      mutable_usexdata()->::Qot_GetIpoList::USIpoExData::MergeFrom(from.usexdata());
    }
  }
}

void IpoData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Qot_GetIpoList.IpoData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IpoData::CopyFrom(const IpoData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Qot_GetIpoList.IpoData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IpoData::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (has_basic()) {
    if (!this->basic_->IsInitialized()) return false;
  }
  if (has_cnexdata()) {
    if (!this->cnexdata_->IsInitialized()) return false;
  }
  if (has_hkexdata()) {
    if (!this->hkexdata_->IsInitialized()) return false;
  }
  if (has_usexdata()) {
    if (!this->usexdata_->IsInitialized()) return false;
  }
  return true;
}

void IpoData::Swap(IpoData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void IpoData::InternalSwap(IpoData* other) {
  using std::swap;
  swap(basic_, other->basic_);
  swap(cnexdata_, other->cnexdata_);
  swap(hkexdata_, other->hkexdata_);
  swap(usexdata_, other->usexdata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata IpoData::GetMetadata() const {
  protobuf_Qot_5fGetIpoList_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Qot_5fGetIpoList_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void C2S::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int C2S::kMarketFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

C2S::C2S()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Qot_5fGetIpoList_2eproto::InitDefaultsC2S();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Qot_GetIpoList.C2S)
}
C2S::C2S(const C2S& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  market_ = from.market_;
  // @@protoc_insertion_point(copy_constructor:Qot_GetIpoList.C2S)
}

void C2S::SharedCtor() {
  _cached_size_ = 0;
  market_ = 0;
}

C2S::~C2S() {
  // @@protoc_insertion_point(destructor:Qot_GetIpoList.C2S)
  SharedDtor();
}

void C2S::SharedDtor() {
}

void C2S::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* C2S::descriptor() {
  ::protobuf_Qot_5fGetIpoList_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Qot_5fGetIpoList_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const C2S& C2S::default_instance() {
  ::protobuf_Qot_5fGetIpoList_2eproto::InitDefaultsC2S();
  return *internal_default_instance();
}

C2S* C2S::New(::google::protobuf::Arena* arena) const {
  C2S* n = new C2S;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void C2S::Clear() {
// @@protoc_insertion_point(message_clear_start:Qot_GetIpoList.C2S)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  market_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool C2S::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Qot_GetIpoList.C2S)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 market = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_market();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &market_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Qot_GetIpoList.C2S)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Qot_GetIpoList.C2S)
  return false;
#undef DO_
}

void C2S::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Qot_GetIpoList.C2S)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 market = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->market(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Qot_GetIpoList.C2S)
}

::google::protobuf::uint8* C2S::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Qot_GetIpoList.C2S)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 market = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->market(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Qot_GetIpoList.C2S)
  return target;
}

size_t C2S::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Qot_GetIpoList.C2S)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int32 market = 1;
  if (has_market()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->market());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void C2S::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Qot_GetIpoList.C2S)
  GOOGLE_DCHECK_NE(&from, this);
  const C2S* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const C2S>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Qot_GetIpoList.C2S)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Qot_GetIpoList.C2S)
    MergeFrom(*source);
  }
}

void C2S::MergeFrom(const C2S& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Qot_GetIpoList.C2S)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_market()) {
    set_market(from.market());
  }
}

void C2S::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Qot_GetIpoList.C2S)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2S::CopyFrom(const C2S& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Qot_GetIpoList.C2S)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2S::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void C2S::Swap(C2S* other) {
  if (other == this) return;
  InternalSwap(other);
}
void C2S::InternalSwap(C2S* other) {
  using std::swap;
  swap(market_, other->market_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata C2S::GetMetadata() const {
  protobuf_Qot_5fGetIpoList_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Qot_5fGetIpoList_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2C::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2C::kIpoListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2C::S2C()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Qot_5fGetIpoList_2eproto::InitDefaultsS2C();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Qot_GetIpoList.S2C)
}
S2C::S2C(const S2C& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      ipolist_(from.ipolist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Qot_GetIpoList.S2C)
}

void S2C::SharedCtor() {
  _cached_size_ = 0;
}

S2C::~S2C() {
  // @@protoc_insertion_point(destructor:Qot_GetIpoList.S2C)
  SharedDtor();
}

void S2C::SharedDtor() {
}

void S2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* S2C::descriptor() {
  ::protobuf_Qot_5fGetIpoList_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Qot_5fGetIpoList_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2C& S2C::default_instance() {
  ::protobuf_Qot_5fGetIpoList_2eproto::InitDefaultsS2C();
  return *internal_default_instance();
}

S2C* S2C::New(::google::protobuf::Arena* arena) const {
  S2C* n = new S2C;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void S2C::Clear() {
// @@protoc_insertion_point(message_clear_start:Qot_GetIpoList.S2C)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ipolist_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool S2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Qot_GetIpoList.S2C)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .Qot_GetIpoList.IpoData ipoList = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_ipolist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Qot_GetIpoList.S2C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Qot_GetIpoList.S2C)
  return false;
#undef DO_
}

void S2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Qot_GetIpoList.S2C)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .Qot_GetIpoList.IpoData ipoList = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->ipolist_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->ipolist(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Qot_GetIpoList.S2C)
}

::google::protobuf::uint8* S2C::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Qot_GetIpoList.S2C)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .Qot_GetIpoList.IpoData ipoList = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->ipolist_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->ipolist(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Qot_GetIpoList.S2C)
  return target;
}

size_t S2C::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Qot_GetIpoList.S2C)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .Qot_GetIpoList.IpoData ipoList = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->ipolist_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->ipolist(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void S2C::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Qot_GetIpoList.S2C)
  GOOGLE_DCHECK_NE(&from, this);
  const S2C* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2C>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Qot_GetIpoList.S2C)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Qot_GetIpoList.S2C)
    MergeFrom(*source);
  }
}

void S2C::MergeFrom(const S2C& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Qot_GetIpoList.S2C)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  ipolist_.MergeFrom(from.ipolist_);
}

void S2C::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Qot_GetIpoList.S2C)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2C::CopyFrom(const S2C& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Qot_GetIpoList.S2C)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2C::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->ipolist())) return false;
  return true;
}

void S2C::Swap(S2C* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2C::InternalSwap(S2C* other) {
  using std::swap;
  ipolist_.InternalSwap(&other->ipolist_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata S2C::GetMetadata() const {
  protobuf_Qot_5fGetIpoList_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Qot_5fGetIpoList_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Request::InitAsDefaultInstance() {
  ::Qot_GetIpoList::_Request_default_instance_._instance.get_mutable()->c2s_ = const_cast< ::Qot_GetIpoList::C2S*>(
      ::Qot_GetIpoList::C2S::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Request::kC2SFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Request::Request()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Qot_5fGetIpoList_2eproto::InitDefaultsRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Qot_GetIpoList.Request)
}
Request::Request(const Request& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_c2s()) {
    c2s_ = new ::Qot_GetIpoList::C2S(*from.c2s_);
  } else {
    c2s_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:Qot_GetIpoList.Request)
}

void Request::SharedCtor() {
  _cached_size_ = 0;
  c2s_ = NULL;
}

Request::~Request() {
  // @@protoc_insertion_point(destructor:Qot_GetIpoList.Request)
  SharedDtor();
}

void Request::SharedDtor() {
  if (this != internal_default_instance()) delete c2s_;
}

void Request::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Request::descriptor() {
  ::protobuf_Qot_5fGetIpoList_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Qot_5fGetIpoList_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Request& Request::default_instance() {
  ::protobuf_Qot_5fGetIpoList_2eproto::InitDefaultsRequest();
  return *internal_default_instance();
}

Request* Request::New(::google::protobuf::Arena* arena) const {
  Request* n = new Request;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Request::Clear() {
// @@protoc_insertion_point(message_clear_start:Qot_GetIpoList.Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(c2s_ != NULL);
    c2s_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Qot_GetIpoList.Request)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .Qot_GetIpoList.C2S c2s = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_c2s()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Qot_GetIpoList.Request)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Qot_GetIpoList.Request)
  return false;
#undef DO_
}

void Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Qot_GetIpoList.Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .Qot_GetIpoList.C2S c2s = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->c2s_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Qot_GetIpoList.Request)
}

::google::protobuf::uint8* Request::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Qot_GetIpoList.Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .Qot_GetIpoList.C2S c2s = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->c2s_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Qot_GetIpoList.Request)
  return target;
}

size_t Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Qot_GetIpoList.Request)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required .Qot_GetIpoList.C2S c2s = 1;
  if (has_c2s()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->c2s_);
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Request::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Qot_GetIpoList.Request)
  GOOGLE_DCHECK_NE(&from, this);
  const Request* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Request>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Qot_GetIpoList.Request)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Qot_GetIpoList.Request)
    MergeFrom(*source);
  }
}

void Request::MergeFrom(const Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Qot_GetIpoList.Request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_c2s()) {
    mutable_c2s()->::Qot_GetIpoList::C2S::MergeFrom(from.c2s());
  }
}

void Request::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Qot_GetIpoList.Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Request::CopyFrom(const Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Qot_GetIpoList.Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Request::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (has_c2s()) {
    if (!this->c2s_->IsInitialized()) return false;
  }
  return true;
}

void Request::Swap(Request* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Request::InternalSwap(Request* other) {
  using std::swap;
  swap(c2s_, other->c2s_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Request::GetMetadata() const {
  protobuf_Qot_5fGetIpoList_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Qot_5fGetIpoList_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Response::InitAsDefaultInstance() {
  ::Qot_GetIpoList::_Response_default_instance_._instance.get_mutable()->s2c_ = const_cast< ::Qot_GetIpoList::S2C*>(
      ::Qot_GetIpoList::S2C::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Response::kRetTypeFieldNumber;
const int Response::kRetMsgFieldNumber;
const int Response::kErrCodeFieldNumber;
const int Response::kS2CFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Response::Response()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Qot_5fGetIpoList_2eproto::InitDefaultsResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Qot_GetIpoList.Response)
}
Response::Response(const Response& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  retmsg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_retmsg()) {
    retmsg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.retmsg_);
  }
  if (from.has_s2c()) {
    s2c_ = new ::Qot_GetIpoList::S2C(*from.s2c_);
  } else {
    s2c_ = NULL;
  }
  ::memcpy(&errcode_, &from.errcode_,
    static_cast<size_t>(reinterpret_cast<char*>(&rettype_) -
    reinterpret_cast<char*>(&errcode_)) + sizeof(rettype_));
  // @@protoc_insertion_point(copy_constructor:Qot_GetIpoList.Response)
}

void Response::SharedCtor() {
  _cached_size_ = 0;
  retmsg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&s2c_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&errcode_) -
      reinterpret_cast<char*>(&s2c_)) + sizeof(errcode_));
  rettype_ = -400;
}

Response::~Response() {
  // @@protoc_insertion_point(destructor:Qot_GetIpoList.Response)
  SharedDtor();
}

void Response::SharedDtor() {
  retmsg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete s2c_;
}

void Response::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Response::descriptor() {
  ::protobuf_Qot_5fGetIpoList_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Qot_5fGetIpoList_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Response& Response::default_instance() {
  ::protobuf_Qot_5fGetIpoList_2eproto::InitDefaultsResponse();
  return *internal_default_instance();
}

Response* Response::New(::google::protobuf::Arena* arena) const {
  Response* n = new Response;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Response::Clear() {
// @@protoc_insertion_point(message_clear_start:Qot_GetIpoList.Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!retmsg_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*retmsg_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(s2c_ != NULL);
      s2c_->Clear();
    }
  }
  if (cached_has_bits & 12u) {
    errcode_ = 0;
    rettype_ = -400;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Qot_GetIpoList.Response)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 retType = 1 [default = -400];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_rettype();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rettype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string retMsg = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_retmsg()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->retmsg().data(), static_cast<int>(this->retmsg().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "Qot_GetIpoList.Response.retMsg");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 errCode = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_errcode();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &errcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .Qot_GetIpoList.S2C s2c = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_s2c()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Qot_GetIpoList.Response)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Qot_GetIpoList.Response)
  return false;
#undef DO_
}

void Response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Qot_GetIpoList.Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 retType = 1 [default = -400];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->rettype(), output);
  }

  // optional string retMsg = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->retmsg().data(), static_cast<int>(this->retmsg().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Qot_GetIpoList.Response.retMsg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->retmsg(), output);
  }

  // optional int32 errCode = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->errcode(), output);
  }

  // optional .Qot_GetIpoList.S2C s2c = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->s2c_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Qot_GetIpoList.Response)
}

::google::protobuf::uint8* Response::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Qot_GetIpoList.Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 retType = 1 [default = -400];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->rettype(), target);
  }

  // optional string retMsg = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->retmsg().data(), static_cast<int>(this->retmsg().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Qot_GetIpoList.Response.retMsg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->retmsg(), target);
  }

  // optional int32 errCode = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->errcode(), target);
  }

  // optional .Qot_GetIpoList.S2C s2c = 4;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, *this->s2c_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Qot_GetIpoList.Response)
  return target;
}

size_t Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Qot_GetIpoList.Response)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int32 retType = 1 [default = -400];
  if (has_rettype()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->rettype());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string retMsg = 2;
    if (has_retmsg()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->retmsg());
    }

    // optional .Qot_GetIpoList.S2C s2c = 4;
    if (has_s2c()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *this->s2c_);
    }

    // optional int32 errCode = 3;
    if (has_errcode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->errcode());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Response::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Qot_GetIpoList.Response)
  GOOGLE_DCHECK_NE(&from, this);
  const Response* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Response>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Qot_GetIpoList.Response)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Qot_GetIpoList.Response)
    MergeFrom(*source);
  }
}

void Response::MergeFrom(const Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Qot_GetIpoList.Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_retmsg();
      retmsg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.retmsg_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_s2c()->::Qot_GetIpoList::S2C::MergeFrom(from.s2c());
    }
    if (cached_has_bits & 0x00000004u) {
      errcode_ = from.errcode_;
    }
    if (cached_has_bits & 0x00000008u) {
      rettype_ = from.rettype_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Response::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Qot_GetIpoList.Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Response::CopyFrom(const Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Qot_GetIpoList.Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Response::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000008) != 0x00000008) return false;
  if (has_s2c()) {
    if (!this->s2c_->IsInitialized()) return false;
  }
  return true;
}

void Response::Swap(Response* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Response::InternalSwap(Response* other) {
  using std::swap;
  retmsg_.Swap(&other->retmsg_);
  swap(s2c_, other->s2c_);
  swap(errcode_, other->errcode_);
  swap(rettype_, other->rettype_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Response::GetMetadata() const {
  protobuf_Qot_5fGetIpoList_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Qot_5fGetIpoList_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace Qot_GetIpoList

// @@protoc_insertion_point(global_scope)
